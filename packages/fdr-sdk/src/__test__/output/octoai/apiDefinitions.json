[
  {
    "id": "cb786748-d42f-427d-9c21-00e6c59bd56c",
    "endpoints": {
      "endpoint_account.getAccount": {
        "id": "endpoint_account.getAccount",
        "namespace": [
          "subpackage_account"
        ],
        "description": "Return fields on an account",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/account"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:Account"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/account",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "name": "name",
                "email": "email",
                "provider": "provider",
                "key": "key",
                "status": "ready_trial",
                "country": "country",
                "company": "company"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/account \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_account.patchAccount": {
        "id": "endpoint_account.patchAccount",
        "namespace": [
          "subpackage_account"
        ],
        "description": "Update fields on account",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/v1/account"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "country",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "company",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:Account"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/account",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "country": "country",
                "company": "company"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "name": "name",
                "email": "email",
                "provider": "provider",
                "key": "key",
                "status": "ready_trial",
                "country": "country",
                "company": "company"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.octoai.cloud/v1/account \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"country\": \"country\",\n  \"company\": \"company\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_endpoint.createEndpoint": {
        "id": "endpoint_endpoint.createEndpoint",
        "namespace": [
          "subpackage_endpoint"
        ],
        "description": "Create new endpoint",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/endpoint"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EndpointCreate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EndpointResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/endpoint",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "name",
                "port": 1,
                "image_url": "image_url"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "name": "name",
                "port": 1,
                "replicas": [
                  {
                    "account_key": "account_key",
                    "endpoint_name": "endpoint_name",
                    "replica_id": "replica_id",
                    "status": "pending",
                    "restarts": 1,
                    "age": 1
                  }
                ],
                "auto_volume_experimental": true,
                "concurrency_per_replica": 1,
                "container_secrets": [
                  "container_secrets"
                ],
                "description": "description",
                "display_name": "display_name",
                "endpoint": "endpoint",
                "endpoint_state": "active",
                "env_overrides": {
                  "env_overrides": {
                    "key": "value"
                  }
                },
                "health_check_path": "health_check_path",
                "image_url": "image_url",
                "instance_type": "instance_type",
                "max_replicas": 1,
                "min_replicas": 1,
                "registry_credential": "registry_credential",
                "scale_to_zero": 1,
                "visibility": "private",
                "volumes_experimental": [
                  {
                    "name": "name",
                    "path": "path",
                    "mount": "mount"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/endpoint \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"name\",\n  \"port\": 1,\n  \"image_url\": \"image_url\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_endpoint.getEndpoint": {
        "id": "endpoint_endpoint.getEndpoint",
        "namespace": [
          "subpackage_endpoint"
        ],
        "description": "Return description of an endpoint",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/endpoint/"
          },
          {
            "type": "pathParameter",
            "value": "endpoint_name"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "endpoint_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The endpoint to retrieve"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EndpointResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/endpoint/endpoint_name",
            "responseStatusCode": 200,
            "pathParameters": {
              "endpoint_name": "endpoint_name"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "name": "name",
                "port": 1,
                "replicas": [
                  {
                    "account_key": "account_key",
                    "endpoint_name": "endpoint_name",
                    "replica_id": "replica_id",
                    "status": "pending",
                    "restarts": 1,
                    "age": 1
                  }
                ],
                "auto_volume_experimental": true,
                "concurrency_per_replica": 1,
                "container_secrets": [
                  "container_secrets"
                ],
                "description": "description",
                "display_name": "display_name",
                "endpoint": "endpoint",
                "endpoint_state": "active",
                "env_overrides": {
                  "env_overrides": {
                    "key": "value"
                  }
                },
                "health_check_path": "health_check_path",
                "image_url": "image_url",
                "instance_type": "instance_type",
                "max_replicas": 1,
                "min_replicas": 1,
                "registry_credential": "registry_credential",
                "scale_to_zero": 1,
                "visibility": "private",
                "volumes_experimental": [
                  {
                    "name": "name",
                    "path": "path",
                    "mount": "mount"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/endpoint/endpoint_name \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_endpoint.deleteEndpoint": {
        "id": "endpoint_endpoint.deleteEndpoint",
        "namespace": [
          "subpackage_endpoint"
        ],
        "description": "Delete an endpoint",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/v1/endpoint/"
          },
          {
            "type": "pathParameter",
            "value": "endpoint_name"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "endpoint_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The endpoint to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_endpoint:EndpointDeleteEndpointResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/endpoint/endpoint_name",
            "responseStatusCode": 200,
            "pathParameters": {
              "endpoint_name": "endpoint_name"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "message"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.octoai.cloud/v1/endpoint/endpoint_name \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_endpoint.patchEndpoint": {
        "id": "endpoint_endpoint.patchEndpoint",
        "namespace": [
          "subpackage_endpoint"
        ],
        "description": "Updates an endpoint",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/v1/endpoint/"
          },
          {
            "type": "pathParameter",
            "value": "endpoint_name"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "endpoint_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The endpoint to retrieve"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EndpointUpdate"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EndpointResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/endpoint/endpoint_name",
            "responseStatusCode": 200,
            "pathParameters": {
              "endpoint_name": "endpoint_name"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "name": "name",
                "port": 1,
                "replicas": [
                  {
                    "account_key": "account_key",
                    "endpoint_name": "endpoint_name",
                    "replica_id": "replica_id",
                    "status": "pending",
                    "restarts": 1,
                    "age": 1
                  }
                ],
                "auto_volume_experimental": true,
                "concurrency_per_replica": 1,
                "container_secrets": [
                  "container_secrets"
                ],
                "description": "description",
                "display_name": "display_name",
                "endpoint": "endpoint",
                "endpoint_state": "active",
                "env_overrides": {
                  "env_overrides": {
                    "key": "value"
                  }
                },
                "health_check_path": "health_check_path",
                "image_url": "image_url",
                "instance_type": "instance_type",
                "max_replicas": 1,
                "min_replicas": 1,
                "registry_credential": "registry_credential",
                "scale_to_zero": 1,
                "visibility": "private",
                "volumes_experimental": [
                  {
                    "name": "name",
                    "path": "path",
                    "mount": "mount"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.octoai.cloud/v1/endpoint/endpoint_name \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_endpoint.getEndpoints": {
        "id": "endpoint_endpoint.getEndpoints",
        "namespace": [
          "subpackage_endpoint"
        ],
        "description": "Return list of endpoints",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/endpoints"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EndpointResponse"
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v1/endpoints",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "name": "name",
                  "port": 1,
                  "replicas": [
                    {
                      "account_key": "account_key",
                      "endpoint_name": "endpoint_name",
                      "replica_id": "replica_id",
                      "status": "pending",
                      "restarts": 1,
                      "age": 1
                    }
                  ],
                  "auto_volume_experimental": true,
                  "concurrency_per_replica": 1,
                  "container_secrets": [
                    "container_secrets"
                  ],
                  "description": "description",
                  "display_name": "display_name",
                  "endpoint": "endpoint",
                  "endpoint_state": "active",
                  "env_overrides": {
                    "env_overrides": {
                      "key": "value"
                    }
                  },
                  "health_check_path": "health_check_path",
                  "image_url": "image_url",
                  "instance_type": "instance_type",
                  "max_replicas": 1,
                  "min_replicas": 1,
                  "registry_credential": "registry_credential",
                  "scale_to_zero": 1,
                  "visibility": "private",
                  "volumes_experimental": [
                    {
                      "name": "name",
                      "path": "path",
                      "mount": "mount"
                    }
                  ]
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/endpoints \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_endpoint.getContainerMetadata": {
        "id": "endpoint_endpoint.getContainerMetadata",
        "namespace": [
          "subpackage_endpoint"
        ],
        "description": "Return container metadata",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/endpoint/"
          },
          {
            "type": "pathParameter",
            "value": "endpoint_name"
          },
          {
            "type": "literal",
            "value": "/container/metadata"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "endpoint_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The endpoint name"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ContainerResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/endpoint/endpoint_name/container/metadata",
            "responseStatusCode": 200,
            "pathParameters": {
              "endpoint_name": "endpoint_name"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "image_url": "image_url",
                "exposed_ports": [
                  {
                    "port_num": 1,
                    "proto": "proto"
                  }
                ],
                "labels": {
                  "labels": "labels"
                },
                "env": [
                  "env"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/endpoint/endpoint_name/container/metadata \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_endpoint.getEndpointVolumeToken": {
        "id": "endpoint_endpoint.getEndpointVolumeToken",
        "namespace": [
          "subpackage_endpoint"
        ],
        "description": "Returns a token for accessing the volume",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/endpoint/"
          },
          {
            "type": "pathParameter",
            "value": "endpoint_name"
          },
          {
            "type": "literal",
            "value": "/volume_token"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "endpoint_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The endpoint name"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VolumeToken"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/endpoint/endpoint_name/volume_token",
            "responseStatusCode": 200,
            "pathParameters": {
              "endpoint_name": "endpoint_name"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "token": "token"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/endpoint/endpoint_name/volume_token \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_telemetry.getEndpointLogs": {
        "id": "endpoint_telemetry.getEndpointLogs",
        "namespace": [
          "subpackage_telemetry"
        ],
        "description": "Return endpoint logs",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/logs/"
          },
          {
            "type": "pathParameter",
            "value": "endpoint_name"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "endpoint_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The endpoint name"
          }
        ],
        "queryParameters": [
          {
            "key": "begin_time",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Optional begin of time range"
          },
          {
            "key": "end_time",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Optional end of time range"
          },
          {
            "key": "max_lines",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Maximum number of lines to return"
          },
          {
            "key": "replica_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Replica for which to fetch log output"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:LogEntry"
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v1/logs/endpoint_name",
            "responseStatusCode": 200,
            "pathParameters": {
              "endpoint_name": "endpoint_name"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "timestamp": "2024-01-15T09:30:00Z",
                  "replica_id": "replica_id",
                  "data": "data"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/logs/endpoint_name \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_telemetry.getEndpointLogsStream": {
        "id": "endpoint_telemetry.getEndpointLogsStream",
        "namespace": [
          "subpackage_telemetry"
        ],
        "description": "Return endpoint logs as stream",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/logs/"
          },
          {
            "type": "pathParameter",
            "value": "endpoint_name"
          },
          {
            "type": "literal",
            "value": "/stream"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "endpoint_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The endpoint name"
          }
        ],
        "queryParameters": [
          {
            "key": "replica_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Replica for which to fetch log output"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:LogEntry"
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v1/logs/endpoint_name/stream",
            "responseStatusCode": 200,
            "pathParameters": {
              "endpoint_name": "endpoint_name"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "timestamp": "2024-01-15T09:30:00Z",
                  "replica_id": "replica_id",
                  "data": "data"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/logs/endpoint_name/stream \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_telemetry.getEndpointEvents": {
        "id": "endpoint_telemetry.getEndpointEvents",
        "namespace": [
          "subpackage_telemetry"
        ],
        "description": "Return endpoint events",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/events/"
          },
          {
            "type": "pathParameter",
            "value": "endpoint_name"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "endpoint_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The endpoint name"
          }
        ],
        "queryParameters": [
          {
            "key": "begin_time",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Optional begin of time range"
          },
          {
            "key": "end_time",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Optional end of time range"
          },
          {
            "key": "max_lines",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Maximum number of lines to return"
          },
          {
            "key": "replica_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Replica for which to fetch log output"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EventEntry"
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v1/events/endpoint_name",
            "responseStatusCode": 200,
            "pathParameters": {
              "endpoint_name": "endpoint_name"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "timestamp": "2024-01-15T09:30:00Z",
                  "event": {
                    "type": "type",
                    "level": "normal",
                    "endpoint": "endpoint",
                    "tenant_id": "tenant_id",
                    "account_key": "account_key",
                    "instance_type": "instance_type"
                  },
                  "replica_id": "replica_id"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/events/endpoint_name \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_telemetry.getEndpointEventsStream": {
        "id": "endpoint_telemetry.getEndpointEventsStream",
        "namespace": [
          "subpackage_telemetry"
        ],
        "description": "Return endpoint events as stream",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/events/"
          },
          {
            "type": "pathParameter",
            "value": "endpoint_name"
          },
          {
            "type": "literal",
            "value": "/stream"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "endpoint_name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The endpoint name"
          }
        ],
        "queryParameters": [
          {
            "key": "replica_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Replica for which to fetch log output"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:EventEntry"
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v1/events/endpoint_name/stream",
            "responseStatusCode": 200,
            "pathParameters": {
              "endpoint_name": "endpoint_name"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "timestamp": "2024-01-15T09:30:00Z",
                  "event": {
                    "type": "type",
                    "level": "normal",
                    "endpoint": "endpoint",
                    "tenant_id": "tenant_id",
                    "account_key": "account_key",
                    "instance_type": "instance_type"
                  },
                  "replica_id": "replica_id"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/events/endpoint_name/stream \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_secret.createSecret": {
        "id": "endpoint_secret.createSecret",
        "namespace": [
          "subpackage_secret"
        ],
        "description": "Create new secret",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/secret"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SecretKeyValue"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SecretKeyValue"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/secret",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "key": "key",
                "value": "value"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "key": "key",
                "value": "value"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/secret \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"key\": \"key\",\n  \"value\": \"value\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_secret.getSecret": {
        "id": "endpoint_secret.getSecret",
        "namespace": [
          "subpackage_secret"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/secret/"
          },
          {
            "type": "pathParameter",
            "value": "key"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Key of the secret to retrieve"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SecretKeyValue"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/secret/key",
            "responseStatusCode": 200,
            "pathParameters": {
              "key": "key"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "key": "key",
                "value": "value"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/secret/key \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_secret.updateSecret": {
        "id": "endpoint_secret.updateSecret",
        "namespace": [
          "subpackage_secret"
        ],
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/v1/secret/"
          },
          {
            "type": "pathParameter",
            "value": "key"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Key of the secret to create or update"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "value",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SecretKeyValue"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/secret/key",
            "responseStatusCode": 200,
            "pathParameters": {
              "key": "key"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "value": "value"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "key": "key",
                "value": "value"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.octoai.cloud/v1/secret/key \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"value\": \"value\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_secret.deleteSecret": {
        "id": "endpoint_secret.deleteSecret",
        "namespace": [
          "subpackage_secret"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/v1/secret/"
          },
          {
            "type": "pathParameter",
            "value": "key"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Key of the secret to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_secret:SecretDeleteSecretResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/secret/key",
            "responseStatusCode": 200,
            "pathParameters": {
              "key": "key"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "message"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.octoai.cloud/v1/secret/key \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_secret.getSecrets": {
        "id": "endpoint_secret.getSecrets",
        "namespace": [
          "subpackage_secret"
        ],
        "description": "Return list of secrets",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/secrets"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v1/secrets",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                "string"
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/secrets \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_registryCredential.createRegistryCredential": {
        "id": "endpoint_registryCredential.createRegistryCredential",
        "namespace": [
          "subpackage_registryCredential"
        ],
        "description": "Create new registry credentials",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/registry-credential"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RegistryCredential"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RegistryCredentialSummary"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/registry-credential",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "key": "key",
                "username": "username",
                "password": "password"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "key": "key",
                "username": "username"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/registry-credential \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"key\": \"key\",\n  \"username\": \"username\",\n  \"password\": \"password\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_registryCredential.getRegistryCredential": {
        "id": "endpoint_registryCredential.getRegistryCredential",
        "namespace": [
          "subpackage_registryCredential"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/registry-credential/"
          },
          {
            "type": "pathParameter",
            "value": "key"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Key of the registry credential to retrieve"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RegistryCredential"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/registry-credential/key",
            "responseStatusCode": 200,
            "pathParameters": {
              "key": "key"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "key": "key",
                "username": "username",
                "password": "password"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/registry-credential/key \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_registryCredential.updateRegistryCredential": {
        "id": "endpoint_registryCredential.updateRegistryCredential",
        "namespace": [
          "subpackage_registryCredential"
        ],
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/v1/registry-credential/"
          },
          {
            "type": "pathParameter",
            "value": "key"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Key of the registry credential to create or update"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "username",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "password",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RegistryCredentialSummary"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/registry-credential/key",
            "responseStatusCode": 200,
            "pathParameters": {
              "key": "key"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "key": "key",
                "username": "username"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.octoai.cloud/v1/registry-credential/key \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_registryCredential.deleteRegistryCredential": {
        "id": "endpoint_registryCredential.deleteRegistryCredential",
        "namespace": [
          "subpackage_registryCredential"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/v1/registry-credential/"
          },
          {
            "type": "pathParameter",
            "value": "key"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "pathParameters": [
          {
            "key": "key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Key of the registry credential to delete"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_registryCredential:RegistryCredentialDeleteRegistryCredentialResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v1/registry-credential/key",
            "responseStatusCode": 200,
            "pathParameters": {
              "key": "key"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "message"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.octoai.cloud/v1/registry-credential/key \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_registryCredential.getRegistryCredentials": {
        "id": "endpoint_registryCredential.getRegistryCredentials",
        "namespace": [
          "subpackage_registryCredential"
        ],
        "description": "Return list of registry credentials",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/registry-credentials"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:RegistryCredentialSummary"
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v1/registry-credentials",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "key": "key",
                  "username": "username"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/registry-credentials \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_publicEndpoint.getPublicEndpoints": {
        "id": "endpoint_publicEndpoint.getPublicEndpoints",
        "namespace": [
          "subpackage_publicEndpoint"
        ],
        "description": "Return list of public, OctoAI-deployed endpoints",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/public-endpoints"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:HostedEndpoint"
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v1/public-endpoints",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "endpoint": "endpoint",
                  "name": "name",
                  "port": 1,
                  "auto_volume_experimental": true,
                  "concurrency_per_replica": 1,
                  "container_secrets": [
                    "container_secrets"
                  ],
                  "description": "description",
                  "display_name": "display_name",
                  "endpoint_state": "active",
                  "env_overrides": {
                    "env_overrides": {
                      "key": "value"
                    }
                  },
                  "health_check_path": "health_check_path",
                  "image_url": "image_url",
                  "instance_type": "instance_type",
                  "is_live": true,
                  "max_replicas": 1,
                  "min_replicas": 1,
                  "registry_credential": "registry_credential",
                  "scale_to_zero": 1,
                  "visibility": "private",
                  "volumes_experimental": [
                    {
                      "name": "name",
                      "path": "path",
                      "mount": "mount"
                    }
                  ]
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/public-endpoints \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_instanceTypes.getInstanceTypes": {
        "id": "endpoint_instanceTypes.getInstanceTypes",
        "namespace": [
          "subpackage_instanceTypes"
        ],
        "description": "Return list of available instance types to deploy an endpoint to",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/instance-types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.octoai.cloud"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:InstanceTypeInfo"
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v1/instance-types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "instance_name": "instance_name",
                  "display_name": "display_name",
                  "vcpu": 1,
                  "ram": 1,
                  "vram": 1,
                  "accelerator": "none",
                  "available": true,
                  "price": 1.1
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/instance-types \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_endpoint:EndpointDeleteEndpointResponse": {
        "name": "EndpointDeleteEndpointResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_secret:SecretDeleteSecretResponse": {
        "name": "SecretDeleteSecretResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_registryCredential:RegistryCredentialDeleteRegistryCredentialResponse": {
        "name": "RegistryCredentialDeleteRegistryCredentialResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AccountStatus": {
        "name": "AccountStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ready_trial"
            },
            {
              "value": "ready_billed"
            },
            {
              "value": "suspended_billing"
            },
            {
              "value": "suspended_tos"
            },
            {
              "value": "error"
            }
          ]
        }
      },
      "type_:Account": {
        "name": "Account",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "provider",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "company",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AccountStatus"
                }
              }
            }
          ]
        }
      },
      "type_:EndpointUpdateVisibility": {
        "name": "EndpointUpdateVisibility",
        "description": "Visibility of the endpoint",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "private"
            },
            {
              "value": "public"
            }
          ]
        }
      },
      "type_:EndpointUpdateEndpointState": {
        "name": "EndpointUpdateEndpointState",
        "description": "State of a endpoint",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "active"
            },
            {
              "value": "disabled"
            }
          ]
        }
      },
      "type_:EndpointUpdate": {
        "name": "EndpointUpdate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "min_replicas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                      }
                    }
                  }
                }
              },
              "description": "Minimum number of replicas"
            },
            {
              "key": "max_replicas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                      }
                    }
                  }
                }
              },
              "description": "Maximum number of replicas"
            },
            {
              "key": "scale_to_zero",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 3600
                      }
                    }
                  }
                }
              },
              "description": "Time to scale to zero (in seconds)"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": ""
                      }
                    }
                  }
                }
              },
              "description": "User-friendly name of the endpoint (e.g. Stable Diffusion 2.1)"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": ""
                      }
                    }
                  }
                }
              },
              "description": "Description of the endpoint"
            },
            {
              "key": "image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the docker image"
            },
            {
              "key": "registry_credential",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The key of a registry credential used to authenticate to a private registry"
            },
            {
              "key": "health_check_path",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL path of a health check endpoint"
            },
            {
              "key": "visibility",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:EndpointUpdateVisibility"
                    }
                  }
                }
              },
              "description": "Visibility of the endpoint"
            },
            {
              "key": "endpoint_state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:EndpointUpdateEndpointState"
                    }
                  }
                }
              },
              "description": "State of a endpoint"
            },
            {
              "key": "env_overrides",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "JSON object with environment variable overrides"
            },
            {
              "key": "instance_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Endpoint to query against"
            },
            {
              "key": "container_secrets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of container secrets to inject as environment variables"
            },
            {
              "key": "concurrency_per_replica",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 500
                      }
                    }
                  }
                }
              },
              "description": "The maximum concurrency per replica"
            }
          ]
        }
      },
      "type_:EndpointCreate": {
        "name": "EndpointCreate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the endpoint"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": ""
                      }
                    }
                  }
                }
              },
              "description": "User-friendly name of the endpoint (e.g. Stable Diffusion 2.1)"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": ""
                      }
                    }
                  }
                }
              },
              "description": "Description of the endpoint"
            },
            {
              "key": "port",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Port number of the endpoint"
            },
            {
              "key": "health_check_path",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL path of a health check endpoint"
            },
            {
              "key": "auto_volume_experimental",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "EXPERIMENTAL: autogenerate a volume for the endpoint"
            },
            {
              "key": "volumes_experimental",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:VolumeExperimental"
                        }
                      }
                    }
                  }
                }
              },
              "description": "EXPERIMENTAL: volumes to be used by this container"
            },
            {
              "key": "min_replicas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                      }
                    }
                  }
                }
              },
              "description": "Minimum number of replicas"
            },
            {
              "key": "max_replicas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 999
                      }
                    }
                  }
                }
              },
              "description": "Maximum number of replicas"
            },
            {
              "key": "scale_to_zero",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 3600
                      }
                    }
                  }
                }
              },
              "description": "Time to scale to zero (in seconds)"
            },
            {
              "key": "image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the docker image"
            },
            {
              "key": "registry_credential",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The key of a registry credential used to authenticate to a private registry"
            },
            {
              "key": "visibility",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:EndpointUpdateVisibility"
                    }
                  }
                }
              },
              "description": "Visibility of the endpoint"
            },
            {
              "key": "endpoint_state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:EndpointUpdateEndpointState"
                    }
                  }
                }
              },
              "description": "State of a endpoint"
            },
            {
              "key": "env_overrides",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "JSON object with environment variable overrides"
            },
            {
              "key": "instance_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Endpoint to query against"
            },
            {
              "key": "container_secrets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list of container secrets to inject as environment variables"
            },
            {
              "key": "concurrency_per_replica",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 500
                      }
                    }
                  }
                }
              },
              "description": "The maximum concurrency per replica"
            }
          ]
        }
      },
      "type_:VolumeExperimental": {
        "name": "VolumeExperimental",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "path",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ContainerPort": {
        "name": "ContainerPort",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "port_num",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              }
            },
            {
              "key": "proto",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ContainerResponse": {
        "name": "ContainerResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "URL of the docker image"
            },
            {
              "key": "exposed_ports",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ContainerPort"
                    }
                  }
                }
              },
              "description": "Ports exposed by container"
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Labels for container"
            },
            {
              "key": "env",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Env is a list of environment variables to be used in a container"
            }
          ]
        }
      },
      "type_:VolumeToken": {
        "name": "VolumeToken",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Opaque token for accessing the volume using OctoAI tooling (e.g. CLI)"
            }
          ]
        }
      },
      "type_:SecretKeyValue": {
        "name": "SecretKeyValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Secret key"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Secret value"
            }
          ]
        }
      },
      "type_:RegistryCredential": {
        "name": "RegistryCredential",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The lookup key for this credential"
            },
            {
              "key": "username",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Username corresponding to this credential"
            },
            {
              "key": "password",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The password for the credential"
            }
          ]
        }
      },
      "type_:RegistryCredentialSummary": {
        "name": "RegistryCredentialSummary",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The lookup key for this credntial"
            },
            {
              "key": "username",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Username corresponding to this credential"
            }
          ]
        }
      },
      "type_:AggregationEnum": {
        "name": "AggregationEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "1m"
            },
            {
              "value": "30m"
            },
            {
              "value": "1h"
            },
            {
              "value": "24h"
            }
          ]
        }
      },
      "type_:MetricEntry": {
        "name": "MetricEntry",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "count_2xx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              },
              "description": "the number of 2xx response codes"
            },
            {
              "key": "count_3xx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              },
              "description": "the number of 3xx response codes"
            },
            {
              "key": "count_4xx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              },
              "description": "the number of 4xx response codes"
            },
            {
              "key": "count_5xx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              },
              "description": "the number of 5xx response codes"
            },
            {
              "key": "p99_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              },
              "description": "the quantile for p99 response times in milliseconds"
            },
            {
              "key": "p95_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              },
              "description": "the quantile for p95 response times in milliseconds"
            },
            {
              "key": "p50_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              },
              "description": "the quantile for p50 response times in milliseconds"
            }
          ]
        }
      },
      "type_:EventEntry": {
        "name": "EventEntry",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "timestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "time of the log entry (ISO8601 format)"
            },
            {
              "key": "replica_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "optional replica id associated with the event"
            },
            {
              "key": "event",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Event"
                }
              },
              "description": "event log data"
            }
          ]
        }
      },
      "type_:EventLevel": {
        "name": "EventLevel",
        "description": "type of event",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "normal"
            },
            {
              "value": "warning"
            }
          ]
        }
      },
      "type_:Event": {
        "name": "Event",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "level",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:EventLevel"
                    }
                  }
                }
              },
              "description": "type of event"
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "type of the event"
            },
            {
              "key": "endpoint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "name of the endpoint"
            },
            {
              "key": "tenant_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the tenant"
            },
            {
              "key": "account_key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Key of the account"
            },
            {
              "key": "instance_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "type of instance this event occurred on"
            },
            {
              "key": "details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "extra details about this event"
            }
          ]
        }
      },
      "type_:LogEntry": {
        "name": "LogEntry",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "timestamp",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "time of the log entry (ISO8601 format)"
            },
            {
              "key": "replica_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "unique ID of the replica"
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "user-provided log data"
            }
          ]
        }
      },
      "type_:ReplicaStatus": {
        "name": "ReplicaStatus",
        "description": "status of the replica",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "pending"
            },
            {
              "value": "running"
            },
            {
              "value": "succeeded"
            },
            {
              "value": "failed"
            },
            {
              "value": "unknown"
            }
          ]
        }
      },
      "type_:Replica": {
        "name": "Replica",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "account_key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "account key for this replica"
            },
            {
              "key": "endpoint_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "endpoint name"
            },
            {
              "key": "replica_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "unique ID of the replica"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ReplicaStatus"
                }
              },
              "description": "status of the replica"
            },
            {
              "key": "restarts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              }
            },
            {
              "key": "age",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "number of seconds this replica has been ready. set to -1 if replica is not ready"
            }
          ]
        }
      },
      "type_:EndpointResponse": {
        "name": "EndpointResponse",
        "shape": {
          "type": "object",
          "extends": [
            "type_:EndpointCreate"
          ],
          "properties": [
            {
              "key": "endpoint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Endpoint to query against"
            },
            {
              "key": "replicas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Replica"
                    }
                  }
                }
              },
              "description": "Active replicas for the endpoint"
            }
          ]
        }
      },
      "type_:HostedEndpoint": {
        "name": "HostedEndpoint",
        "shape": {
          "type": "object",
          "extends": [
            "type_:EndpointCreate"
          ],
          "properties": [
            {
              "key": "endpoint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Endpoint to query against"
            },
            {
              "key": "is_live",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "If this endpoint should be considered live or not"
            }
          ]
        }
      },
      "type_:InstanceTypeInfoAccelerator": {
        "name": "InstanceTypeInfoAccelerator",
        "description": "Type of accelerator attached to this instance type",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "none"
            },
            {
              "value": "gpu"
            }
          ]
        }
      },
      "type_:InstanceTypeInfo": {
        "name": "InstanceTypeInfo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "instance_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "String to specify when creating/updating an endpoint"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "User-friendly name of the instance type"
            },
            {
              "key": "vcpu",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Number of vCPUs available on the instance type"
            },
            {
              "key": "ram",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Amount of memory in GB available on the instance type"
            },
            {
              "key": "vram",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Amount of video memory in GB available on the instance type"
            },
            {
              "key": "accelerator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:InstanceTypeInfoAccelerator"
                }
              },
              "description": "Type of accelerator attached to this instance type"
            },
            {
              "key": "available",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "If the hardware target is available right now"
            },
            {
              "key": "price",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "Price per second in dollars (e.g. 0.0001 for 1/100th of a cent) to use this instance type"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_account": {
        "id": "subpackage_account",
        "name": "account",
        "displayName": "Account"
      },
      "subpackage_endpoint": {
        "id": "subpackage_endpoint",
        "name": "endpoint",
        "displayName": "Endpoint"
      },
      "subpackage_telemetry": {
        "id": "subpackage_telemetry",
        "name": "telemetry"
      },
      "subpackage_secret": {
        "id": "subpackage_secret",
        "name": "secret",
        "displayName": "Secret"
      },
      "subpackage_registryCredential": {
        "id": "subpackage_registryCredential",
        "name": "registryCredential"
      },
      "subpackage_publicEndpoint": {
        "id": "subpackage_publicEndpoint",
        "name": "publicEndpoint"
      },
      "subpackage_instanceTypes": {
        "id": "subpackage_instanceTypes",
        "name": "instanceTypes"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    }
  },
  {
    "id": "2eeac53f-90cc-492b-9d29-e3ed711d7704",
    "endpoints": {
      "endpoint_.upscale": {
        "id": "endpoint_.upscale",
        "namespace": [],
        "description": "Upscale the given image.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/upscaling"
          }
        ],
        "environments": [],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "face_enhance",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "True to enable the face enhancer model variant"
              },
              {
                "key": "init_image_url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "init_image",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "model",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:UpscalingModel"
                      }
                    }
                  }
                },
                "description": "One of UpscalingModel, identifies the upscaling model to use."
              },
              {
                "key": "output_image_height",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "output_image_width",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "output_image_encoding",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:ImageEncoding"
                      }
                    }
                  }
                },
                "description": "Define which encoding process should be applied before returning the modified image."
              },
              {
                "key": "scale",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ImageResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/upscaling",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "removed_for_safety": true,
                "image_b64": "image_b64"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /upscaling \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/upscaling",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /upscaling \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_.remove_background": {
        "id": "endpoint_.remove_background",
        "namespace": [],
        "description": "Remove background from the given image.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/background-removal"
          }
        ],
        "environments": [],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "init_image",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "init_image_url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "output_image_encoding",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "unknown"
                      }
                    }
                  }
                }
              },
              {
                "key": "alpha_matting",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "alpha_matting_foreground_threshold",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 255
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "alpha_matting_background_threshold",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 255
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "alpha_matting_erode_size",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 255
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "only_mask",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "post_process_mask",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "bgcolor",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ImageResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/background-removal",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "removed_for_safety": true,
                "image_b64": "image_b64"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /background-removal \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/background-removal",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /background-removal \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_.generate_images": {
        "id": "endpoint_.generate_images",
        "namespace": [],
        "description": "Detail the given image.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/adetailer"
          }
        ],
        "environments": [],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "init_image",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "init_image_url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "image_encoding",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:ImageEncoding"
                      }
                    }
                  }
                },
                "description": "Define which encoding process should be applied before returning the modified image."
              },
              {
                "key": "transfer_images",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "optional",
                            "shape": {
                              "type": "alias",
                              "value": {
                                "type": "list",
                                "itemShape": {
                                  "type": "alias",
                                  "value": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "prompt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "negative_prompt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sampler",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Scheduler"
                      }
                    }
                  }
                }
              },
              {
                "key": "steps",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "default": 20
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "inpainting_base_model",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:ADetailerInpaintingBaseModel"
                      }
                    }
                  }
                }
              },
              {
                "key": "checkpoint",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "loras",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "optional",
                            "shape": {
                              "type": "alias",
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "double"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "use_refiner",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "style_preset",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "default": "base"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "strength",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "maximum": 1,
                          "default": 0.9
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "cfg_scale",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "maximum": 50,
                          "default": 7.5
                        }
                      }
                    }
                  }
                },
                "description": "Floating-point number represeting how closely to adhere to prompt description. Must be a positive number no greater than 50.0."
              },
              {
                "key": "seed",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:ADetailerRequestSeed"
                      }
                    }
                  }
                },
                "description": "Integer number or list of integers representing the seeds of random generators. Fixing random seed is useful when attempting to generate a specific image. Must be greater than 0 and less than 2^32."
              },
              {
                "key": "mask_dilation",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "default": 4
                        }
                      }
                    }
                  }
                },
                "description": "A mask is created for each inpainted area in the image. Mask Dilation allows you to expand the size of the mask while maintaining its shape. This technique is typically used to reduce artifacts near borders in the mask. This parameter is the size, in pixels, of the dilation kernel to apply. Defaults to 4. Must be greater than or equal to 0 and recommended to be less than 64."
              },
              {
                "key": "mask_blur",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "default": 4
                        }
                      }
                    }
                  }
                },
                "description": "A mask is created for each inpainted area in the image. After dilation (see mask_dilation parameter), the mask is blurred. This technique is typically used to smoothly blend the inpainted area with the original image. This option specifies the radius, in pixels, of the gaussian blur kernel. The higher the value, the wider the blur. Defaults to 4. Must be greater than or equal to 0 and recommended to be less than 64."
              },
              {
                "key": "mask_padding",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "default": 32
                        }
                      }
                    }
                  }
                },
                "description": "Each inpainted area is passed to the image-to-image generator with some surrounding context. The contextual area is created by padding the area occupied by the blurred, dilated mask. This technique improves inpainting quality, and the contextual area is not modified. This parameter specifies the amount of padding, in pixels, to apply around the processed mask. When the computed padding goes off the edge of the image, the padded area is slid towards the center of the image. Must be greater than or equal to 0 and recommended to be less than 10% the size of an inpainting mask."
              },
              {
                "key": "max_num_detections",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "confidence",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "default": 0.3
                        }
                      }
                    }
                  }
                },
                "description": "Inpainted areas are determined using a detector. This setting adjusts the sensitivity of the detector (lower considers more image fragments for inpainting). "
              },
              {
                "key": "detector",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:ADetailerDetector"
                  }
                },
                "description": "Detection model to use. Configures whether e.g. faces or hands or people are targeted for after-detailing."
              },
              {
                "key": "union_masks",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "When true, create a single mask by unioning the mask for each detected object together, then send a single inpainting request to the backing model."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ADetailerResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/adetailer",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "detector": "face_yolov8n"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "num_objects_inpainted": 1,
                "num_objects_detected": 1,
                "num_removed_for_safety": 1,
                "image_b64": "image_b64"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /adetailer \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"detector\": \"face_yolov8n\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/adetailer",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "detector": "face_yolov8n"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST /adetailer \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"detector\": \"face_yolov8n\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_:ADetailerRequestSeed": {
        "name": "ADetailerRequestSeed",
        "description": "Integer number or list of integers representing the seeds of random generators. Fixing random seed is useful when attempting to generate a specific image. Must be greater than 0 and less than 2^32.",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ADetailerDetector": {
        "name": "ADetailerDetector",
        "description": "ADetailer detector models available.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "face_yolov8n"
            },
            {
              "value": "hand_yolov8n"
            },
            {
              "value": "face_full_mediapipe"
            },
            {
              "value": "face_short_mediapipe"
            },
            {
              "value": "face_mesh_mediapipe"
            },
            {
              "value": "eyes_mesh_mediapipe"
            },
            {
              "value": "face_hair_mediapipe"
            }
          ]
        }
      },
      "type_:ADetailerInpaintingBaseModel": {
        "name": "ADetailerInpaintingBaseModel",
        "description": "Base model which ADetailer should use for inpainting.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "sdxl"
            },
            {
              "value": "sd15"
            }
          ]
        }
      },
      "type_:ADetailerResponse": {
        "name": "ADetailerResponse",
        "description": "Represent an adetailed image.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "image_b64",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "num_objects_inpainted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The number of objects that were successfully inpainted."
            },
            {
              "key": "num_objects_detected",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The number of objects that were successfully detected."
            },
            {
              "key": "num_removed_for_safety",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Number of inpainting requests that violated the OctoAI Terms of Service."
            }
          ]
        }
      },
      "type_:HTTPValidationError": {
        "name": "HTTPValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "detail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ValidationError"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ImageEncoding": {
        "name": "ImageEncoding",
        "description": "The image encoding types available for image modification response.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "jpeg"
            },
            {
              "value": "png"
            }
          ]
        }
      },
      "type_:ImageResponse": {
        "name": "ImageResponse",
        "description": "Represent a generated image.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "image_b64",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "removed_for_safety",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "True if the image was removed for safety, False otherwise."
            }
          ]
        }
      },
      "type_:Scheduler": {
        "name": "Scheduler",
        "description": "The schedulers available for image generation.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PNDM"
            },
            {
              "value": "LMS"
            },
            {
              "value": "KLMS"
            },
            {
              "value": "DDIM"
            },
            {
              "value": "DDPM"
            },
            {
              "value": "HEUN"
            },
            {
              "value": "K_HEUN"
            },
            {
              "value": "K_EULER"
            },
            {
              "value": "K_EULER_ANCESTRAL"
            },
            {
              "value": "DPM_SOLVER_MULTISTEP"
            },
            {
              "value": "DPM_PLUS_PLUS_2M_KARRAS"
            },
            {
              "value": "DPM_SINGLE"
            },
            {
              "value": "DPM_2"
            },
            {
              "value": "DPM_2_ANCESTRAL"
            },
            {
              "value": "DPM_PLUS_PLUS_SDE_KARRAS"
            },
            {
              "value": "UNI_PC"
            },
            {
              "value": "LCM"
            }
          ]
        }
      },
      "type_:UpscalingModel": {
        "name": "UpscalingModel",
        "description": "Specifies models either in the API or in server config.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "real-esrgan-x4-plus"
            },
            {
              "value": "real-esrgan-x4-v3"
            },
            {
              "value": "real-esrgan-x4-v3-wdn"
            },
            {
              "value": "real-esrgan-animevideo-v3"
            },
            {
              "value": "real-esrgan-x4-plus-anime"
            },
            {
              "value": "real-esrgan-x2-plus"
            }
          ]
        }
      },
      "type_:ValidationErrorLocItem": {
        "name": "ValidationErrorLocItem",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ValidationError": {
        "name": "ValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "loc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ValidationErrorLocItem"
                    }
                  }
                }
              }
            },
            {
              "key": "msg",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "subpackages": {},
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "apiKey"
      }
    }
  },
  {
    "id": "270fcb14-fecb-45b5-8075-3e207a0d4b31",
    "endpoints": {
      "endpoint_asset-library.list": {
        "id": "endpoint_asset-library.list",
        "namespace": [
          "subpackage_asset-library"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/assets"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "queryParameters": [
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "is_public",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "data_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_asset-library:DataType"
                  }
                }
              }
            }
          },
          {
            "key": "asset_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_asset-library:AssetType"
                  }
                }
              }
            }
          },
          {
            "key": "engine",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_asset-library:BaseEngine"
                  }
                }
              }
            }
          },
          {
            "key": "engine_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_asset-library:BaseEngineType"
                  }
                }
              }
            }
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "get_preview_urls",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "asset_ids",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "owner",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_asset-library:ListAssetsResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_asset-library:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/assets",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [],
                "has_more": true,
                "total": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/assets",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.list();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/assets",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "name": "string",
              "is_public": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.octoai.cloud/v1/assets \\\n     -d name=string \\\n     -d is_public=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.list();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.assetLibrary.list(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "name: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "name"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "isPublic: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "is_public"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "fp16": "OctoAI.DataType.Fp16",
                            "fp32": "OctoAI.DataType.Fp32",
                            "int4": "OctoAI.DataType.Int4",
                            "int8": "OctoAI.DataType.Int8"
                          },
                          "templateString": "dataType: $FERN_INPUT",
                          "templateInput": {
                            "location": "QUERY",
                            "path": "data_type"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "file": "OctoAI.AssetType.File",
                            "checkpoint": "OctoAI.AssetType.Checkpoint",
                            "lora": "OctoAI.AssetType.Lora",
                            "textual_inversion": "OctoAI.AssetType.TextualInversion",
                            "vae": "OctoAI.AssetType.Vae",
                            "latent": "OctoAI.AssetType.Latent"
                          },
                          "templateString": "assetType: $FERN_INPUT",
                          "templateInput": {
                            "location": "QUERY",
                            "path": "asset_type"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "text/llama-2-7b": "OctoAI.BaseEngine.TextLlama27B",
                            "text/llama-2-13b": "OctoAI.BaseEngine.TextLlama213B",
                            "text/llama-2-70b": "OctoAI.BaseEngine.TextLlama270B",
                            "text/codellama-7b": "OctoAI.BaseEngine.TextCodellama7B",
                            "text/codellama-13b": "OctoAI.BaseEngine.TextCodellama13B",
                            "text/codellama-34b": "OctoAI.BaseEngine.TextCodellama34B",
                            "text/codellama-70b": "OctoAI.BaseEngine.TextCodellama70B",
                            "text/mistral-7b": "OctoAI.BaseEngine.TextMistral7B",
                            "text/mixtral-8x7b": "OctoAI.BaseEngine.TextMixtral8X7B",
                            "image/controlnet-sd15": "OctoAI.BaseEngine.ImageControlnetSd15",
                            "image/controlnet-sdxl": "OctoAI.BaseEngine.ImageControlnetSdxl",
                            "image/stable-diffusion-v1-5": "OctoAI.BaseEngine.ImageStableDiffusionV15",
                            "image/stable-diffusion-xl-v1-0": "OctoAI.BaseEngine.ImageStableDiffusionXlV10",
                            "image/stable-diffusion-ssd": "OctoAI.BaseEngine.ImageStableDiffusionSsd",
                            "audio/tortoise-tts": "OctoAI.BaseEngine.AudioTortoiseTts",
                            "audio/rvc": "OctoAI.BaseEngine.AudioRvc"
                          },
                          "templateString": "engine: $FERN_INPUT",
                          "templateInput": {
                            "location": "QUERY",
                            "path": "engine"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "text": "OctoAI.BaseEngineType.Text",
                            "image": "OctoAI.BaseEngineType.Image",
                            "audio": "OctoAI.BaseEngineType.Audio"
                          },
                          "templateString": "engineType: $FERN_INPUT",
                          "templateInput": {
                            "location": "QUERY",
                            "path": "engine_type"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "offset: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "offset"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "getPreviewUrls: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "get_preview_urls"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "assetIds: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "asset_ids"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "owner: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "owner"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.asset_library.list(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "name=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "name",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "is_public=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "is_public",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "data_type=$FERN_INPUT",
                    "values": {
                      "fp16": "\"fp16\"",
                      "fp32": "\"fp32\"",
                      "int4": "\"int4\"",
                      "int8": "\"int8\""
                    },
                    "templateInput": {
                      "location": "QUERY",
                      "path": "data_type"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "asset_type=$FERN_INPUT",
                    "values": {
                      "file": "\"file\"",
                      "checkpoint": "\"checkpoint\"",
                      "lora": "\"lora\"",
                      "textual_inversion": "\"textual_inversion\"",
                      "vae": "\"vae\"",
                      "latent": "\"latent\""
                    },
                    "templateInput": {
                      "location": "QUERY",
                      "path": "asset_type"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "engine=$FERN_INPUT",
                    "values": {
                      "text/llama-2-7b": "\"text/llama-2-7b\"",
                      "text/llama-2-13b": "\"text/llama-2-13b\"",
                      "text/llama-2-70b": "\"text/llama-2-70b\"",
                      "text/codellama-7b": "\"text/codellama-7b\"",
                      "text/codellama-13b": "\"text/codellama-13b\"",
                      "text/codellama-34b": "\"text/codellama-34b\"",
                      "text/codellama-70b": "\"text/codellama-70b\"",
                      "text/mistral-7b": "\"text/mistral-7b\"",
                      "text/mixtral-8x7b": "\"text/mixtral-8x7b\"",
                      "image/controlnet-sd15": "\"image/controlnet-sd15\"",
                      "image/controlnet-sdxl": "\"image/controlnet-sdxl\"",
                      "image/stable-diffusion-v1-5": "\"image/stable-diffusion-v1-5\"",
                      "image/stable-diffusion-xl-v1-0": "\"image/stable-diffusion-xl-v1-0\"",
                      "image/stable-diffusion-ssd": "\"image/stable-diffusion-ssd\"",
                      "audio/tortoise-tts": "\"audio/tortoise-tts\"",
                      "audio/rvc": "\"audio/rvc\""
                    },
                    "templateInput": {
                      "location": "QUERY",
                      "path": "engine"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "engine_type=$FERN_INPUT",
                    "values": {
                      "text": "\"text\"",
                      "image": "\"image\"",
                      "audio": "\"audio\""
                    },
                    "templateInput": {
                      "location": "QUERY",
                      "path": "engine_type"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "limit=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "limit",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "offset=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "offset",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "get_preview_urls=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "get_preview_urls",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "asset_ids=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "asset_ids",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "owner=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "owner",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_asset-library.create": {
        "id": "endpoint_asset-library.create",
        "namespace": [
          "subpackage_asset-library"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/assets"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "asset_type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_asset-library:AssetType"
                  }
                },
                "description": "Asset type."
              },
              {
                "key": "data",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_asset-library:Data"
                  }
                },
                "description": "Asset data."
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "hf_repo",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "hf_token_secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "is_public",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "True if asset is public."
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Asset name."
              },
              {
                "key": "skip_validation",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Skip asset validation."
              },
              {
                "key": "transfer_api_type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_asset-library:TransferApiType"
                      }
                    }
                  }
                },
                "description": "Transfer API type."
              },
              {
                "key": "url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 1
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_asset-library:CreateAssetResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_asset-library:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/assets",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "asset_type": "file",
                "data": {
                  "asset_type": "checkpoint",
                  "engine": "text/llama-2-7b"
                },
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "asset": {
                  "asset_type": "file",
                  "created_at": "string",
                  "data": {
                    "asset_type": "checkpoint",
                    "engine": "text/llama-2-7b",
                    "data_type": "fp16",
                    "file_format": "safetensors"
                  },
                  "description": "string",
                  "id": "string",
                  "name": "string",
                  "size_bytes": 0,
                  "status": "ready_to_upload",
                  "status_details": "string",
                  "tenant_uuid": "string",
                  "file_structure": "unknown",
                  "hf_repo": "string",
                  "is_public": true,
                  "status_info": {
                    "string": {}
                  },
                  "url": "string"
                },
                "transfer_api": {
                  "type": "none"
                },
                "token": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/assets \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"asset_type\": \"file\",\n  \"data\": {\n    \"asset_type\": \"checkpoint\",\n    \"engine\": \"text/llama-2-7b\"\n  },\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.asset_library import Data_Checkpoint\nfrom octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.create(\n    asset_type=\"file\",\n    data=Data_Checkpoint(\n        data_type=\"fp16\",\n        engine=\"text/llama-2-7b\",\n        file_format=\"safetensors\",\n    ),\n    description=\"string\",\n    hf_repo=\"string\",\n    hf_token_secret=\"string\",\n    is_public=True,\n    name=\"string\",\n    skip_validation=True,\n    transfer_api_type=\"presigned-url\",\n    url=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient, OctoAI } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.create({\n    assetType: OctoAI.AssetType.File,\n    data: {\n        assetType: \"checkpoint\",\n        dataType: OctoAI.DataType.Fp16,\n        engine: OctoAI.BaseEngine.TextLlama27B,\n        fileFormat: OctoAI.FileFormat.Safetensors\n    },\n    description: \"string\",\n    hfRepo: \"string\",\n    hfTokenSecret: \"string\",\n    isPublic: true,\n    name: \"string\",\n    skipValidation: true,\n    transferApiType: OctoAI.TransferApiType.PresignedUrl,\n    url: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/assets",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "asset_type": "file",
                "data": {
                  "asset_type": "checkpoint",
                  "engine": "text/llama-2-7b"
                },
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/assets \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"asset_type\": \"file\",\n  \"data\": {\n    \"asset_type\": \"checkpoint\",\n    \"engine\": \"text/llama-2-7b\"\n  },\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.asset_library import Data_Checkpoint\nfrom octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.create(\n    asset_type=\"file\",\n    data=Data_Checkpoint(\n        data_type=\"fp16\",\n        engine=\"text/llama-2-7b\",\n        file_format=\"safetensors\",\n    ),\n    description=\"string\",\n    hf_repo=\"string\",\n    hf_token_secret=\"string\",\n    is_public=True,\n    name=\"string\",\n    skip_validation=True,\n    transfer_api_type=\"presigned-url\",\n    url=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient, OctoAI } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.create({\n    assetType: OctoAI.AssetType.File,\n    data: {\n        assetType: \"checkpoint\",\n        dataType: OctoAI.DataType.Fp16,\n        engine: OctoAI.BaseEngine.TextLlama27B,\n        fileFormat: OctoAI.FileFormat.Safetensors\n    },\n    description: \"string\",\n    hfRepo: \"string\",\n    hfTokenSecret: \"string\",\n    isPublic: true,\n    name: \"string\",\n    skipValidation: true,\n    transferApiType: OctoAI.TransferApiType.PresignedUrl,\n    url: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.assetLibrary.create(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "file": "OctoAI.AssetType.File",
                            "checkpoint": "OctoAI.AssetType.Checkpoint",
                            "lora": "OctoAI.AssetType.Lora",
                            "textual_inversion": "OctoAI.AssetType.TextualInversion",
                            "vae": "OctoAI.AssetType.Vae",
                            "latent": "OctoAI.AssetType.Latent"
                          },
                          "templateString": "assetType: $FERN_INPUT",
                          "templateInput": {
                            "location": "BODY",
                            "path": "asset_type"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "discriminatedUnion",
                          "imports": [],
                          "isOptional": true,
                          "templateString": "data: '$FERN_INPUT'",
                          "discriminantField": "asset_type",
                          "members": {
                            "checkpoint": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "data: { \n\t\t\tassetType : \"checkpoint\", \n\t\t\t$FERN_INPUT\n\t\t}",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "fp16": "OctoAI.DataType.Fp16",
                                            "fp32": "OctoAI.DataType.Fp32",
                                            "int4": "OctoAI.DataType.Int4",
                                            "int8": "OctoAI.DataType.Int8"
                                          },
                                          "templateString": "dataType: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.data_type"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "text/llama-2-7b": "OctoAI.BaseEngine.TextLlama27B",
                                            "text/llama-2-13b": "OctoAI.BaseEngine.TextLlama213B",
                                            "text/llama-2-70b": "OctoAI.BaseEngine.TextLlama270B",
                                            "text/codellama-7b": "OctoAI.BaseEngine.TextCodellama7B",
                                            "text/codellama-13b": "OctoAI.BaseEngine.TextCodellama13B",
                                            "text/codellama-34b": "OctoAI.BaseEngine.TextCodellama34B",
                                            "text/codellama-70b": "OctoAI.BaseEngine.TextCodellama70B",
                                            "text/mistral-7b": "OctoAI.BaseEngine.TextMistral7B",
                                            "text/mixtral-8x7b": "OctoAI.BaseEngine.TextMixtral8X7B",
                                            "image/controlnet-sd15": "OctoAI.BaseEngine.ImageControlnetSd15",
                                            "image/controlnet-sdxl": "OctoAI.BaseEngine.ImageControlnetSdxl",
                                            "image/stable-diffusion-v1-5": "OctoAI.BaseEngine.ImageStableDiffusionV15",
                                            "image/stable-diffusion-xl-v1-0": "OctoAI.BaseEngine.ImageStableDiffusionXlV10",
                                            "image/stable-diffusion-ssd": "OctoAI.BaseEngine.ImageStableDiffusionSsd",
                                            "audio/tortoise-tts": "OctoAI.BaseEngine.AudioTortoiseTts",
                                            "audio/rvc": "OctoAI.BaseEngine.AudioRvc"
                                          },
                                          "templateString": "engine: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.engine"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "safetensors": "OctoAI.FileFormat.Safetensors",
                                            "pt": "OctoAI.FileFormat.Pt"
                                          },
                                          "templateString": "fileFormat: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.file_format"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "file": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "data: { \n\t\t\tassetType : \"file\", \n\t\t\t$FERN_INPUT\n\t\t}",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "unknown": "OctoAI.FileExtension.Unknown",
                                            "png": "OctoAI.FileExtension.Png",
                                            "jpg": "OctoAI.FileExtension.Jpg",
                                            "jpeg": "OctoAI.FileExtension.Jpeg",
                                            "txt": "OctoAI.FileExtension.Txt",
                                            "mp3": "OctoAI.FileExtension.Mp3",
                                            "wav": "OctoAI.FileExtension.Wav"
                                          },
                                          "templateString": "fileFormat: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.file_format"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "previewUrl: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "BODY",
                                              "path": "data.preview_url"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "version: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "BODY",
                                              "path": "data.version"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "latent": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "data: { \n\t\t\tassetType : \"latent\", \n\t\t\t$FERN_INPUT\n\t\t}",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "text/llama-2-7b": "OctoAI.BaseEngine.TextLlama27B",
                                            "text/llama-2-13b": "OctoAI.BaseEngine.TextLlama213B",
                                            "text/llama-2-70b": "OctoAI.BaseEngine.TextLlama270B",
                                            "text/codellama-7b": "OctoAI.BaseEngine.TextCodellama7B",
                                            "text/codellama-13b": "OctoAI.BaseEngine.TextCodellama13B",
                                            "text/codellama-34b": "OctoAI.BaseEngine.TextCodellama34B",
                                            "text/codellama-70b": "OctoAI.BaseEngine.TextCodellama70B",
                                            "text/mistral-7b": "OctoAI.BaseEngine.TextMistral7B",
                                            "text/mixtral-8x7b": "OctoAI.BaseEngine.TextMixtral8X7B",
                                            "image/controlnet-sd15": "OctoAI.BaseEngine.ImageControlnetSd15",
                                            "image/controlnet-sdxl": "OctoAI.BaseEngine.ImageControlnetSdxl",
                                            "image/stable-diffusion-v1-5": "OctoAI.BaseEngine.ImageStableDiffusionV15",
                                            "image/stable-diffusion-xl-v1-0": "OctoAI.BaseEngine.ImageStableDiffusionXlV10",
                                            "image/stable-diffusion-ssd": "OctoAI.BaseEngine.ImageStableDiffusionSsd",
                                            "audio/tortoise-tts": "OctoAI.BaseEngine.AudioTortoiseTts",
                                            "audio/rvc": "OctoAI.BaseEngine.AudioRvc"
                                          },
                                          "templateString": "engine: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.engine"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "safetensors": "OctoAI.FileFormat.Safetensors",
                                            "pt": "OctoAI.FileFormat.Pt"
                                          },
                                          "templateString": "fileFormat: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.file_format"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "lora": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "data: { \n\t\t\tassetType : \"lora\", \n\t\t\t$FERN_INPUT\n\t\t}",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "checkpoint: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "BODY",
                                              "path": "data.checkpoint"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "fp16": "OctoAI.DataType.Fp16",
                                            "fp32": "OctoAI.DataType.Fp32",
                                            "int4": "OctoAI.DataType.Int4",
                                            "int8": "OctoAI.DataType.Int8"
                                          },
                                          "templateString": "dataType: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.data_type"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "text/llama-2-7b": "OctoAI.BaseEngine.TextLlama27B",
                                            "text/llama-2-13b": "OctoAI.BaseEngine.TextLlama213B",
                                            "text/llama-2-70b": "OctoAI.BaseEngine.TextLlama270B",
                                            "text/codellama-7b": "OctoAI.BaseEngine.TextCodellama7B",
                                            "text/codellama-13b": "OctoAI.BaseEngine.TextCodellama13B",
                                            "text/codellama-34b": "OctoAI.BaseEngine.TextCodellama34B",
                                            "text/codellama-70b": "OctoAI.BaseEngine.TextCodellama70B",
                                            "text/mistral-7b": "OctoAI.BaseEngine.TextMistral7B",
                                            "text/mixtral-8x7b": "OctoAI.BaseEngine.TextMixtral8X7B",
                                            "image/controlnet-sd15": "OctoAI.BaseEngine.ImageControlnetSd15",
                                            "image/controlnet-sdxl": "OctoAI.BaseEngine.ImageControlnetSdxl",
                                            "image/stable-diffusion-v1-5": "OctoAI.BaseEngine.ImageStableDiffusionV15",
                                            "image/stable-diffusion-xl-v1-0": "OctoAI.BaseEngine.ImageStableDiffusionXlV10",
                                            "image/stable-diffusion-ssd": "OctoAI.BaseEngine.ImageStableDiffusionSsd",
                                            "audio/tortoise-tts": "OctoAI.BaseEngine.AudioTortoiseTts",
                                            "audio/rvc": "OctoAI.BaseEngine.AudioRvc"
                                          },
                                          "templateString": "engine: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.engine"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "safetensors": "OctoAI.FileFormat.Safetensors",
                                            "pt": "OctoAI.FileFormat.Pt"
                                          },
                                          "templateString": "fileFormat: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.file_format"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "triggerWords: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.trigger_words"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "textual_inversion": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "data: { \n\t\t\tassetType : \"textual_inversion\", \n\t\t\t$FERN_INPUT\n\t\t}",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "fp16": "OctoAI.DataType.Fp16",
                                            "fp32": "OctoAI.DataType.Fp32",
                                            "int4": "OctoAI.DataType.Int4",
                                            "int8": "OctoAI.DataType.Int8"
                                          },
                                          "templateString": "dataType: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.data_type"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "text/llama-2-7b": "OctoAI.BaseEngine.TextLlama27B",
                                            "text/llama-2-13b": "OctoAI.BaseEngine.TextLlama213B",
                                            "text/llama-2-70b": "OctoAI.BaseEngine.TextLlama270B",
                                            "text/codellama-7b": "OctoAI.BaseEngine.TextCodellama7B",
                                            "text/codellama-13b": "OctoAI.BaseEngine.TextCodellama13B",
                                            "text/codellama-34b": "OctoAI.BaseEngine.TextCodellama34B",
                                            "text/codellama-70b": "OctoAI.BaseEngine.TextCodellama70B",
                                            "text/mistral-7b": "OctoAI.BaseEngine.TextMistral7B",
                                            "text/mixtral-8x7b": "OctoAI.BaseEngine.TextMixtral8X7B",
                                            "image/controlnet-sd15": "OctoAI.BaseEngine.ImageControlnetSd15",
                                            "image/controlnet-sdxl": "OctoAI.BaseEngine.ImageControlnetSdxl",
                                            "image/stable-diffusion-v1-5": "OctoAI.BaseEngine.ImageStableDiffusionV15",
                                            "image/stable-diffusion-xl-v1-0": "OctoAI.BaseEngine.ImageStableDiffusionXlV10",
                                            "image/stable-diffusion-ssd": "OctoAI.BaseEngine.ImageStableDiffusionSsd",
                                            "audio/tortoise-tts": "OctoAI.BaseEngine.AudioTortoiseTts",
                                            "audio/rvc": "OctoAI.BaseEngine.AudioRvc"
                                          },
                                          "templateString": "engine: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.engine"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "safetensors": "OctoAI.FileFormat.Safetensors",
                                            "pt": "OctoAI.FileFormat.Pt"
                                          },
                                          "templateString": "fileFormat: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.file_format"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "triggerWords: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.trigger_words"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "vae": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "data: { \n\t\t\tassetType : \"vae\", \n\t\t\t$FERN_INPUT\n\t\t}",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "fp16": "OctoAI.DataType.Fp16",
                                            "fp32": "OctoAI.DataType.Fp32",
                                            "int4": "OctoAI.DataType.Int4",
                                            "int8": "OctoAI.DataType.Int8"
                                          },
                                          "templateString": "dataType: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.data_type"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "text/llama-2-7b": "OctoAI.BaseEngine.TextLlama27B",
                                            "text/llama-2-13b": "OctoAI.BaseEngine.TextLlama213B",
                                            "text/llama-2-70b": "OctoAI.BaseEngine.TextLlama270B",
                                            "text/codellama-7b": "OctoAI.BaseEngine.TextCodellama7B",
                                            "text/codellama-13b": "OctoAI.BaseEngine.TextCodellama13B",
                                            "text/codellama-34b": "OctoAI.BaseEngine.TextCodellama34B",
                                            "text/codellama-70b": "OctoAI.BaseEngine.TextCodellama70B",
                                            "text/mistral-7b": "OctoAI.BaseEngine.TextMistral7B",
                                            "text/mixtral-8x7b": "OctoAI.BaseEngine.TextMixtral8X7B",
                                            "image/controlnet-sd15": "OctoAI.BaseEngine.ImageControlnetSd15",
                                            "image/controlnet-sdxl": "OctoAI.BaseEngine.ImageControlnetSdxl",
                                            "image/stable-diffusion-v1-5": "OctoAI.BaseEngine.ImageStableDiffusionV15",
                                            "image/stable-diffusion-xl-v1-0": "OctoAI.BaseEngine.ImageStableDiffusionXlV10",
                                            "image/stable-diffusion-ssd": "OctoAI.BaseEngine.ImageStableDiffusionSsd",
                                            "audio/tortoise-tts": "OctoAI.BaseEngine.AudioTortoiseTts",
                                            "audio/rvc": "OctoAI.BaseEngine.AudioRvc"
                                          },
                                          "templateString": "engine: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.engine"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "enum",
                                          "imports": [],
                                          "isOptional": true,
                                          "values": {
                                            "safetensors": "OctoAI.FileFormat.Safetensors",
                                            "pt": "OctoAI.FileFormat.Pt"
                                          },
                                          "templateString": "fileFormat: $FERN_INPUT",
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "data.file_format"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "templateInput": {
                            "location": "BODY",
                            "path": "data"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "description: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "description"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "hfRepo: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "hf_repo"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "hfTokenSecret: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "hf_token_secret"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "isPublic: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "is_public"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "name: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "name"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "skipValidation: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "skip_validation"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "presigned-url": "OctoAI.TransferApiType.PresignedUrl",
                            "sts": "OctoAI.TransferApiType.Sts"
                          },
                          "templateString": "transferApiType: $FERN_INPUT",
                          "templateInput": {
                            "location": "BODY",
                            "path": "transfer_api_type"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "url: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "url"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.asset_library.create(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "asset_type=$FERN_INPUT",
                    "values": {
                      "file": "\"file\"",
                      "checkpoint": "\"checkpoint\"",
                      "lora": "\"lora\"",
                      "textual_inversion": "\"textual_inversion\"",
                      "vae": "\"vae\"",
                      "latent": "\"latent\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "asset_type"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "data=$FERN_INPUT",
                    "discriminantField": "asset_type",
                    "members": {
                      "checkpoint": {
                        "imports": [
                          "from octoai.asset_library import Data_Checkpoint"
                        ],
                        "isOptional": true,
                        "templateString": "data=Data_Checkpoint($FERN_INPUT, )",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "data_type=$FERN_INPUT",
                              "values": {
                                "fp16": "\"fp16\"",
                                "fp32": "\"fp32\"",
                                "int4": "\"int4\"",
                                "int8": "\"int8\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.data_type"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "engine=$FERN_INPUT",
                              "values": {
                                "text/llama-2-7b": "\"text/llama-2-7b\"",
                                "text/llama-2-13b": "\"text/llama-2-13b\"",
                                "text/llama-2-70b": "\"text/llama-2-70b\"",
                                "text/codellama-7b": "\"text/codellama-7b\"",
                                "text/codellama-13b": "\"text/codellama-13b\"",
                                "text/codellama-34b": "\"text/codellama-34b\"",
                                "text/codellama-70b": "\"text/codellama-70b\"",
                                "text/mistral-7b": "\"text/mistral-7b\"",
                                "text/mixtral-8x7b": "\"text/mixtral-8x7b\"",
                                "image/controlnet-sd15": "\"image/controlnet-sd15\"",
                                "image/controlnet-sdxl": "\"image/controlnet-sdxl\"",
                                "image/stable-diffusion-v1-5": "\"image/stable-diffusion-v1-5\"",
                                "image/stable-diffusion-xl-v1-0": "\"image/stable-diffusion-xl-v1-0\"",
                                "image/stable-diffusion-ssd": "\"image/stable-diffusion-ssd\"",
                                "audio/tortoise-tts": "\"audio/tortoise-tts\"",
                                "audio/rvc": "\"audio/rvc\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.engine"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "file_format=$FERN_INPUT",
                              "values": {
                                "safetensors": "\"safetensors\"",
                                "pt": "\"pt\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.file_format"
                              },
                              "type": "enum"
                            }
                          }
                        ],
                        "type": "generic"
                      },
                      "file": {
                        "imports": [
                          "from octoai.asset_library import Data_File"
                        ],
                        "isOptional": true,
                        "templateString": "data=Data_File($FERN_INPUT, )",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "file_format=$FERN_INPUT",
                              "values": {
                                "unknown": "\"unknown\"",
                                "png": "\"png\"",
                                "jpg": "\"jpg\"",
                                "jpeg": "\"jpeg\"",
                                "txt": "\"txt\"",
                                "mp3": "\"mp3\"",
                                "wav": "\"wav\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.file_format"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "preview_url=$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "BODY",
                                  "path": "data.preview_url",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "version=$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "BODY",
                                  "path": "data.version",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          }
                        ],
                        "type": "generic"
                      },
                      "latent": {
                        "imports": [
                          "from octoai.asset_library import Data_Latent"
                        ],
                        "isOptional": true,
                        "templateString": "data=Data_Latent($FERN_INPUT, )",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "engine=$FERN_INPUT",
                              "values": {
                                "text/llama-2-7b": "\"text/llama-2-7b\"",
                                "text/llama-2-13b": "\"text/llama-2-13b\"",
                                "text/llama-2-70b": "\"text/llama-2-70b\"",
                                "text/codellama-7b": "\"text/codellama-7b\"",
                                "text/codellama-13b": "\"text/codellama-13b\"",
                                "text/codellama-34b": "\"text/codellama-34b\"",
                                "text/codellama-70b": "\"text/codellama-70b\"",
                                "text/mistral-7b": "\"text/mistral-7b\"",
                                "text/mixtral-8x7b": "\"text/mixtral-8x7b\"",
                                "image/controlnet-sd15": "\"image/controlnet-sd15\"",
                                "image/controlnet-sdxl": "\"image/controlnet-sdxl\"",
                                "image/stable-diffusion-v1-5": "\"image/stable-diffusion-v1-5\"",
                                "image/stable-diffusion-xl-v1-0": "\"image/stable-diffusion-xl-v1-0\"",
                                "image/stable-diffusion-ssd": "\"image/stable-diffusion-ssd\"",
                                "audio/tortoise-tts": "\"audio/tortoise-tts\"",
                                "audio/rvc": "\"audio/rvc\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.engine"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "file_format=$FERN_INPUT",
                              "values": {
                                "safetensors": "\"safetensors\"",
                                "pt": "\"pt\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.file_format"
                              },
                              "type": "enum"
                            }
                          }
                        ],
                        "type": "generic"
                      },
                      "lora": {
                        "imports": [
                          "from octoai.asset_library import Data_Lora"
                        ],
                        "isOptional": true,
                        "templateString": "data=Data_Lora($FERN_INPUT, )",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "checkpoint=$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "BODY",
                                  "path": "data.checkpoint",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "data_type=$FERN_INPUT",
                              "values": {
                                "fp16": "\"fp16\"",
                                "fp32": "\"fp32\"",
                                "int4": "\"int4\"",
                                "int8": "\"int8\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.data_type"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "engine=$FERN_INPUT",
                              "values": {
                                "text/llama-2-7b": "\"text/llama-2-7b\"",
                                "text/llama-2-13b": "\"text/llama-2-13b\"",
                                "text/llama-2-70b": "\"text/llama-2-70b\"",
                                "text/codellama-7b": "\"text/codellama-7b\"",
                                "text/codellama-13b": "\"text/codellama-13b\"",
                                "text/codellama-34b": "\"text/codellama-34b\"",
                                "text/codellama-70b": "\"text/codellama-70b\"",
                                "text/mistral-7b": "\"text/mistral-7b\"",
                                "text/mixtral-8x7b": "\"text/mixtral-8x7b\"",
                                "image/controlnet-sd15": "\"image/controlnet-sd15\"",
                                "image/controlnet-sdxl": "\"image/controlnet-sdxl\"",
                                "image/stable-diffusion-v1-5": "\"image/stable-diffusion-v1-5\"",
                                "image/stable-diffusion-xl-v1-0": "\"image/stable-diffusion-xl-v1-0\"",
                                "image/stable-diffusion-ssd": "\"image/stable-diffusion-ssd\"",
                                "audio/tortoise-tts": "\"audio/tortoise-tts\"",
                                "audio/rvc": "\"audio/rvc\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.engine"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "file_format=$FERN_INPUT",
                              "values": {
                                "safetensors": "\"safetensors\"",
                                "pt": "\"pt\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.file_format"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "trigger_words=[\n\t\t$FERN_INPUT\n\t]",
                              "delimiter": ",\n\t\t",
                              "innerTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "RELATIVE",
                                    "path": null,
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.trigger_words"
                              },
                              "type": "iterable"
                            }
                          }
                        ],
                        "type": "generic"
                      },
                      "textual_inversion": {
                        "imports": [
                          "from octoai.asset_library import Data_TextualInversion"
                        ],
                        "isOptional": true,
                        "templateString": "data=Data_TextualInversion($FERN_INPUT, )",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "data_type=$FERN_INPUT",
                              "values": {
                                "fp16": "\"fp16\"",
                                "fp32": "\"fp32\"",
                                "int4": "\"int4\"",
                                "int8": "\"int8\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.data_type"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "engine=$FERN_INPUT",
                              "values": {
                                "text/llama-2-7b": "\"text/llama-2-7b\"",
                                "text/llama-2-13b": "\"text/llama-2-13b\"",
                                "text/llama-2-70b": "\"text/llama-2-70b\"",
                                "text/codellama-7b": "\"text/codellama-7b\"",
                                "text/codellama-13b": "\"text/codellama-13b\"",
                                "text/codellama-34b": "\"text/codellama-34b\"",
                                "text/codellama-70b": "\"text/codellama-70b\"",
                                "text/mistral-7b": "\"text/mistral-7b\"",
                                "text/mixtral-8x7b": "\"text/mixtral-8x7b\"",
                                "image/controlnet-sd15": "\"image/controlnet-sd15\"",
                                "image/controlnet-sdxl": "\"image/controlnet-sdxl\"",
                                "image/stable-diffusion-v1-5": "\"image/stable-diffusion-v1-5\"",
                                "image/stable-diffusion-xl-v1-0": "\"image/stable-diffusion-xl-v1-0\"",
                                "image/stable-diffusion-ssd": "\"image/stable-diffusion-ssd\"",
                                "audio/tortoise-tts": "\"audio/tortoise-tts\"",
                                "audio/rvc": "\"audio/rvc\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.engine"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "file_format=$FERN_INPUT",
                              "values": {
                                "safetensors": "\"safetensors\"",
                                "pt": "\"pt\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.file_format"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "trigger_words=[\n\t\t$FERN_INPUT\n\t]",
                              "delimiter": ",\n\t\t",
                              "innerTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "RELATIVE",
                                    "path": null,
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.trigger_words"
                              },
                              "type": "iterable"
                            }
                          }
                        ],
                        "type": "generic"
                      },
                      "vae": {
                        "imports": [
                          "from octoai.asset_library import Data_Vae"
                        ],
                        "isOptional": true,
                        "templateString": "data=Data_Vae($FERN_INPUT, )",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "data_type=$FERN_INPUT",
                              "values": {
                                "fp16": "\"fp16\"",
                                "fp32": "\"fp32\"",
                                "int4": "\"int4\"",
                                "int8": "\"int8\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.data_type"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "engine=$FERN_INPUT",
                              "values": {
                                "text/llama-2-7b": "\"text/llama-2-7b\"",
                                "text/llama-2-13b": "\"text/llama-2-13b\"",
                                "text/llama-2-70b": "\"text/llama-2-70b\"",
                                "text/codellama-7b": "\"text/codellama-7b\"",
                                "text/codellama-13b": "\"text/codellama-13b\"",
                                "text/codellama-34b": "\"text/codellama-34b\"",
                                "text/codellama-70b": "\"text/codellama-70b\"",
                                "text/mistral-7b": "\"text/mistral-7b\"",
                                "text/mixtral-8x7b": "\"text/mixtral-8x7b\"",
                                "image/controlnet-sd15": "\"image/controlnet-sd15\"",
                                "image/controlnet-sdxl": "\"image/controlnet-sdxl\"",
                                "image/stable-diffusion-v1-5": "\"image/stable-diffusion-v1-5\"",
                                "image/stable-diffusion-xl-v1-0": "\"image/stable-diffusion-xl-v1-0\"",
                                "image/stable-diffusion-ssd": "\"image/stable-diffusion-ssd\"",
                                "audio/tortoise-tts": "\"audio/tortoise-tts\"",
                                "audio/rvc": "\"audio/rvc\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.engine"
                              },
                              "type": "enum"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "file_format=$FERN_INPUT",
                              "values": {
                                "safetensors": "\"safetensors\"",
                                "pt": "\"pt\""
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "data.file_format"
                              },
                              "type": "enum"
                            }
                          }
                        ],
                        "type": "generic"
                      }
                    },
                    "type": "discriminatedUnion"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "description=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "description",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "hf_repo=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "hf_repo",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "hf_token_secret=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "hf_token_secret",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "is_public=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "is_public",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "name=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "name",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "skip_validation=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "skip_validation",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "transfer_api_type=$FERN_INPUT",
                    "values": {
                      "presigned-url": "\"presigned-url\"",
                      "sts": "\"sts\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "transfer_api_type"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "url=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "url",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_asset-library.delete": {
        "id": "endpoint_asset-library.delete",
        "namespace": [
          "subpackage_asset-library"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/v1/assets/"
          },
          {
            "type": "pathParameter",
            "value": "asset_id"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "pathParameters": [
          {
            "key": "asset_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_asset-library:DeleteAssetResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_asset-library:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/assets/asset_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "asset_id": "asset_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "deleted_at": "deleted_at",
                "id": "id"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.octoai.cloud/v1/assets/asset_id",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.delete(\n    asset_id=\"asset_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.delete(\"asset_id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/assets/:asset_id",
            "responseStatusCode": 422,
            "pathParameters": {
              "asset_id": ":asset_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.octoai.cloud/v1/assets/:asset_id",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.delete(\n    asset_id=\"asset_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.delete(\"asset_id\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.assetLibrary.delete(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "asset_id"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.asset_library.delete(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "asset_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "asset_id",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_asset-library.completeUpload": {
        "id": "endpoint_asset-library.completeUpload",
        "namespace": [
          "subpackage_asset-library"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/assets/"
          },
          {
            "type": "pathParameter",
            "value": "asset_id"
          },
          {
            "type": "literal",
            "value": "/complete-upload"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "pathParameters": [
          {
            "key": "asset_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "skip_validation",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Skip asset validation."
              },
              {
                "key": "token",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                },
                "description": "Unused"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_asset-library:CompleteAssetUploadResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_asset-library:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/assets/asset_id/complete-upload",
            "responseStatusCode": 200,
            "pathParameters": {
              "asset_id": "asset_id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "error"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/assets/asset_id/complete-upload \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.complete_upload(\n    asset_id=\"asset_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.completeUpload(\"asset_id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/assets/:asset_id/complete-upload",
            "responseStatusCode": 422,
            "pathParameters": {
              "asset_id": ":asset_id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/assets/:asset_id/complete-upload \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.complete_upload(\n    asset_id=\"asset_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.completeUpload(\"asset_id\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.assetLibrary.completeUpload(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "asset_id"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "skipValidation: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "skip_validation"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "token: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.asset_library.complete_upload(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "asset_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "asset_id",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "skip_validation=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "skip_validation",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "token=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "token",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_asset-library.get": {
        "id": "endpoint_asset-library.get",
        "namespace": [
          "subpackage_asset-library"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/assets/"
          },
          {
            "type": "pathParameter",
            "value": "asset_owner_and_name_or_id"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "pathParameters": [
          {
            "key": "asset_owner_and_name_or_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "transfer_api_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_asset-library:TransferApiType"
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_asset-library:RetrieveAssetResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_asset-library:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/assets/:asset_owner_and_name_or_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "asset_owner_and_name_or_id": ":asset_owner_and_name_or_id"
            },
            "queryParameters": {
              "transfer_api_type": "presigned-url"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "asset": {
                  "asset_type": "file",
                  "created_at": "string",
                  "data": {
                    "asset_type": "checkpoint",
                    "engine": "text/llama-2-7b",
                    "data_type": "fp16",
                    "file_format": "safetensors"
                  },
                  "description": "string",
                  "id": "string",
                  "name": "string",
                  "size_bytes": 0,
                  "status": "ready_to_upload",
                  "status_details": "string",
                  "tenant_uuid": "string",
                  "file_structure": "unknown",
                  "hf_repo": "string",
                  "is_public": true,
                  "status_info": {
                    "string": {}
                  },
                  "url": "string"
                },
                "transfer_api": {
                  "type": "none"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.octoai.cloud/v1/assets/:asset_owner_and_name_or_id \\\n     -d transfer_api_type=presigned-url",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.get(\n    asset_owner_and_name_or_id=\"string\",\n    transfer_api_type=\"presigned-url\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient, OctoAI } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.get(\"string\", {\n    transferApiType: OctoAI.TransferApiType.PresignedUrl\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/assets/:asset_owner_and_name_or_id",
            "responseStatusCode": 422,
            "pathParameters": {
              "asset_owner_and_name_or_id": ":asset_owner_and_name_or_id"
            },
            "queryParameters": {
              "transfer_api_type": "presigned-url"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.octoai.cloud/v1/assets/:asset_owner_and_name_or_id \\\n     -d transfer_api_type=presigned-url",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.asset_library.get(\n    asset_owner_and_name_or_id=\"string\",\n    transfer_api_type=\"presigned-url\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient, OctoAI } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.assetLibrary.get(\"string\", {\n    transferApiType: OctoAI.TransferApiType.PresignedUrl\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.assetLibrary.get(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "asset_owner_and_name_or_id"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "presigned-url": "OctoAI.TransferApiType.PresignedUrl",
                            "sts": "OctoAI.TransferApiType.Sts"
                          },
                          "templateString": "transferApiType: $FERN_INPUT",
                          "templateInput": {
                            "location": "QUERY",
                            "path": "transfer_api_type"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.asset_library.get(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "asset_owner_and_name_or_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "asset_owner_and_name_or_id",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "transfer_api_type=$FERN_INPUT",
                    "values": {
                      "presigned-url": "\"presigned-url\"",
                      "sts": "\"sts\""
                    },
                    "templateInput": {
                      "location": "QUERY",
                      "path": "transfer_api_type"
                    },
                    "type": "enum"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_fine-tuning.create": {
        "id": "endpoint_fine-tuning.create",
        "namespace": [
          "subpackage_fine-tuning"
        ],
        "description": "Spawn a tune.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/tune"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "continue_on_rejection",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "details",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_fine-tuning:Details"
                  }
                },
                "description": "Details of the tune."
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the tune."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_fine-tuning:Tune"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_fine-tuning:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/tune",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "details": {
                  "tune_type": "lora_tune",
                  "base_checkpoint": {
                    "checkpoint_id": "string"
                  },
                  "files": [
                    {
                      "file_id": "string"
                    }
                  ],
                  "steps": 0,
                  "trigger_words": [
                    "string"
                  ]
                },
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "created_at": "2023-01-01T00:00:00Z",
                "description": "string",
                "details": {
                  "tune_type": "lora_tune",
                  "base_checkpoint": {
                    "checkpoint_id": "string",
                    "engine": "text/llama-2-7b",
                    "name": "string"
                  },
                  "files": [
                    {
                      "file_id": "string",
                      "caption": "string"
                    }
                  ],
                  "steps": 0,
                  "trigger_words": [
                    "string"
                  ],
                  "resize_images": true,
                  "seed": 0
                },
                "id": "string",
                "name": "string",
                "output_lora_ids": [
                  "string"
                ],
                "status": "pending",
                "status_details": "string",
                "tenant_id": "string",
                "tune_type": "lora_tune",
                "updated_at": "2023-01-01T00:00:00Z",
                "deleted_at": "2023-01-01T00:00:00Z",
                "result": {
                  "number_of_available_assets": 0,
                  "output_assets": [
                    "string"
                  ],
                  "rejected_assets": [
                    "string"
                  ],
                  "unready_assets": [
                    "string"
                  ]
                },
                "succeeded_at": "2023-01-01T00:00:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/tune \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"details\": {\n    \"tune_type\": \"lora_tune\",\n    \"base_checkpoint\": {\n      \"checkpoint_id\": \"string\"\n    },\n    \"files\": [\n      {\n        \"file_id\": \"string\"\n      }\n    ],\n    \"steps\": 0,\n    \"trigger_words\": [\n      \"string\"\n    ]\n  },\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\nfrom octoai.fine_tuning import (\n    Details_LoraTune,\n    LoraTuneCheckpoint,\n    LoraTuneFile,\n)\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.create(\n    continue_on_rejection=True,\n    description=\"string\",\n    details=Details_LoraTune(\n        base_checkpoint=LoraTuneCheckpoint(),\n        files=[LoraTuneFile()],\n        resize_images=True,\n        seed=1,\n        steps=1,\n        trigger_words=[\"string\"],\n    ),\n    name=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.create({\n    continueOnRejection: true,\n    description: \"string\",\n    details: {\n        tuneType: \"lora_tune\",\n        baseCheckpoint: {},\n        files: [{}],\n        resizeImages: true,\n        seed: 1,\n        steps: 1,\n        triggerWords: [\"string\"]\n    },\n    name: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/tune",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "details": {
                  "tune_type": "lora_tune",
                  "base_checkpoint": {
                    "checkpoint_id": "string"
                  },
                  "files": [
                    {
                      "file_id": "string"
                    }
                  ],
                  "steps": 0,
                  "trigger_words": [
                    "string"
                  ]
                },
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/tune \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"details\": {\n    \"tune_type\": \"lora_tune\",\n    \"base_checkpoint\": {\n      \"checkpoint_id\": \"string\"\n    },\n    \"files\": [\n      {\n        \"file_id\": \"string\"\n      }\n    ],\n    \"steps\": 0,\n    \"trigger_words\": [\n      \"string\"\n    ]\n  },\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\nfrom octoai.fine_tuning import (\n    Details_LoraTune,\n    LoraTuneCheckpoint,\n    LoraTuneFile,\n)\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.create(\n    continue_on_rejection=True,\n    description=\"string\",\n    details=Details_LoraTune(\n        base_checkpoint=LoraTuneCheckpoint(),\n        files=[LoraTuneFile()],\n        resize_images=True,\n        seed=1,\n        steps=1,\n        trigger_words=[\"string\"],\n    ),\n    name=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.create({\n    continueOnRejection: true,\n    description: \"string\",\n    details: {\n        tuneType: \"lora_tune\",\n        baseCheckpoint: {},\n        files: [{}],\n        resizeImages: true,\n        seed: 1,\n        steps: 1,\n        triggerWords: [\"string\"]\n    },\n    name: \"string\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.fineTuning.create(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "continueOnRejection: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "continue_on_rejection"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "description: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "description"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "discriminatedUnion",
                          "imports": [],
                          "isOptional": true,
                          "templateString": "details: '$FERN_INPUT'",
                          "discriminantField": "tune_type",
                          "members": {
                            "lora_tune": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "details: { \n\t\t\ttuneType : \"lora_tune\", \n\t\t\t$FERN_INPUT\n\t\t}",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "baseCheckpoint: {\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t}",
                                          "isOptional": true,
                                          "inputDelimiter": ",\n\t\t\t\t\t",
                                          "templateInputs": [
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "checkpointId: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "BODY",
                                                    "path": "details.base_checkpoint.checkpoint_id"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "enum",
                                                "imports": [],
                                                "isOptional": true,
                                                "values": {
                                                  "text/llama-2-7b": "OctoAI.BaseEngine.TextLlama27B",
                                                  "text/llama-2-13b": "OctoAI.BaseEngine.TextLlama213B",
                                                  "text/llama-2-70b": "OctoAI.BaseEngine.TextLlama270B",
                                                  "text/codellama-7b": "OctoAI.BaseEngine.TextCodellama7B",
                                                  "text/codellama-13b": "OctoAI.BaseEngine.TextCodellama13B",
                                                  "text/codellama-34b": "OctoAI.BaseEngine.TextCodellama34B",
                                                  "text/codellama-70b": "OctoAI.BaseEngine.TextCodellama70B",
                                                  "text/mistral-7b": "OctoAI.BaseEngine.TextMistral7B",
                                                  "text/mixtral-8x7b": "OctoAI.BaseEngine.TextMixtral8X7B",
                                                  "image/controlnet-sd15": "OctoAI.BaseEngine.ImageControlnetSd15",
                                                  "image/controlnet-sdxl": "OctoAI.BaseEngine.ImageControlnetSdxl",
                                                  "image/stable-diffusion-v1-5": "OctoAI.BaseEngine.ImageStableDiffusionV15",
                                                  "image/stable-diffusion-xl-v1-0": "OctoAI.BaseEngine.ImageStableDiffusionXlV10",
                                                  "image/stable-diffusion-ssd": "OctoAI.BaseEngine.ImageStableDiffusionSsd",
                                                  "audio/tortoise-tts": "OctoAI.BaseEngine.AudioTortoiseTts",
                                                  "audio/rvc": "OctoAI.BaseEngine.AudioRvc"
                                                },
                                                "templateString": "engine: $FERN_INPUT",
                                                "templateInput": {
                                                  "location": "BODY",
                                                  "path": "details.base_checkpoint.engine"
                                                }
                                              }
                                            },
                                            {
                                              "type": "template",
                                              "value": {
                                                "type": "generic",
                                                "imports": [],
                                                "templateString": "name: $FERN_INPUT",
                                                "isOptional": true,
                                                "templateInputs": [
                                                  {
                                                    "type": "payload",
                                                    "location": "BODY",
                                                    "path": "details.base_checkpoint.name"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "files: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "{\n\t\t\t\t\t\t$FERN_INPUT\n\t\t\t\t\t}",
                                            "isOptional": true,
                                            "inputDelimiter": ",\n\t\t\t\t\t\t",
                                            "templateInputs": [
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "caption: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "caption"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "template",
                                                "value": {
                                                  "type": "generic",
                                                  "imports": [],
                                                  "templateString": "fileId: $FERN_INPUT",
                                                  "isOptional": true,
                                                  "templateInputs": [
                                                    {
                                                      "type": "payload",
                                                      "location": "RELATIVE",
                                                      "path": "file_id"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "details.files"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "resizeImages: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "BODY",
                                              "path": "details.resize_images"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "seed: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "BODY",
                                              "path": "details.seed"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "steps: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "BODY",
                                              "path": "details.steps"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "triggerWords: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "details.trigger_words"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "text_to_speech_latent_tune": {
                              "type": "generic",
                              "imports": [],
                              "templateString": "details: { \n\t\t\ttuneType : \"text_to_speech_latent_tune\", \n\t\t\t$FERN_INPUT\n\t\t}",
                              "isOptional": true,
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                    "isOptional": true,
                                    "inputDelimiter": ",\n\t\t\t\t",
                                    "templateInputs": [
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "iterable",
                                          "imports": [],
                                          "isOptional": true,
                                          "containerTemplateString": "assetIds: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                          "delimiter": ",\n\t\t\t\t\t",
                                          "innerTemplate": {
                                            "type": "generic",
                                            "imports": [],
                                            "templateString": "$FERN_INPUT",
                                            "isOptional": true,
                                            "templateInputs": [
                                              {
                                                "type": "payload",
                                                "location": "RELATIVE",
                                                "path": null
                                              }
                                            ]
                                          },
                                          "templateInput": {
                                            "location": "BODY",
                                            "path": "details.asset_ids"
                                          }
                                        }
                                      },
                                      {
                                        "type": "template",
                                        "value": {
                                          "type": "generic",
                                          "imports": [],
                                          "templateString": "inlineAssets: $FERN_INPUT",
                                          "isOptional": true,
                                          "templateInputs": [
                                            {
                                              "type": "payload",
                                              "location": "BODY",
                                              "path": "details.inline_assets"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          "templateInput": {
                            "location": "BODY",
                            "path": "details"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "name: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "name"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.fine_tuning.create(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "continue_on_rejection=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "continue_on_rejection",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "description=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "description",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "details=$FERN_INPUT",
                    "discriminantField": "tune_type",
                    "members": {
                      "lora_tune": {
                        "imports": [
                          "from octoai.fine_tuning import Details_LoraTune"
                        ],
                        "isOptional": true,
                        "templateString": "details=Details_LoraTune($FERN_INPUT, )",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [
                                "from octoai.fine_tuning import LoraTuneCheckpoint"
                              ],
                              "isOptional": true,
                              "templateString": "base_checkpoint=LoraTuneCheckpoint(\n\t\t$FERN_INPUT\n\t)",
                              "templateInputs": [
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "checkpoint_id=$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "BODY",
                                        "path": "details.base_checkpoint.checkpoint_id",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "engine=$FERN_INPUT",
                                    "values": {
                                      "text/llama-2-7b": "\"text/llama-2-7b\"",
                                      "text/llama-2-13b": "\"text/llama-2-13b\"",
                                      "text/llama-2-70b": "\"text/llama-2-70b\"",
                                      "text/codellama-7b": "\"text/codellama-7b\"",
                                      "text/codellama-13b": "\"text/codellama-13b\"",
                                      "text/codellama-34b": "\"text/codellama-34b\"",
                                      "text/codellama-70b": "\"text/codellama-70b\"",
                                      "text/mistral-7b": "\"text/mistral-7b\"",
                                      "text/mixtral-8x7b": "\"text/mixtral-8x7b\"",
                                      "image/controlnet-sd15": "\"image/controlnet-sd15\"",
                                      "image/controlnet-sdxl": "\"image/controlnet-sdxl\"",
                                      "image/stable-diffusion-v1-5": "\"image/stable-diffusion-v1-5\"",
                                      "image/stable-diffusion-xl-v1-0": "\"image/stable-diffusion-xl-v1-0\"",
                                      "image/stable-diffusion-ssd": "\"image/stable-diffusion-ssd\"",
                                      "audio/tortoise-tts": "\"audio/tortoise-tts\"",
                                      "audio/rvc": "\"audio/rvc\""
                                    },
                                    "templateInput": {
                                      "location": "BODY",
                                      "path": "details.base_checkpoint.checkpoint_id.base_checkpoint.engine"
                                    },
                                    "type": "enum"
                                  }
                                },
                                {
                                  "type": "template",
                                  "value": {
                                    "imports": [],
                                    "isOptional": true,
                                    "templateString": "name=$FERN_INPUT",
                                    "templateInputs": [
                                      {
                                        "location": "BODY",
                                        "path": "details.base_checkpoint.checkpoint_id.base_checkpoint.engine.base_checkpoint.name",
                                        "type": "payload"
                                      }
                                    ],
                                    "type": "generic"
                                  }
                                }
                              ],
                              "inputDelimiter": ",\n\t\t",
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "files=[\n\t\t$FERN_INPUT\n\t]",
                              "delimiter": ",\n\t\t",
                              "innerTemplate": {
                                "imports": [
                                  "from octoai.fine_tuning import LoraTuneFile"
                                ],
                                "isOptional": true,
                                "templateString": "LoraTuneFile(\n\t\t\t$FERN_INPUT\n\t\t)",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "caption=$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": "caption",
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "imports": [],
                                      "isOptional": true,
                                      "templateString": "file_id=$FERN_INPUT",
                                      "templateInputs": [
                                        {
                                          "location": "RELATIVE",
                                          "path": "file_id",
                                          "type": "payload"
                                        }
                                      ],
                                      "type": "generic"
                                    }
                                  }
                                ],
                                "inputDelimiter": ",\n\t\t\t",
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "details.files"
                              },
                              "type": "iterable"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "resize_images=$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "BODY",
                                  "path": "details.resize_images",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "seed=$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "BODY",
                                  "path": "details.seed",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "steps=$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "BODY",
                                  "path": "details.steps",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "trigger_words=[\n\t\t$FERN_INPUT\n\t]",
                              "delimiter": ",\n\t\t",
                              "innerTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "RELATIVE",
                                    "path": null,
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "details.trigger_words"
                              },
                              "type": "iterable"
                            }
                          }
                        ],
                        "type": "generic"
                      },
                      "text_to_speech_latent_tune": {
                        "imports": [
                          "from octoai.fine_tuning import Details_TextToSpeechLatentTune"
                        ],
                        "isOptional": true,
                        "templateString": "details=Details_TextToSpeechLatentTune($FERN_INPUT, )",
                        "templateInputs": [
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "containerTemplateString": "asset_ids=[\n\t\t$FERN_INPUT\n\t]",
                              "delimiter": ",\n\t\t",
                              "innerTemplate": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "RELATIVE",
                                    "path": null,
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              },
                              "templateInput": {
                                "location": "BODY",
                                "path": "details.asset_ids"
                              },
                              "type": "iterable"
                            }
                          },
                          {
                            "type": "template",
                            "value": {
                              "imports": [],
                              "isOptional": true,
                              "templateString": "inline_assets=$FERN_INPUT",
                              "templateInputs": [
                                {
                                  "location": "BODY",
                                  "path": "details.inline_assets",
                                  "type": "payload"
                                }
                              ],
                              "type": "generic"
                            }
                          }
                        ],
                        "type": "generic"
                      }
                    },
                    "type": "discriminatedUnion"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "name=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "name",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_fine-tuning.get": {
        "id": "endpoint_fine-tuning.get",
        "namespace": [
          "subpackage_fine-tuning"
        ],
        "description": "Get the specific tune.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/tune/"
          },
          {
            "type": "pathParameter",
            "value": "tune_id"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "pathParameters": [
          {
            "key": "tune_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the tune."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_fine-tuning:Tune"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_fine-tuning:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/tune/:tune_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "tune_id": ":tune_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "created_at": "2023-01-01T00:00:00Z",
                "description": "string",
                "details": {
                  "tune_type": "lora_tune",
                  "base_checkpoint": {
                    "checkpoint_id": "string",
                    "engine": "text/llama-2-7b",
                    "name": "string"
                  },
                  "files": [
                    {
                      "file_id": "string",
                      "caption": "string"
                    }
                  ],
                  "steps": 0,
                  "trigger_words": [
                    "string"
                  ],
                  "resize_images": true,
                  "seed": 0
                },
                "id": "string",
                "name": "string",
                "output_lora_ids": [
                  "string"
                ],
                "status": "pending",
                "status_details": "string",
                "tenant_id": "string",
                "tune_type": "lora_tune",
                "updated_at": "2023-01-01T00:00:00Z",
                "deleted_at": "2023-01-01T00:00:00Z",
                "result": {
                  "number_of_available_assets": 0,
                  "output_assets": [
                    "string"
                  ],
                  "rejected_assets": [
                    "string"
                  ],
                  "unready_assets": [
                    "string"
                  ]
                },
                "succeeded_at": "2023-01-01T00:00:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/tune/:tune_id",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.get(\n    tune_id=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.get(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/tune/:tune_id",
            "responseStatusCode": 422,
            "pathParameters": {
              "tune_id": ":tune_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/tune/:tune_id",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.get(\n    tune_id=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.get(\"string\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.fineTuning.get(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "tune_id"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.fine_tuning.get(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "tune_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "tune_id",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_fine-tuning.delete": {
        "id": "endpoint_fine-tuning.delete",
        "namespace": [
          "subpackage_fine-tuning"
        ],
        "description": "Delete the specified tune.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/v1/tune/"
          },
          {
            "type": "pathParameter",
            "value": "tune_id"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "pathParameters": [
          {
            "key": "tune_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the tune."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "map",
              "keyShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_fine-tuning:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/tune/tune_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "tune_id": "tune_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "string": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.octoai.cloud/v1/tune/tune_id",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.delete(\n    tune_id=\"tune_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.delete(\"tune_id\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/tune/:tune_id",
            "responseStatusCode": 422,
            "pathParameters": {
              "tune_id": ":tune_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.octoai.cloud/v1/tune/:tune_id",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.delete(\n    tune_id=\"tune_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.delete(\"tune_id\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.fineTuning.delete(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "tune_id"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.fine_tuning.delete(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "tune_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "tune_id",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_fine-tuning.cancel": {
        "id": "endpoint_fine-tuning.cancel",
        "namespace": [
          "subpackage_fine-tuning"
        ],
        "description": "Cancel the specified tune.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/tune/"
          },
          {
            "type": "pathParameter",
            "value": "tune_id"
          },
          {
            "type": "literal",
            "value": "/cancel"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "pathParameters": [
          {
            "key": "tune_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the tune to cancel."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_fine-tuning:Tune"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_fine-tuning:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/tune/:tune_id/cancel",
            "responseStatusCode": 200,
            "pathParameters": {
              "tune_id": ":tune_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "created_at": "2023-01-01T00:00:00Z",
                "description": "string",
                "details": {
                  "tune_type": "lora_tune",
                  "base_checkpoint": {
                    "checkpoint_id": "string",
                    "engine": "text/llama-2-7b",
                    "name": "string"
                  },
                  "files": [
                    {
                      "file_id": "string",
                      "caption": "string"
                    }
                  ],
                  "steps": 0,
                  "trigger_words": [
                    "string"
                  ],
                  "resize_images": true,
                  "seed": 0
                },
                "id": "string",
                "name": "string",
                "output_lora_ids": [
                  "string"
                ],
                "status": "pending",
                "status_details": "string",
                "tenant_id": "string",
                "tune_type": "lora_tune",
                "updated_at": "2023-01-01T00:00:00Z",
                "deleted_at": "2023-01-01T00:00:00Z",
                "result": {
                  "number_of_available_assets": 0,
                  "output_assets": [
                    "string"
                  ],
                  "rejected_assets": [
                    "string"
                  ],
                  "unready_assets": [
                    "string"
                  ]
                },
                "succeeded_at": "2023-01-01T00:00:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/tune/:tune_id/cancel",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.cancel(\n    tune_id=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.cancel(\"string\");\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/tune/:tune_id/cancel",
            "responseStatusCode": 422,
            "pathParameters": {
              "tune_id": ":tune_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.octoai.cloud/v1/tune/:tune_id/cancel",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.cancel(\n    tune_id=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.cancel(\"string\");\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.fineTuning.cancel(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "$FERN_INPUT",
                    "isOptional": false,
                    "inputDelimiter": ",\n\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "$FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "PATH",
                              "path": "tune_id"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.fine_tuning.cancel(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "tune_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "PATH",
                        "path": "tune_id",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_fine-tuning.list": {
        "id": "endpoint_fine-tuning.list",
        "namespace": [
          "subpackage_fine-tuning"
        ],
        "description": "List all tunes owned by the current user.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/v1/tunes"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.octoai.cloud"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://api.securelink.octo.ai"
          }
        ],
        "queryParameters": [
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Offset into the results."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The max number of results to be shown (limit 100)."
          },
          {
            "key": "name",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The name of the tune to filter on."
          },
          {
            "key": "tune_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_fine-tuning:TuneType"
                  }
                }
              }
            },
            "description": "The type of the tune to filter on."
          },
          {
            "key": "base_checkpoint_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The base checkpoint ID for the LoRA tune."
          },
          {
            "key": "trigger_words",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The trigger words to filter on."
          },
          {
            "key": "engine",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The engine type."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_fine-tuning:ListTunesResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_fine-tuning:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/v1/tunes",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [],
                "has_more": true,
                "total": 1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.octoai.cloud/v1/tunes",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.list();\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/tunes",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "offset": 0,
              "limit": 0
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.octoai.cloud/v1/tunes \\\n     -d offset=0 \\\n     -d limit=0",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.fine_tuning.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.fineTuning.list();\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.fineTuning.list(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "offset: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "offset"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "limit: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "limit"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "name: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "name"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "enum",
                          "imports": [],
                          "isOptional": true,
                          "values": {
                            "lora_tune": "OctoAI.TuneType.LoraTune",
                            "text_to_speech_latent_tune": "OctoAI.TuneType.TextToSpeechLatentTune",
                            "text_to_speech_rvc_tune": "OctoAI.TuneType.TextToSpeechRvcTune",
                            "text_to_speech_tortoise_tune": "OctoAI.TuneType.TextToSpeechTortoiseTune"
                          },
                          "templateString": "tuneType: $FERN_INPUT",
                          "templateInput": {
                            "location": "QUERY",
                            "path": "tune_type"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "baseCheckpointId: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "base_checkpoint_id"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "triggerWords: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "trigger_words"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "engine: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "QUERY",
                              "path": "engine"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.fine_tuning.list(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "offset=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "offset",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "limit=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "limit",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "name=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "name",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "tune_type=$FERN_INPUT",
                    "values": {
                      "lora_tune": "\"lora_tune\"",
                      "text_to_speech_latent_tune": "\"text_to_speech_latent_tune\"",
                      "text_to_speech_rvc_tune": "\"text_to_speech_rvc_tune\"",
                      "text_to_speech_tortoise_tune": "\"text_to_speech_tortoise_tune\""
                    },
                    "templateInput": {
                      "location": "QUERY",
                      "path": "tune_type"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "base_checkpoint_id=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "base_checkpoint_id",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "trigger_words=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "trigger_words",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "engine=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "QUERY",
                        "path": "engine",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_image-gen.generateSsd": {
        "id": "endpoint_image-gen.generateSsd",
        "namespace": [
          "subpackage_image-gen"
        ],
        "description": "Generate images in response to the given request.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/generate/ssd"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://image.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://image.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_image-gen:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/generate/ssd",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "An octopus playing chess, masterpiece, photorealistic"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "images": [
                  {
                    "removed_for_safety": true,
                    "seed": 1,
                    "image_b64": "image_b64",
                    "safety_score": 1.1
                  }
                ],
                "prediction_time_ms": 1.1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/ssd \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"An octopus playing chess, masterpiece, photorealistic\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_ssd(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateSsd({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/generate/ssd",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/ssd \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_ssd(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateSsd({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.imageGen.generateSsd(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "checkpoint: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "checkpoint"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnet: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "vae: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "vae"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "textualInversions: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "textual_inversions"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "loras: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "loras"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "PNDM": "OctoAI.Scheduler.Pndm",
                                  "LMS": "OctoAI.Scheduler.Lms",
                                  "KLMS": "OctoAI.Scheduler.Klms",
                                  "DDIM": "OctoAI.Scheduler.Ddim",
                                  "DDPM": "OctoAI.Scheduler.Ddpm",
                                  "HEUN": "OctoAI.Scheduler.Heun",
                                  "K_HEUN": "OctoAI.Scheduler.KHeun",
                                  "K_EULER": "OctoAI.Scheduler.KEuler",
                                  "K_EULER_ANCESTRAL": "OctoAI.Scheduler.KEulerAncestral",
                                  "DPM_SOLVER_MULTISTEP": "OctoAI.Scheduler.DpmSolverMultistep",
                                  "DPM_PLUS_PLUS_2M_KARRAS": "OctoAI.Scheduler.DpmPlusPlus2MKarras",
                                  "DPM_SINGLE": "OctoAI.Scheduler.DpmSingle",
                                  "DPM_2": "OctoAI.Scheduler.Dpm2",
                                  "DPM_2_ANCESTRAL": "OctoAI.Scheduler.Dpm2Ancestral",
                                  "DPM_PLUS_PLUS_SDE_KARRAS": "OctoAI.Scheduler.DpmPlusPlusSdeKarras",
                                  "UNI_PC": "OctoAI.Scheduler.UniPc",
                                  "LCM": "OctoAI.Scheduler.Lcm"
                                },
                                "templateString": "sampler: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "sampler"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "height: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "height"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "width: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "width"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "cfgScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "cfg_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "steps: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "steps"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "numImages: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "num_images"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "initImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "init_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "maskImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "mask_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "strength: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "strength"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "base": "OctoAI.SdxlStyles.Base",
                                  "3d-model": "OctoAI.SdxlStyles.ThreeDModel",
                                  "analog-film": "OctoAI.SdxlStyles.AnalogFilm",
                                  "anime": "OctoAI.SdxlStyles.Anime",
                                  "cinematic": "OctoAI.SdxlStyles.Cinematic",
                                  "comic-book": "OctoAI.SdxlStyles.ComicBook",
                                  "Craft Clay": "OctoAI.SdxlStyles.CraftClay",
                                  "modeling-compound": "OctoAI.SdxlStyles.ModelingCompound",
                                  "digital-art": "OctoAI.SdxlStyles.DigitalArt",
                                  "enhance": "OctoAI.SdxlStyles.Enhance",
                                  "fantasy-art": "OctoAI.SdxlStyles.FantasyArt",
                                  "isometric": "OctoAI.SdxlStyles.Isometric",
                                  "line-art": "OctoAI.SdxlStyles.LineArt",
                                  "low-poly": "OctoAI.SdxlStyles.LowPoly",
                                  "neon-punk": "OctoAI.SdxlStyles.NeonPunk",
                                  "origami": "OctoAI.SdxlStyles.Origami",
                                  "photographic": "OctoAI.SdxlStyles.Photographic",
                                  "pixel-art": "OctoAI.SdxlStyles.PixelArt",
                                  "tile-texture": "OctoAI.SdxlStyles.TileTexture",
                                  "Advertising": "OctoAI.SdxlStyles.Advertising",
                                  "Food Photography": "OctoAI.SdxlStyles.FoodPhotography",
                                  "Real Estate": "OctoAI.SdxlStyles.RealEstate",
                                  "Abstract": "OctoAI.SdxlStyles.Abstract",
                                  "Cubist": "OctoAI.SdxlStyles.Cubist",
                                  "Graffiti": "OctoAI.SdxlStyles.Graffiti",
                                  "Hyperrealism": "OctoAI.SdxlStyles.Hyperrealism",
                                  "Impressionist": "OctoAI.SdxlStyles.Impressionist",
                                  "Pointillism": "OctoAI.SdxlStyles.Pointillism",
                                  "Pop Art": "OctoAI.SdxlStyles.PopArt",
                                  "Psychedelic": "OctoAI.SdxlStyles.Psychedelic",
                                  "Renaissance": "OctoAI.SdxlStyles.Renaissance",
                                  "Steampunk": "OctoAI.SdxlStyles.Steampunk",
                                  "Surrealist": "OctoAI.SdxlStyles.Surrealist",
                                  "Typography": "OctoAI.SdxlStyles.Typography",
                                  "Watercolor": "OctoAI.SdxlStyles.Watercolor",
                                  "Fighting Game": "OctoAI.SdxlStyles.FightingGame",
                                  "GTA": "OctoAI.SdxlStyles.Gta",
                                  "Super Mario": "OctoAI.SdxlStyles.SuperMario",
                                  "Minecraft": "OctoAI.SdxlStyles.Minecraft",
                                  "Pokémon": "OctoAI.SdxlStyles.Pokemon",
                                  "Retro Arcade": "OctoAI.SdxlStyles.RetroArcade",
                                  "Retro Game": "OctoAI.SdxlStyles.RetroGame",
                                  "RPG Fantasy Game": "OctoAI.SdxlStyles.RpgFantasyGame",
                                  "Strategy Game": "OctoAI.SdxlStyles.StrategyGame",
                                  "Street Fighter": "OctoAI.SdxlStyles.StreetFighter",
                                  "Legend of Zelda": "OctoAI.SdxlStyles.LegendOfZelda",
                                  "Architectural": "OctoAI.SdxlStyles.Architectural",
                                  "Disco": "OctoAI.SdxlStyles.Disco",
                                  "Dreamscape": "OctoAI.SdxlStyles.Dreamscape",
                                  "Dystopian": "OctoAI.SdxlStyles.Dystopian",
                                  "Fairy Tale": "OctoAI.SdxlStyles.FairyTale",
                                  "Gothic": "OctoAI.SdxlStyles.Gothic",
                                  "Grunge": "OctoAI.SdxlStyles.Grunge",
                                  "Horror": "OctoAI.SdxlStyles.Horror",
                                  "Minimalist": "OctoAI.SdxlStyles.Minimalist",
                                  "Monochrome": "OctoAI.SdxlStyles.Monochrome",
                                  "Nautical": "OctoAI.SdxlStyles.Nautical",
                                  "Space": "OctoAI.SdxlStyles.Space",
                                  "Stained Glass": "OctoAI.SdxlStyles.StainedGlass",
                                  "Techwear Fashion": "OctoAI.SdxlStyles.TechwearFashion",
                                  "Tribal": "OctoAI.SdxlStyles.Tribal",
                                  "Zentangle": "OctoAI.SdxlStyles.Zentangle",
                                  "Collage": "OctoAI.SdxlStyles.Collage",
                                  "Flat Papercut": "OctoAI.SdxlStyles.FlatPapercut",
                                  "Kirigami": "OctoAI.SdxlStyles.Kirigami",
                                  "Paper Mache": "OctoAI.SdxlStyles.PaperMache",
                                  "Paper Quilling": "OctoAI.SdxlStyles.PaperQuilling",
                                  "Papercut Collage": "OctoAI.SdxlStyles.PapercutCollage",
                                  "Papercut Shadow Box": "OctoAI.SdxlStyles.PapercutShadowBox",
                                  "Stacked Papercut": "OctoAI.SdxlStyles.StackedPapercut",
                                  "Thick Layered Papercut": "OctoAI.SdxlStyles.ThickLayeredPapercut",
                                  "Alien": "OctoAI.SdxlStyles.Alien",
                                  "Film Noir": "OctoAI.SdxlStyles.FilmNoir",
                                  "HDR": "OctoAI.SdxlStyles.Hdr",
                                  "Long Exposure": "OctoAI.SdxlStyles.LongExposure",
                                  "Neon Noir": "OctoAI.SdxlStyles.NeonNoir",
                                  "Silhouette": "OctoAI.SdxlStyles.Silhouette",
                                  "Tilt-Shift": "OctoAI.SdxlStyles.TiltShift"
                                },
                                "templateString": "stylePreset: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "style_preset"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "useRefiner: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "use_refiner"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "highNoiseFrac: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "high_noise_frac"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetConditioningScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_conditioning_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetEarlyStop: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_early_stop"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetPreprocess: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_preprocess"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "clipSkip: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "clip_skip"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "outpainting: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "outpainting"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "enableSafety: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "enable_safety"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "jpeg": "OctoAI.ImageEncoding.Jpeg",
                                  "png": "OctoAI.ImageEncoding.Png"
                                },
                                "templateString": "imageEncoding: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "image_encoding"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "transferImages: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  }
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "transfer_images"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetDownload: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_download"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetGpuCopy: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_gpu_copy"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.image_gen.generate_ssd(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "checkpoint=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "checkpoint",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "vae=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "vae",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "textual_inversions={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "textual_inversions"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "loras={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "loras"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "sampler=$FERN_INPUT",
                    "values": {
                      "PNDM": "\"PNDM\"",
                      "LMS": "\"LMS\"",
                      "KLMS": "\"KLMS\"",
                      "DDIM": "\"DDIM\"",
                      "DDPM": "\"DDPM\"",
                      "HEUN": "\"HEUN\"",
                      "K_HEUN": "\"K_HEUN\"",
                      "K_EULER": "\"K_EULER\"",
                      "K_EULER_ANCESTRAL": "\"K_EULER_ANCESTRAL\"",
                      "DPM_SOLVER_MULTISTEP": "\"DPM_SOLVER_MULTISTEP\"",
                      "DPM_PLUS_PLUS_2M_KARRAS": "\"DPM_PLUS_PLUS_2M_KARRAS\"",
                      "DPM_SINGLE": "\"DPM_SINGLE\"",
                      "DPM_2": "\"DPM_2\"",
                      "DPM_2_ANCESTRAL": "\"DPM_2_ANCESTRAL\"",
                      "DPM_PLUS_PLUS_SDE_KARRAS": "\"DPM_PLUS_PLUS_SDE_KARRAS\"",
                      "UNI_PC": "\"UNI_PC\"",
                      "LCM": "\"LCM\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "sampler"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "height=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "height",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "width=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "width",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "cfg_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "cfg_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "steps=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "steps",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "num_images=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "num_images",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "init_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "init_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "mask_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "mask_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "strength=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "strength",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "style_preset=$FERN_INPUT",
                    "values": {
                      "base": "\"base\"",
                      "3d-model": "\"3d-model\"",
                      "analog-film": "\"analog-film\"",
                      "anime": "\"anime\"",
                      "cinematic": "\"cinematic\"",
                      "comic-book": "\"comic-book\"",
                      "Craft Clay": "\"Craft Clay\"",
                      "modeling-compound": "\"modeling-compound\"",
                      "digital-art": "\"digital-art\"",
                      "enhance": "\"enhance\"",
                      "fantasy-art": "\"fantasy-art\"",
                      "isometric": "\"isometric\"",
                      "line-art": "\"line-art\"",
                      "low-poly": "\"low-poly\"",
                      "neon-punk": "\"neon-punk\"",
                      "origami": "\"origami\"",
                      "photographic": "\"photographic\"",
                      "pixel-art": "\"pixel-art\"",
                      "tile-texture": "\"tile-texture\"",
                      "Advertising": "\"Advertising\"",
                      "Food Photography": "\"Food Photography\"",
                      "Real Estate": "\"Real Estate\"",
                      "Abstract": "\"Abstract\"",
                      "Cubist": "\"Cubist\"",
                      "Graffiti": "\"Graffiti\"",
                      "Hyperrealism": "\"Hyperrealism\"",
                      "Impressionist": "\"Impressionist\"",
                      "Pointillism": "\"Pointillism\"",
                      "Pop Art": "\"Pop Art\"",
                      "Psychedelic": "\"Psychedelic\"",
                      "Renaissance": "\"Renaissance\"",
                      "Steampunk": "\"Steampunk\"",
                      "Surrealist": "\"Surrealist\"",
                      "Typography": "\"Typography\"",
                      "Watercolor": "\"Watercolor\"",
                      "Fighting Game": "\"Fighting Game\"",
                      "GTA": "\"GTA\"",
                      "Super Mario": "\"Super Mario\"",
                      "Minecraft": "\"Minecraft\"",
                      "Pokémon": "\"Pokémon\"",
                      "Retro Arcade": "\"Retro Arcade\"",
                      "Retro Game": "\"Retro Game\"",
                      "RPG Fantasy Game": "\"RPG Fantasy Game\"",
                      "Strategy Game": "\"Strategy Game\"",
                      "Street Fighter": "\"Street Fighter\"",
                      "Legend of Zelda": "\"Legend of Zelda\"",
                      "Architectural": "\"Architectural\"",
                      "Disco": "\"Disco\"",
                      "Dreamscape": "\"Dreamscape\"",
                      "Dystopian": "\"Dystopian\"",
                      "Fairy Tale": "\"Fairy Tale\"",
                      "Gothic": "\"Gothic\"",
                      "Grunge": "\"Grunge\"",
                      "Horror": "\"Horror\"",
                      "Minimalist": "\"Minimalist\"",
                      "Monochrome": "\"Monochrome\"",
                      "Nautical": "\"Nautical\"",
                      "Space": "\"Space\"",
                      "Stained Glass": "\"Stained Glass\"",
                      "Techwear Fashion": "\"Techwear Fashion\"",
                      "Tribal": "\"Tribal\"",
                      "Zentangle": "\"Zentangle\"",
                      "Collage": "\"Collage\"",
                      "Flat Papercut": "\"Flat Papercut\"",
                      "Kirigami": "\"Kirigami\"",
                      "Paper Mache": "\"Paper Mache\"",
                      "Paper Quilling": "\"Paper Quilling\"",
                      "Papercut Collage": "\"Papercut Collage\"",
                      "Papercut Shadow Box": "\"Papercut Shadow Box\"",
                      "Stacked Papercut": "\"Stacked Papercut\"",
                      "Thick Layered Papercut": "\"Thick Layered Papercut\"",
                      "Alien": "\"Alien\"",
                      "Film Noir": "\"Film Noir\"",
                      "HDR": "\"HDR\"",
                      "Long Exposure": "\"Long Exposure\"",
                      "Neon Noir": "\"Neon Noir\"",
                      "Silhouette": "\"Silhouette\"",
                      "Tilt-Shift": "\"Tilt-Shift\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "style_preset"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "use_refiner=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "use_refiner",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "high_noise_frac=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "high_noise_frac",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_conditioning_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_conditioning_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_early_stop=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_early_stop",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_preprocess=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_preprocess",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "clip_skip=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "clip_skip",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "outpainting=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "outpainting",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "enable_safety=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "enable_safety",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "image_encoding=$FERN_INPUT",
                    "values": {
                      "jpeg": "\"jpeg\"",
                      "png": "\"png\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "image_encoding"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "transfer_images={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                      "delimiter": ",\n\t\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "RELATIVE",
                        "path": null
                      },
                      "type": "iterable"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "transfer_images"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_download=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_download",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_gpu_copy=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_gpu_copy",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_image-gen.generateControlnetSdxl": {
        "id": "endpoint_image-gen.generateControlnetSdxl",
        "namespace": [
          "subpackage_image-gen"
        ],
        "description": "Generate images in response to the given request.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/generate/controlnet-sdxl"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://image.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://image.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_image-gen:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/generate/controlnet-sdxl",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "An octopus playing chess, masterpiece, photorealistic"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "images": [
                  {
                    "removed_for_safety": true,
                    "seed": 1,
                    "image_b64": "image_b64",
                    "safety_score": 1.1
                  }
                ],
                "prediction_time_ms": 1.1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/controlnet-sdxl \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"An octopus playing chess, masterpiece, photorealistic\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_controlnet_sdxl(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateControlnetSdxl({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/generate/controlnet-sdxl",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/controlnet-sdxl \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_controlnet_sdxl(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateControlnetSdxl({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.imageGen.generateControlnetSdxl(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "checkpoint: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "checkpoint"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnet: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "vae: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "vae"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "textualInversions: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "textual_inversions"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "loras: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "loras"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "PNDM": "OctoAI.Scheduler.Pndm",
                                  "LMS": "OctoAI.Scheduler.Lms",
                                  "KLMS": "OctoAI.Scheduler.Klms",
                                  "DDIM": "OctoAI.Scheduler.Ddim",
                                  "DDPM": "OctoAI.Scheduler.Ddpm",
                                  "HEUN": "OctoAI.Scheduler.Heun",
                                  "K_HEUN": "OctoAI.Scheduler.KHeun",
                                  "K_EULER": "OctoAI.Scheduler.KEuler",
                                  "K_EULER_ANCESTRAL": "OctoAI.Scheduler.KEulerAncestral",
                                  "DPM_SOLVER_MULTISTEP": "OctoAI.Scheduler.DpmSolverMultistep",
                                  "DPM_PLUS_PLUS_2M_KARRAS": "OctoAI.Scheduler.DpmPlusPlus2MKarras",
                                  "DPM_SINGLE": "OctoAI.Scheduler.DpmSingle",
                                  "DPM_2": "OctoAI.Scheduler.Dpm2",
                                  "DPM_2_ANCESTRAL": "OctoAI.Scheduler.Dpm2Ancestral",
                                  "DPM_PLUS_PLUS_SDE_KARRAS": "OctoAI.Scheduler.DpmPlusPlusSdeKarras",
                                  "UNI_PC": "OctoAI.Scheduler.UniPc",
                                  "LCM": "OctoAI.Scheduler.Lcm"
                                },
                                "templateString": "sampler: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "sampler"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "height: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "height"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "width: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "width"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "cfgScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "cfg_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "steps: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "steps"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "numImages: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "num_images"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "initImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "init_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "maskImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "mask_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "strength: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "strength"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "base": "OctoAI.SdxlStyles.Base",
                                  "3d-model": "OctoAI.SdxlStyles.ThreeDModel",
                                  "analog-film": "OctoAI.SdxlStyles.AnalogFilm",
                                  "anime": "OctoAI.SdxlStyles.Anime",
                                  "cinematic": "OctoAI.SdxlStyles.Cinematic",
                                  "comic-book": "OctoAI.SdxlStyles.ComicBook",
                                  "Craft Clay": "OctoAI.SdxlStyles.CraftClay",
                                  "modeling-compound": "OctoAI.SdxlStyles.ModelingCompound",
                                  "digital-art": "OctoAI.SdxlStyles.DigitalArt",
                                  "enhance": "OctoAI.SdxlStyles.Enhance",
                                  "fantasy-art": "OctoAI.SdxlStyles.FantasyArt",
                                  "isometric": "OctoAI.SdxlStyles.Isometric",
                                  "line-art": "OctoAI.SdxlStyles.LineArt",
                                  "low-poly": "OctoAI.SdxlStyles.LowPoly",
                                  "neon-punk": "OctoAI.SdxlStyles.NeonPunk",
                                  "origami": "OctoAI.SdxlStyles.Origami",
                                  "photographic": "OctoAI.SdxlStyles.Photographic",
                                  "pixel-art": "OctoAI.SdxlStyles.PixelArt",
                                  "tile-texture": "OctoAI.SdxlStyles.TileTexture",
                                  "Advertising": "OctoAI.SdxlStyles.Advertising",
                                  "Food Photography": "OctoAI.SdxlStyles.FoodPhotography",
                                  "Real Estate": "OctoAI.SdxlStyles.RealEstate",
                                  "Abstract": "OctoAI.SdxlStyles.Abstract",
                                  "Cubist": "OctoAI.SdxlStyles.Cubist",
                                  "Graffiti": "OctoAI.SdxlStyles.Graffiti",
                                  "Hyperrealism": "OctoAI.SdxlStyles.Hyperrealism",
                                  "Impressionist": "OctoAI.SdxlStyles.Impressionist",
                                  "Pointillism": "OctoAI.SdxlStyles.Pointillism",
                                  "Pop Art": "OctoAI.SdxlStyles.PopArt",
                                  "Psychedelic": "OctoAI.SdxlStyles.Psychedelic",
                                  "Renaissance": "OctoAI.SdxlStyles.Renaissance",
                                  "Steampunk": "OctoAI.SdxlStyles.Steampunk",
                                  "Surrealist": "OctoAI.SdxlStyles.Surrealist",
                                  "Typography": "OctoAI.SdxlStyles.Typography",
                                  "Watercolor": "OctoAI.SdxlStyles.Watercolor",
                                  "Fighting Game": "OctoAI.SdxlStyles.FightingGame",
                                  "GTA": "OctoAI.SdxlStyles.Gta",
                                  "Super Mario": "OctoAI.SdxlStyles.SuperMario",
                                  "Minecraft": "OctoAI.SdxlStyles.Minecraft",
                                  "Pokémon": "OctoAI.SdxlStyles.Pokemon",
                                  "Retro Arcade": "OctoAI.SdxlStyles.RetroArcade",
                                  "Retro Game": "OctoAI.SdxlStyles.RetroGame",
                                  "RPG Fantasy Game": "OctoAI.SdxlStyles.RpgFantasyGame",
                                  "Strategy Game": "OctoAI.SdxlStyles.StrategyGame",
                                  "Street Fighter": "OctoAI.SdxlStyles.StreetFighter",
                                  "Legend of Zelda": "OctoAI.SdxlStyles.LegendOfZelda",
                                  "Architectural": "OctoAI.SdxlStyles.Architectural",
                                  "Disco": "OctoAI.SdxlStyles.Disco",
                                  "Dreamscape": "OctoAI.SdxlStyles.Dreamscape",
                                  "Dystopian": "OctoAI.SdxlStyles.Dystopian",
                                  "Fairy Tale": "OctoAI.SdxlStyles.FairyTale",
                                  "Gothic": "OctoAI.SdxlStyles.Gothic",
                                  "Grunge": "OctoAI.SdxlStyles.Grunge",
                                  "Horror": "OctoAI.SdxlStyles.Horror",
                                  "Minimalist": "OctoAI.SdxlStyles.Minimalist",
                                  "Monochrome": "OctoAI.SdxlStyles.Monochrome",
                                  "Nautical": "OctoAI.SdxlStyles.Nautical",
                                  "Space": "OctoAI.SdxlStyles.Space",
                                  "Stained Glass": "OctoAI.SdxlStyles.StainedGlass",
                                  "Techwear Fashion": "OctoAI.SdxlStyles.TechwearFashion",
                                  "Tribal": "OctoAI.SdxlStyles.Tribal",
                                  "Zentangle": "OctoAI.SdxlStyles.Zentangle",
                                  "Collage": "OctoAI.SdxlStyles.Collage",
                                  "Flat Papercut": "OctoAI.SdxlStyles.FlatPapercut",
                                  "Kirigami": "OctoAI.SdxlStyles.Kirigami",
                                  "Paper Mache": "OctoAI.SdxlStyles.PaperMache",
                                  "Paper Quilling": "OctoAI.SdxlStyles.PaperQuilling",
                                  "Papercut Collage": "OctoAI.SdxlStyles.PapercutCollage",
                                  "Papercut Shadow Box": "OctoAI.SdxlStyles.PapercutShadowBox",
                                  "Stacked Papercut": "OctoAI.SdxlStyles.StackedPapercut",
                                  "Thick Layered Papercut": "OctoAI.SdxlStyles.ThickLayeredPapercut",
                                  "Alien": "OctoAI.SdxlStyles.Alien",
                                  "Film Noir": "OctoAI.SdxlStyles.FilmNoir",
                                  "HDR": "OctoAI.SdxlStyles.Hdr",
                                  "Long Exposure": "OctoAI.SdxlStyles.LongExposure",
                                  "Neon Noir": "OctoAI.SdxlStyles.NeonNoir",
                                  "Silhouette": "OctoAI.SdxlStyles.Silhouette",
                                  "Tilt-Shift": "OctoAI.SdxlStyles.TiltShift"
                                },
                                "templateString": "stylePreset: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "style_preset"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "useRefiner: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "use_refiner"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "highNoiseFrac: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "high_noise_frac"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetConditioningScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_conditioning_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetEarlyStop: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_early_stop"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetPreprocess: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_preprocess"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "clipSkip: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "clip_skip"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "outpainting: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "outpainting"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "enableSafety: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "enable_safety"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "jpeg": "OctoAI.ImageEncoding.Jpeg",
                                  "png": "OctoAI.ImageEncoding.Png"
                                },
                                "templateString": "imageEncoding: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "image_encoding"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "transferImages: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  }
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "transfer_images"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetDownload: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_download"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetGpuCopy: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_gpu_copy"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.image_gen.generate_controlnet_sdxl(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "checkpoint=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "checkpoint",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "vae=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "vae",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "textual_inversions={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "textual_inversions"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "loras={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "loras"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "sampler=$FERN_INPUT",
                    "values": {
                      "PNDM": "\"PNDM\"",
                      "LMS": "\"LMS\"",
                      "KLMS": "\"KLMS\"",
                      "DDIM": "\"DDIM\"",
                      "DDPM": "\"DDPM\"",
                      "HEUN": "\"HEUN\"",
                      "K_HEUN": "\"K_HEUN\"",
                      "K_EULER": "\"K_EULER\"",
                      "K_EULER_ANCESTRAL": "\"K_EULER_ANCESTRAL\"",
                      "DPM_SOLVER_MULTISTEP": "\"DPM_SOLVER_MULTISTEP\"",
                      "DPM_PLUS_PLUS_2M_KARRAS": "\"DPM_PLUS_PLUS_2M_KARRAS\"",
                      "DPM_SINGLE": "\"DPM_SINGLE\"",
                      "DPM_2": "\"DPM_2\"",
                      "DPM_2_ANCESTRAL": "\"DPM_2_ANCESTRAL\"",
                      "DPM_PLUS_PLUS_SDE_KARRAS": "\"DPM_PLUS_PLUS_SDE_KARRAS\"",
                      "UNI_PC": "\"UNI_PC\"",
                      "LCM": "\"LCM\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "sampler"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "height=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "height",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "width=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "width",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "cfg_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "cfg_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "steps=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "steps",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "num_images=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "num_images",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "init_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "init_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "mask_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "mask_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "strength=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "strength",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "style_preset=$FERN_INPUT",
                    "values": {
                      "base": "\"base\"",
                      "3d-model": "\"3d-model\"",
                      "analog-film": "\"analog-film\"",
                      "anime": "\"anime\"",
                      "cinematic": "\"cinematic\"",
                      "comic-book": "\"comic-book\"",
                      "Craft Clay": "\"Craft Clay\"",
                      "modeling-compound": "\"modeling-compound\"",
                      "digital-art": "\"digital-art\"",
                      "enhance": "\"enhance\"",
                      "fantasy-art": "\"fantasy-art\"",
                      "isometric": "\"isometric\"",
                      "line-art": "\"line-art\"",
                      "low-poly": "\"low-poly\"",
                      "neon-punk": "\"neon-punk\"",
                      "origami": "\"origami\"",
                      "photographic": "\"photographic\"",
                      "pixel-art": "\"pixel-art\"",
                      "tile-texture": "\"tile-texture\"",
                      "Advertising": "\"Advertising\"",
                      "Food Photography": "\"Food Photography\"",
                      "Real Estate": "\"Real Estate\"",
                      "Abstract": "\"Abstract\"",
                      "Cubist": "\"Cubist\"",
                      "Graffiti": "\"Graffiti\"",
                      "Hyperrealism": "\"Hyperrealism\"",
                      "Impressionist": "\"Impressionist\"",
                      "Pointillism": "\"Pointillism\"",
                      "Pop Art": "\"Pop Art\"",
                      "Psychedelic": "\"Psychedelic\"",
                      "Renaissance": "\"Renaissance\"",
                      "Steampunk": "\"Steampunk\"",
                      "Surrealist": "\"Surrealist\"",
                      "Typography": "\"Typography\"",
                      "Watercolor": "\"Watercolor\"",
                      "Fighting Game": "\"Fighting Game\"",
                      "GTA": "\"GTA\"",
                      "Super Mario": "\"Super Mario\"",
                      "Minecraft": "\"Minecraft\"",
                      "Pokémon": "\"Pokémon\"",
                      "Retro Arcade": "\"Retro Arcade\"",
                      "Retro Game": "\"Retro Game\"",
                      "RPG Fantasy Game": "\"RPG Fantasy Game\"",
                      "Strategy Game": "\"Strategy Game\"",
                      "Street Fighter": "\"Street Fighter\"",
                      "Legend of Zelda": "\"Legend of Zelda\"",
                      "Architectural": "\"Architectural\"",
                      "Disco": "\"Disco\"",
                      "Dreamscape": "\"Dreamscape\"",
                      "Dystopian": "\"Dystopian\"",
                      "Fairy Tale": "\"Fairy Tale\"",
                      "Gothic": "\"Gothic\"",
                      "Grunge": "\"Grunge\"",
                      "Horror": "\"Horror\"",
                      "Minimalist": "\"Minimalist\"",
                      "Monochrome": "\"Monochrome\"",
                      "Nautical": "\"Nautical\"",
                      "Space": "\"Space\"",
                      "Stained Glass": "\"Stained Glass\"",
                      "Techwear Fashion": "\"Techwear Fashion\"",
                      "Tribal": "\"Tribal\"",
                      "Zentangle": "\"Zentangle\"",
                      "Collage": "\"Collage\"",
                      "Flat Papercut": "\"Flat Papercut\"",
                      "Kirigami": "\"Kirigami\"",
                      "Paper Mache": "\"Paper Mache\"",
                      "Paper Quilling": "\"Paper Quilling\"",
                      "Papercut Collage": "\"Papercut Collage\"",
                      "Papercut Shadow Box": "\"Papercut Shadow Box\"",
                      "Stacked Papercut": "\"Stacked Papercut\"",
                      "Thick Layered Papercut": "\"Thick Layered Papercut\"",
                      "Alien": "\"Alien\"",
                      "Film Noir": "\"Film Noir\"",
                      "HDR": "\"HDR\"",
                      "Long Exposure": "\"Long Exposure\"",
                      "Neon Noir": "\"Neon Noir\"",
                      "Silhouette": "\"Silhouette\"",
                      "Tilt-Shift": "\"Tilt-Shift\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "style_preset"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "use_refiner=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "use_refiner",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "high_noise_frac=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "high_noise_frac",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_conditioning_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_conditioning_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_early_stop=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_early_stop",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_preprocess=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_preprocess",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "clip_skip=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "clip_skip",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "outpainting=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "outpainting",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "enable_safety=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "enable_safety",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "image_encoding=$FERN_INPUT",
                    "values": {
                      "jpeg": "\"jpeg\"",
                      "png": "\"png\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "image_encoding"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "transfer_images={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                      "delimiter": ",\n\t\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "RELATIVE",
                        "path": null
                      },
                      "type": "iterable"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "transfer_images"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_download=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_download",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_gpu_copy=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_gpu_copy",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_image-gen.generateControlnetSd15": {
        "id": "endpoint_image-gen.generateControlnetSd15",
        "namespace": [
          "subpackage_image-gen"
        ],
        "description": "Generate images in response to the given request.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/generate/controlnet-sd15"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://image.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://image.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_image-gen:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/generate/controlnet-sd15",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "An octopus playing chess, masterpiece, photorealistic"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "images": [
                  {
                    "removed_for_safety": true,
                    "seed": 1,
                    "image_b64": "image_b64",
                    "safety_score": 1.1
                  }
                ],
                "prediction_time_ms": 1.1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/controlnet-sd15 \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"An octopus playing chess, masterpiece, photorealistic\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_controlnet_sd15(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateControlnetSd15({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/generate/controlnet-sd15",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/controlnet-sd15 \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_controlnet_sd15(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateControlnetSd15({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.imageGen.generateControlnetSd15(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "checkpoint: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "checkpoint"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnet: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "vae: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "vae"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "textualInversions: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "textual_inversions"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "loras: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "loras"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "PNDM": "OctoAI.Scheduler.Pndm",
                                  "LMS": "OctoAI.Scheduler.Lms",
                                  "KLMS": "OctoAI.Scheduler.Klms",
                                  "DDIM": "OctoAI.Scheduler.Ddim",
                                  "DDPM": "OctoAI.Scheduler.Ddpm",
                                  "HEUN": "OctoAI.Scheduler.Heun",
                                  "K_HEUN": "OctoAI.Scheduler.KHeun",
                                  "K_EULER": "OctoAI.Scheduler.KEuler",
                                  "K_EULER_ANCESTRAL": "OctoAI.Scheduler.KEulerAncestral",
                                  "DPM_SOLVER_MULTISTEP": "OctoAI.Scheduler.DpmSolverMultistep",
                                  "DPM_PLUS_PLUS_2M_KARRAS": "OctoAI.Scheduler.DpmPlusPlus2MKarras",
                                  "DPM_SINGLE": "OctoAI.Scheduler.DpmSingle",
                                  "DPM_2": "OctoAI.Scheduler.Dpm2",
                                  "DPM_2_ANCESTRAL": "OctoAI.Scheduler.Dpm2Ancestral",
                                  "DPM_PLUS_PLUS_SDE_KARRAS": "OctoAI.Scheduler.DpmPlusPlusSdeKarras",
                                  "UNI_PC": "OctoAI.Scheduler.UniPc",
                                  "LCM": "OctoAI.Scheduler.Lcm"
                                },
                                "templateString": "sampler: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "sampler"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "height: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "height"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "width: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "width"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "cfgScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "cfg_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "steps: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "steps"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "numImages: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "num_images"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "initImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "init_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "maskImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "mask_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "strength: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "strength"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "base": "OctoAI.SdxlStyles.Base",
                                  "3d-model": "OctoAI.SdxlStyles.ThreeDModel",
                                  "analog-film": "OctoAI.SdxlStyles.AnalogFilm",
                                  "anime": "OctoAI.SdxlStyles.Anime",
                                  "cinematic": "OctoAI.SdxlStyles.Cinematic",
                                  "comic-book": "OctoAI.SdxlStyles.ComicBook",
                                  "Craft Clay": "OctoAI.SdxlStyles.CraftClay",
                                  "modeling-compound": "OctoAI.SdxlStyles.ModelingCompound",
                                  "digital-art": "OctoAI.SdxlStyles.DigitalArt",
                                  "enhance": "OctoAI.SdxlStyles.Enhance",
                                  "fantasy-art": "OctoAI.SdxlStyles.FantasyArt",
                                  "isometric": "OctoAI.SdxlStyles.Isometric",
                                  "line-art": "OctoAI.SdxlStyles.LineArt",
                                  "low-poly": "OctoAI.SdxlStyles.LowPoly",
                                  "neon-punk": "OctoAI.SdxlStyles.NeonPunk",
                                  "origami": "OctoAI.SdxlStyles.Origami",
                                  "photographic": "OctoAI.SdxlStyles.Photographic",
                                  "pixel-art": "OctoAI.SdxlStyles.PixelArt",
                                  "tile-texture": "OctoAI.SdxlStyles.TileTexture",
                                  "Advertising": "OctoAI.SdxlStyles.Advertising",
                                  "Food Photography": "OctoAI.SdxlStyles.FoodPhotography",
                                  "Real Estate": "OctoAI.SdxlStyles.RealEstate",
                                  "Abstract": "OctoAI.SdxlStyles.Abstract",
                                  "Cubist": "OctoAI.SdxlStyles.Cubist",
                                  "Graffiti": "OctoAI.SdxlStyles.Graffiti",
                                  "Hyperrealism": "OctoAI.SdxlStyles.Hyperrealism",
                                  "Impressionist": "OctoAI.SdxlStyles.Impressionist",
                                  "Pointillism": "OctoAI.SdxlStyles.Pointillism",
                                  "Pop Art": "OctoAI.SdxlStyles.PopArt",
                                  "Psychedelic": "OctoAI.SdxlStyles.Psychedelic",
                                  "Renaissance": "OctoAI.SdxlStyles.Renaissance",
                                  "Steampunk": "OctoAI.SdxlStyles.Steampunk",
                                  "Surrealist": "OctoAI.SdxlStyles.Surrealist",
                                  "Typography": "OctoAI.SdxlStyles.Typography",
                                  "Watercolor": "OctoAI.SdxlStyles.Watercolor",
                                  "Fighting Game": "OctoAI.SdxlStyles.FightingGame",
                                  "GTA": "OctoAI.SdxlStyles.Gta",
                                  "Super Mario": "OctoAI.SdxlStyles.SuperMario",
                                  "Minecraft": "OctoAI.SdxlStyles.Minecraft",
                                  "Pokémon": "OctoAI.SdxlStyles.Pokemon",
                                  "Retro Arcade": "OctoAI.SdxlStyles.RetroArcade",
                                  "Retro Game": "OctoAI.SdxlStyles.RetroGame",
                                  "RPG Fantasy Game": "OctoAI.SdxlStyles.RpgFantasyGame",
                                  "Strategy Game": "OctoAI.SdxlStyles.StrategyGame",
                                  "Street Fighter": "OctoAI.SdxlStyles.StreetFighter",
                                  "Legend of Zelda": "OctoAI.SdxlStyles.LegendOfZelda",
                                  "Architectural": "OctoAI.SdxlStyles.Architectural",
                                  "Disco": "OctoAI.SdxlStyles.Disco",
                                  "Dreamscape": "OctoAI.SdxlStyles.Dreamscape",
                                  "Dystopian": "OctoAI.SdxlStyles.Dystopian",
                                  "Fairy Tale": "OctoAI.SdxlStyles.FairyTale",
                                  "Gothic": "OctoAI.SdxlStyles.Gothic",
                                  "Grunge": "OctoAI.SdxlStyles.Grunge",
                                  "Horror": "OctoAI.SdxlStyles.Horror",
                                  "Minimalist": "OctoAI.SdxlStyles.Minimalist",
                                  "Monochrome": "OctoAI.SdxlStyles.Monochrome",
                                  "Nautical": "OctoAI.SdxlStyles.Nautical",
                                  "Space": "OctoAI.SdxlStyles.Space",
                                  "Stained Glass": "OctoAI.SdxlStyles.StainedGlass",
                                  "Techwear Fashion": "OctoAI.SdxlStyles.TechwearFashion",
                                  "Tribal": "OctoAI.SdxlStyles.Tribal",
                                  "Zentangle": "OctoAI.SdxlStyles.Zentangle",
                                  "Collage": "OctoAI.SdxlStyles.Collage",
                                  "Flat Papercut": "OctoAI.SdxlStyles.FlatPapercut",
                                  "Kirigami": "OctoAI.SdxlStyles.Kirigami",
                                  "Paper Mache": "OctoAI.SdxlStyles.PaperMache",
                                  "Paper Quilling": "OctoAI.SdxlStyles.PaperQuilling",
                                  "Papercut Collage": "OctoAI.SdxlStyles.PapercutCollage",
                                  "Papercut Shadow Box": "OctoAI.SdxlStyles.PapercutShadowBox",
                                  "Stacked Papercut": "OctoAI.SdxlStyles.StackedPapercut",
                                  "Thick Layered Papercut": "OctoAI.SdxlStyles.ThickLayeredPapercut",
                                  "Alien": "OctoAI.SdxlStyles.Alien",
                                  "Film Noir": "OctoAI.SdxlStyles.FilmNoir",
                                  "HDR": "OctoAI.SdxlStyles.Hdr",
                                  "Long Exposure": "OctoAI.SdxlStyles.LongExposure",
                                  "Neon Noir": "OctoAI.SdxlStyles.NeonNoir",
                                  "Silhouette": "OctoAI.SdxlStyles.Silhouette",
                                  "Tilt-Shift": "OctoAI.SdxlStyles.TiltShift"
                                },
                                "templateString": "stylePreset: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "style_preset"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "useRefiner: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "use_refiner"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "highNoiseFrac: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "high_noise_frac"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetConditioningScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_conditioning_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetEarlyStop: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_early_stop"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetPreprocess: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_preprocess"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "clipSkip: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "clip_skip"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "outpainting: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "outpainting"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "enableSafety: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "enable_safety"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "jpeg": "OctoAI.ImageEncoding.Jpeg",
                                  "png": "OctoAI.ImageEncoding.Png"
                                },
                                "templateString": "imageEncoding: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "image_encoding"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "transferImages: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  }
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "transfer_images"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetDownload: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_download"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetGpuCopy: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_gpu_copy"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.image_gen.generate_controlnet_sd15(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "checkpoint=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "checkpoint",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "vae=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "vae",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "textual_inversions={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "textual_inversions"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "loras={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "loras"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "sampler=$FERN_INPUT",
                    "values": {
                      "PNDM": "\"PNDM\"",
                      "LMS": "\"LMS\"",
                      "KLMS": "\"KLMS\"",
                      "DDIM": "\"DDIM\"",
                      "DDPM": "\"DDPM\"",
                      "HEUN": "\"HEUN\"",
                      "K_HEUN": "\"K_HEUN\"",
                      "K_EULER": "\"K_EULER\"",
                      "K_EULER_ANCESTRAL": "\"K_EULER_ANCESTRAL\"",
                      "DPM_SOLVER_MULTISTEP": "\"DPM_SOLVER_MULTISTEP\"",
                      "DPM_PLUS_PLUS_2M_KARRAS": "\"DPM_PLUS_PLUS_2M_KARRAS\"",
                      "DPM_SINGLE": "\"DPM_SINGLE\"",
                      "DPM_2": "\"DPM_2\"",
                      "DPM_2_ANCESTRAL": "\"DPM_2_ANCESTRAL\"",
                      "DPM_PLUS_PLUS_SDE_KARRAS": "\"DPM_PLUS_PLUS_SDE_KARRAS\"",
                      "UNI_PC": "\"UNI_PC\"",
                      "LCM": "\"LCM\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "sampler"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "height=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "height",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "width=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "width",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "cfg_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "cfg_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "steps=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "steps",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "num_images=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "num_images",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "init_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "init_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "mask_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "mask_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "strength=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "strength",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "style_preset=$FERN_INPUT",
                    "values": {
                      "base": "\"base\"",
                      "3d-model": "\"3d-model\"",
                      "analog-film": "\"analog-film\"",
                      "anime": "\"anime\"",
                      "cinematic": "\"cinematic\"",
                      "comic-book": "\"comic-book\"",
                      "Craft Clay": "\"Craft Clay\"",
                      "modeling-compound": "\"modeling-compound\"",
                      "digital-art": "\"digital-art\"",
                      "enhance": "\"enhance\"",
                      "fantasy-art": "\"fantasy-art\"",
                      "isometric": "\"isometric\"",
                      "line-art": "\"line-art\"",
                      "low-poly": "\"low-poly\"",
                      "neon-punk": "\"neon-punk\"",
                      "origami": "\"origami\"",
                      "photographic": "\"photographic\"",
                      "pixel-art": "\"pixel-art\"",
                      "tile-texture": "\"tile-texture\"",
                      "Advertising": "\"Advertising\"",
                      "Food Photography": "\"Food Photography\"",
                      "Real Estate": "\"Real Estate\"",
                      "Abstract": "\"Abstract\"",
                      "Cubist": "\"Cubist\"",
                      "Graffiti": "\"Graffiti\"",
                      "Hyperrealism": "\"Hyperrealism\"",
                      "Impressionist": "\"Impressionist\"",
                      "Pointillism": "\"Pointillism\"",
                      "Pop Art": "\"Pop Art\"",
                      "Psychedelic": "\"Psychedelic\"",
                      "Renaissance": "\"Renaissance\"",
                      "Steampunk": "\"Steampunk\"",
                      "Surrealist": "\"Surrealist\"",
                      "Typography": "\"Typography\"",
                      "Watercolor": "\"Watercolor\"",
                      "Fighting Game": "\"Fighting Game\"",
                      "GTA": "\"GTA\"",
                      "Super Mario": "\"Super Mario\"",
                      "Minecraft": "\"Minecraft\"",
                      "Pokémon": "\"Pokémon\"",
                      "Retro Arcade": "\"Retro Arcade\"",
                      "Retro Game": "\"Retro Game\"",
                      "RPG Fantasy Game": "\"RPG Fantasy Game\"",
                      "Strategy Game": "\"Strategy Game\"",
                      "Street Fighter": "\"Street Fighter\"",
                      "Legend of Zelda": "\"Legend of Zelda\"",
                      "Architectural": "\"Architectural\"",
                      "Disco": "\"Disco\"",
                      "Dreamscape": "\"Dreamscape\"",
                      "Dystopian": "\"Dystopian\"",
                      "Fairy Tale": "\"Fairy Tale\"",
                      "Gothic": "\"Gothic\"",
                      "Grunge": "\"Grunge\"",
                      "Horror": "\"Horror\"",
                      "Minimalist": "\"Minimalist\"",
                      "Monochrome": "\"Monochrome\"",
                      "Nautical": "\"Nautical\"",
                      "Space": "\"Space\"",
                      "Stained Glass": "\"Stained Glass\"",
                      "Techwear Fashion": "\"Techwear Fashion\"",
                      "Tribal": "\"Tribal\"",
                      "Zentangle": "\"Zentangle\"",
                      "Collage": "\"Collage\"",
                      "Flat Papercut": "\"Flat Papercut\"",
                      "Kirigami": "\"Kirigami\"",
                      "Paper Mache": "\"Paper Mache\"",
                      "Paper Quilling": "\"Paper Quilling\"",
                      "Papercut Collage": "\"Papercut Collage\"",
                      "Papercut Shadow Box": "\"Papercut Shadow Box\"",
                      "Stacked Papercut": "\"Stacked Papercut\"",
                      "Thick Layered Papercut": "\"Thick Layered Papercut\"",
                      "Alien": "\"Alien\"",
                      "Film Noir": "\"Film Noir\"",
                      "HDR": "\"HDR\"",
                      "Long Exposure": "\"Long Exposure\"",
                      "Neon Noir": "\"Neon Noir\"",
                      "Silhouette": "\"Silhouette\"",
                      "Tilt-Shift": "\"Tilt-Shift\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "style_preset"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "use_refiner=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "use_refiner",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "high_noise_frac=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "high_noise_frac",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_conditioning_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_conditioning_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_early_stop=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_early_stop",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_preprocess=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_preprocess",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "clip_skip=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "clip_skip",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "outpainting=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "outpainting",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "enable_safety=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "enable_safety",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "image_encoding=$FERN_INPUT",
                    "values": {
                      "jpeg": "\"jpeg\"",
                      "png": "\"png\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "image_encoding"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "transfer_images={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                      "delimiter": ",\n\t\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "RELATIVE",
                        "path": null
                      },
                      "type": "iterable"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "transfer_images"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_download=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_download",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_gpu_copy=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_gpu_copy",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_image-gen.generateSdxl": {
        "id": "endpoint_image-gen.generateSdxl",
        "namespace": [
          "subpackage_image-gen"
        ],
        "description": "Generate images in response to the given request.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/generate/sdxl"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://image.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://image.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_image-gen:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/generate/sdxl",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "An octopus playing chess, masterpiece, photorealistic"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "images": [
                  {
                    "removed_for_safety": true,
                    "seed": 1,
                    "image_b64": "image_b64",
                    "safety_score": 1.1
                  }
                ],
                "prediction_time_ms": 1.1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/sdxl \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"An octopus playing chess, masterpiece, photorealistic\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_sdxl(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateSdxl({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/generate/sdxl",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/sdxl \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_sdxl(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateSdxl({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.imageGen.generateSdxl(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "checkpoint: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "checkpoint"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnet: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "vae: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "vae"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "textualInversions: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "textual_inversions"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "loras: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "loras"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "PNDM": "OctoAI.Scheduler.Pndm",
                                  "LMS": "OctoAI.Scheduler.Lms",
                                  "KLMS": "OctoAI.Scheduler.Klms",
                                  "DDIM": "OctoAI.Scheduler.Ddim",
                                  "DDPM": "OctoAI.Scheduler.Ddpm",
                                  "HEUN": "OctoAI.Scheduler.Heun",
                                  "K_HEUN": "OctoAI.Scheduler.KHeun",
                                  "K_EULER": "OctoAI.Scheduler.KEuler",
                                  "K_EULER_ANCESTRAL": "OctoAI.Scheduler.KEulerAncestral",
                                  "DPM_SOLVER_MULTISTEP": "OctoAI.Scheduler.DpmSolverMultistep",
                                  "DPM_PLUS_PLUS_2M_KARRAS": "OctoAI.Scheduler.DpmPlusPlus2MKarras",
                                  "DPM_SINGLE": "OctoAI.Scheduler.DpmSingle",
                                  "DPM_2": "OctoAI.Scheduler.Dpm2",
                                  "DPM_2_ANCESTRAL": "OctoAI.Scheduler.Dpm2Ancestral",
                                  "DPM_PLUS_PLUS_SDE_KARRAS": "OctoAI.Scheduler.DpmPlusPlusSdeKarras",
                                  "UNI_PC": "OctoAI.Scheduler.UniPc",
                                  "LCM": "OctoAI.Scheduler.Lcm"
                                },
                                "templateString": "sampler: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "sampler"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "height: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "height"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "width: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "width"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "cfgScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "cfg_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "steps: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "steps"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "numImages: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "num_images"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "initImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "init_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "maskImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "mask_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "strength: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "strength"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "base": "OctoAI.SdxlStyles.Base",
                                  "3d-model": "OctoAI.SdxlStyles.ThreeDModel",
                                  "analog-film": "OctoAI.SdxlStyles.AnalogFilm",
                                  "anime": "OctoAI.SdxlStyles.Anime",
                                  "cinematic": "OctoAI.SdxlStyles.Cinematic",
                                  "comic-book": "OctoAI.SdxlStyles.ComicBook",
                                  "Craft Clay": "OctoAI.SdxlStyles.CraftClay",
                                  "modeling-compound": "OctoAI.SdxlStyles.ModelingCompound",
                                  "digital-art": "OctoAI.SdxlStyles.DigitalArt",
                                  "enhance": "OctoAI.SdxlStyles.Enhance",
                                  "fantasy-art": "OctoAI.SdxlStyles.FantasyArt",
                                  "isometric": "OctoAI.SdxlStyles.Isometric",
                                  "line-art": "OctoAI.SdxlStyles.LineArt",
                                  "low-poly": "OctoAI.SdxlStyles.LowPoly",
                                  "neon-punk": "OctoAI.SdxlStyles.NeonPunk",
                                  "origami": "OctoAI.SdxlStyles.Origami",
                                  "photographic": "OctoAI.SdxlStyles.Photographic",
                                  "pixel-art": "OctoAI.SdxlStyles.PixelArt",
                                  "tile-texture": "OctoAI.SdxlStyles.TileTexture",
                                  "Advertising": "OctoAI.SdxlStyles.Advertising",
                                  "Food Photography": "OctoAI.SdxlStyles.FoodPhotography",
                                  "Real Estate": "OctoAI.SdxlStyles.RealEstate",
                                  "Abstract": "OctoAI.SdxlStyles.Abstract",
                                  "Cubist": "OctoAI.SdxlStyles.Cubist",
                                  "Graffiti": "OctoAI.SdxlStyles.Graffiti",
                                  "Hyperrealism": "OctoAI.SdxlStyles.Hyperrealism",
                                  "Impressionist": "OctoAI.SdxlStyles.Impressionist",
                                  "Pointillism": "OctoAI.SdxlStyles.Pointillism",
                                  "Pop Art": "OctoAI.SdxlStyles.PopArt",
                                  "Psychedelic": "OctoAI.SdxlStyles.Psychedelic",
                                  "Renaissance": "OctoAI.SdxlStyles.Renaissance",
                                  "Steampunk": "OctoAI.SdxlStyles.Steampunk",
                                  "Surrealist": "OctoAI.SdxlStyles.Surrealist",
                                  "Typography": "OctoAI.SdxlStyles.Typography",
                                  "Watercolor": "OctoAI.SdxlStyles.Watercolor",
                                  "Fighting Game": "OctoAI.SdxlStyles.FightingGame",
                                  "GTA": "OctoAI.SdxlStyles.Gta",
                                  "Super Mario": "OctoAI.SdxlStyles.SuperMario",
                                  "Minecraft": "OctoAI.SdxlStyles.Minecraft",
                                  "Pokémon": "OctoAI.SdxlStyles.Pokemon",
                                  "Retro Arcade": "OctoAI.SdxlStyles.RetroArcade",
                                  "Retro Game": "OctoAI.SdxlStyles.RetroGame",
                                  "RPG Fantasy Game": "OctoAI.SdxlStyles.RpgFantasyGame",
                                  "Strategy Game": "OctoAI.SdxlStyles.StrategyGame",
                                  "Street Fighter": "OctoAI.SdxlStyles.StreetFighter",
                                  "Legend of Zelda": "OctoAI.SdxlStyles.LegendOfZelda",
                                  "Architectural": "OctoAI.SdxlStyles.Architectural",
                                  "Disco": "OctoAI.SdxlStyles.Disco",
                                  "Dreamscape": "OctoAI.SdxlStyles.Dreamscape",
                                  "Dystopian": "OctoAI.SdxlStyles.Dystopian",
                                  "Fairy Tale": "OctoAI.SdxlStyles.FairyTale",
                                  "Gothic": "OctoAI.SdxlStyles.Gothic",
                                  "Grunge": "OctoAI.SdxlStyles.Grunge",
                                  "Horror": "OctoAI.SdxlStyles.Horror",
                                  "Minimalist": "OctoAI.SdxlStyles.Minimalist",
                                  "Monochrome": "OctoAI.SdxlStyles.Monochrome",
                                  "Nautical": "OctoAI.SdxlStyles.Nautical",
                                  "Space": "OctoAI.SdxlStyles.Space",
                                  "Stained Glass": "OctoAI.SdxlStyles.StainedGlass",
                                  "Techwear Fashion": "OctoAI.SdxlStyles.TechwearFashion",
                                  "Tribal": "OctoAI.SdxlStyles.Tribal",
                                  "Zentangle": "OctoAI.SdxlStyles.Zentangle",
                                  "Collage": "OctoAI.SdxlStyles.Collage",
                                  "Flat Papercut": "OctoAI.SdxlStyles.FlatPapercut",
                                  "Kirigami": "OctoAI.SdxlStyles.Kirigami",
                                  "Paper Mache": "OctoAI.SdxlStyles.PaperMache",
                                  "Paper Quilling": "OctoAI.SdxlStyles.PaperQuilling",
                                  "Papercut Collage": "OctoAI.SdxlStyles.PapercutCollage",
                                  "Papercut Shadow Box": "OctoAI.SdxlStyles.PapercutShadowBox",
                                  "Stacked Papercut": "OctoAI.SdxlStyles.StackedPapercut",
                                  "Thick Layered Papercut": "OctoAI.SdxlStyles.ThickLayeredPapercut",
                                  "Alien": "OctoAI.SdxlStyles.Alien",
                                  "Film Noir": "OctoAI.SdxlStyles.FilmNoir",
                                  "HDR": "OctoAI.SdxlStyles.Hdr",
                                  "Long Exposure": "OctoAI.SdxlStyles.LongExposure",
                                  "Neon Noir": "OctoAI.SdxlStyles.NeonNoir",
                                  "Silhouette": "OctoAI.SdxlStyles.Silhouette",
                                  "Tilt-Shift": "OctoAI.SdxlStyles.TiltShift"
                                },
                                "templateString": "stylePreset: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "style_preset"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "useRefiner: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "use_refiner"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "highNoiseFrac: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "high_noise_frac"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetConditioningScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_conditioning_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetEarlyStop: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_early_stop"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetPreprocess: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_preprocess"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "clipSkip: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "clip_skip"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "outpainting: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "outpainting"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "enableSafety: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "enable_safety"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "jpeg": "OctoAI.ImageEncoding.Jpeg",
                                  "png": "OctoAI.ImageEncoding.Png"
                                },
                                "templateString": "imageEncoding: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "image_encoding"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "transferImages: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  }
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "transfer_images"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetDownload: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_download"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetGpuCopy: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_gpu_copy"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.image_gen.generate_sdxl(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "checkpoint=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "checkpoint",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "vae=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "vae",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "textual_inversions={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "textual_inversions"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "loras={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "loras"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "sampler=$FERN_INPUT",
                    "values": {
                      "PNDM": "\"PNDM\"",
                      "LMS": "\"LMS\"",
                      "KLMS": "\"KLMS\"",
                      "DDIM": "\"DDIM\"",
                      "DDPM": "\"DDPM\"",
                      "HEUN": "\"HEUN\"",
                      "K_HEUN": "\"K_HEUN\"",
                      "K_EULER": "\"K_EULER\"",
                      "K_EULER_ANCESTRAL": "\"K_EULER_ANCESTRAL\"",
                      "DPM_SOLVER_MULTISTEP": "\"DPM_SOLVER_MULTISTEP\"",
                      "DPM_PLUS_PLUS_2M_KARRAS": "\"DPM_PLUS_PLUS_2M_KARRAS\"",
                      "DPM_SINGLE": "\"DPM_SINGLE\"",
                      "DPM_2": "\"DPM_2\"",
                      "DPM_2_ANCESTRAL": "\"DPM_2_ANCESTRAL\"",
                      "DPM_PLUS_PLUS_SDE_KARRAS": "\"DPM_PLUS_PLUS_SDE_KARRAS\"",
                      "UNI_PC": "\"UNI_PC\"",
                      "LCM": "\"LCM\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "sampler"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "height=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "height",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "width=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "width",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "cfg_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "cfg_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "steps=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "steps",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "num_images=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "num_images",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "init_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "init_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "mask_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "mask_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "strength=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "strength",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "style_preset=$FERN_INPUT",
                    "values": {
                      "base": "\"base\"",
                      "3d-model": "\"3d-model\"",
                      "analog-film": "\"analog-film\"",
                      "anime": "\"anime\"",
                      "cinematic": "\"cinematic\"",
                      "comic-book": "\"comic-book\"",
                      "Craft Clay": "\"Craft Clay\"",
                      "modeling-compound": "\"modeling-compound\"",
                      "digital-art": "\"digital-art\"",
                      "enhance": "\"enhance\"",
                      "fantasy-art": "\"fantasy-art\"",
                      "isometric": "\"isometric\"",
                      "line-art": "\"line-art\"",
                      "low-poly": "\"low-poly\"",
                      "neon-punk": "\"neon-punk\"",
                      "origami": "\"origami\"",
                      "photographic": "\"photographic\"",
                      "pixel-art": "\"pixel-art\"",
                      "tile-texture": "\"tile-texture\"",
                      "Advertising": "\"Advertising\"",
                      "Food Photography": "\"Food Photography\"",
                      "Real Estate": "\"Real Estate\"",
                      "Abstract": "\"Abstract\"",
                      "Cubist": "\"Cubist\"",
                      "Graffiti": "\"Graffiti\"",
                      "Hyperrealism": "\"Hyperrealism\"",
                      "Impressionist": "\"Impressionist\"",
                      "Pointillism": "\"Pointillism\"",
                      "Pop Art": "\"Pop Art\"",
                      "Psychedelic": "\"Psychedelic\"",
                      "Renaissance": "\"Renaissance\"",
                      "Steampunk": "\"Steampunk\"",
                      "Surrealist": "\"Surrealist\"",
                      "Typography": "\"Typography\"",
                      "Watercolor": "\"Watercolor\"",
                      "Fighting Game": "\"Fighting Game\"",
                      "GTA": "\"GTA\"",
                      "Super Mario": "\"Super Mario\"",
                      "Minecraft": "\"Minecraft\"",
                      "Pokémon": "\"Pokémon\"",
                      "Retro Arcade": "\"Retro Arcade\"",
                      "Retro Game": "\"Retro Game\"",
                      "RPG Fantasy Game": "\"RPG Fantasy Game\"",
                      "Strategy Game": "\"Strategy Game\"",
                      "Street Fighter": "\"Street Fighter\"",
                      "Legend of Zelda": "\"Legend of Zelda\"",
                      "Architectural": "\"Architectural\"",
                      "Disco": "\"Disco\"",
                      "Dreamscape": "\"Dreamscape\"",
                      "Dystopian": "\"Dystopian\"",
                      "Fairy Tale": "\"Fairy Tale\"",
                      "Gothic": "\"Gothic\"",
                      "Grunge": "\"Grunge\"",
                      "Horror": "\"Horror\"",
                      "Minimalist": "\"Minimalist\"",
                      "Monochrome": "\"Monochrome\"",
                      "Nautical": "\"Nautical\"",
                      "Space": "\"Space\"",
                      "Stained Glass": "\"Stained Glass\"",
                      "Techwear Fashion": "\"Techwear Fashion\"",
                      "Tribal": "\"Tribal\"",
                      "Zentangle": "\"Zentangle\"",
                      "Collage": "\"Collage\"",
                      "Flat Papercut": "\"Flat Papercut\"",
                      "Kirigami": "\"Kirigami\"",
                      "Paper Mache": "\"Paper Mache\"",
                      "Paper Quilling": "\"Paper Quilling\"",
                      "Papercut Collage": "\"Papercut Collage\"",
                      "Papercut Shadow Box": "\"Papercut Shadow Box\"",
                      "Stacked Papercut": "\"Stacked Papercut\"",
                      "Thick Layered Papercut": "\"Thick Layered Papercut\"",
                      "Alien": "\"Alien\"",
                      "Film Noir": "\"Film Noir\"",
                      "HDR": "\"HDR\"",
                      "Long Exposure": "\"Long Exposure\"",
                      "Neon Noir": "\"Neon Noir\"",
                      "Silhouette": "\"Silhouette\"",
                      "Tilt-Shift": "\"Tilt-Shift\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "style_preset"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "use_refiner=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "use_refiner",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "high_noise_frac=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "high_noise_frac",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_conditioning_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_conditioning_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_early_stop=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_early_stop",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_preprocess=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_preprocess",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "clip_skip=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "clip_skip",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "outpainting=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "outpainting",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "enable_safety=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "enable_safety",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "image_encoding=$FERN_INPUT",
                    "values": {
                      "jpeg": "\"jpeg\"",
                      "png": "\"png\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "image_encoding"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "transfer_images={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                      "delimiter": ",\n\t\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "RELATIVE",
                        "path": null
                      },
                      "type": "iterable"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "transfer_images"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_download=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_download",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_gpu_copy=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_gpu_copy",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_image-gen.generateSd": {
        "id": "endpoint_image-gen.generateSd",
        "namespace": [
          "subpackage_image-gen"
        ],
        "description": "Generate images in response to the given request.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/generate/sd"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://image.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://image.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:ImageGenerationResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_image-gen:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/generate/sd",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "An octopus playing chess, masterpiece, photorealistic"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "images": [
                  {
                    "removed_for_safety": true,
                    "seed": 1,
                    "image_b64": "image_b64",
                    "safety_score": 1.1
                  }
                ],
                "prediction_time_ms": 1.1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/sd \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"An octopus playing chess, masterpiece, photorealistic\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_sd(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateSd({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/generate/sd",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "prompt": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/sd \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"prompt\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_sd(\n    prompt=\"An octopus playing chess, masterpiece, photorealistic\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateSd({\n    prompt: \"An octopus playing chess, masterpiece, photorealistic\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.imageGen.generateSd(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "{\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "prompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "negativePrompt2: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "negative_prompt_2"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "checkpoint: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "checkpoint"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnet: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "vae: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "vae"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "textualInversions: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "textual_inversions"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "loras: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "loras"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "PNDM": "OctoAI.Scheduler.Pndm",
                                  "LMS": "OctoAI.Scheduler.Lms",
                                  "KLMS": "OctoAI.Scheduler.Klms",
                                  "DDIM": "OctoAI.Scheduler.Ddim",
                                  "DDPM": "OctoAI.Scheduler.Ddpm",
                                  "HEUN": "OctoAI.Scheduler.Heun",
                                  "K_HEUN": "OctoAI.Scheduler.KHeun",
                                  "K_EULER": "OctoAI.Scheduler.KEuler",
                                  "K_EULER_ANCESTRAL": "OctoAI.Scheduler.KEulerAncestral",
                                  "DPM_SOLVER_MULTISTEP": "OctoAI.Scheduler.DpmSolverMultistep",
                                  "DPM_PLUS_PLUS_2M_KARRAS": "OctoAI.Scheduler.DpmPlusPlus2MKarras",
                                  "DPM_SINGLE": "OctoAI.Scheduler.DpmSingle",
                                  "DPM_2": "OctoAI.Scheduler.Dpm2",
                                  "DPM_2_ANCESTRAL": "OctoAI.Scheduler.Dpm2Ancestral",
                                  "DPM_PLUS_PLUS_SDE_KARRAS": "OctoAI.Scheduler.DpmPlusPlusSdeKarras",
                                  "UNI_PC": "OctoAI.Scheduler.UniPc",
                                  "LCM": "OctoAI.Scheduler.Lcm"
                                },
                                "templateString": "sampler: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "sampler"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "height: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "height"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "width: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "width"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "cfgScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "cfg_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "steps: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "steps"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "numImages: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "num_images"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "initImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "init_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "maskImage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "mask_image"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "strength: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "strength"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "base": "OctoAI.SdxlStyles.Base",
                                  "3d-model": "OctoAI.SdxlStyles.ThreeDModel",
                                  "analog-film": "OctoAI.SdxlStyles.AnalogFilm",
                                  "anime": "OctoAI.SdxlStyles.Anime",
                                  "cinematic": "OctoAI.SdxlStyles.Cinematic",
                                  "comic-book": "OctoAI.SdxlStyles.ComicBook",
                                  "Craft Clay": "OctoAI.SdxlStyles.CraftClay",
                                  "modeling-compound": "OctoAI.SdxlStyles.ModelingCompound",
                                  "digital-art": "OctoAI.SdxlStyles.DigitalArt",
                                  "enhance": "OctoAI.SdxlStyles.Enhance",
                                  "fantasy-art": "OctoAI.SdxlStyles.FantasyArt",
                                  "isometric": "OctoAI.SdxlStyles.Isometric",
                                  "line-art": "OctoAI.SdxlStyles.LineArt",
                                  "low-poly": "OctoAI.SdxlStyles.LowPoly",
                                  "neon-punk": "OctoAI.SdxlStyles.NeonPunk",
                                  "origami": "OctoAI.SdxlStyles.Origami",
                                  "photographic": "OctoAI.SdxlStyles.Photographic",
                                  "pixel-art": "OctoAI.SdxlStyles.PixelArt",
                                  "tile-texture": "OctoAI.SdxlStyles.TileTexture",
                                  "Advertising": "OctoAI.SdxlStyles.Advertising",
                                  "Food Photography": "OctoAI.SdxlStyles.FoodPhotography",
                                  "Real Estate": "OctoAI.SdxlStyles.RealEstate",
                                  "Abstract": "OctoAI.SdxlStyles.Abstract",
                                  "Cubist": "OctoAI.SdxlStyles.Cubist",
                                  "Graffiti": "OctoAI.SdxlStyles.Graffiti",
                                  "Hyperrealism": "OctoAI.SdxlStyles.Hyperrealism",
                                  "Impressionist": "OctoAI.SdxlStyles.Impressionist",
                                  "Pointillism": "OctoAI.SdxlStyles.Pointillism",
                                  "Pop Art": "OctoAI.SdxlStyles.PopArt",
                                  "Psychedelic": "OctoAI.SdxlStyles.Psychedelic",
                                  "Renaissance": "OctoAI.SdxlStyles.Renaissance",
                                  "Steampunk": "OctoAI.SdxlStyles.Steampunk",
                                  "Surrealist": "OctoAI.SdxlStyles.Surrealist",
                                  "Typography": "OctoAI.SdxlStyles.Typography",
                                  "Watercolor": "OctoAI.SdxlStyles.Watercolor",
                                  "Fighting Game": "OctoAI.SdxlStyles.FightingGame",
                                  "GTA": "OctoAI.SdxlStyles.Gta",
                                  "Super Mario": "OctoAI.SdxlStyles.SuperMario",
                                  "Minecraft": "OctoAI.SdxlStyles.Minecraft",
                                  "Pokémon": "OctoAI.SdxlStyles.Pokemon",
                                  "Retro Arcade": "OctoAI.SdxlStyles.RetroArcade",
                                  "Retro Game": "OctoAI.SdxlStyles.RetroGame",
                                  "RPG Fantasy Game": "OctoAI.SdxlStyles.RpgFantasyGame",
                                  "Strategy Game": "OctoAI.SdxlStyles.StrategyGame",
                                  "Street Fighter": "OctoAI.SdxlStyles.StreetFighter",
                                  "Legend of Zelda": "OctoAI.SdxlStyles.LegendOfZelda",
                                  "Architectural": "OctoAI.SdxlStyles.Architectural",
                                  "Disco": "OctoAI.SdxlStyles.Disco",
                                  "Dreamscape": "OctoAI.SdxlStyles.Dreamscape",
                                  "Dystopian": "OctoAI.SdxlStyles.Dystopian",
                                  "Fairy Tale": "OctoAI.SdxlStyles.FairyTale",
                                  "Gothic": "OctoAI.SdxlStyles.Gothic",
                                  "Grunge": "OctoAI.SdxlStyles.Grunge",
                                  "Horror": "OctoAI.SdxlStyles.Horror",
                                  "Minimalist": "OctoAI.SdxlStyles.Minimalist",
                                  "Monochrome": "OctoAI.SdxlStyles.Monochrome",
                                  "Nautical": "OctoAI.SdxlStyles.Nautical",
                                  "Space": "OctoAI.SdxlStyles.Space",
                                  "Stained Glass": "OctoAI.SdxlStyles.StainedGlass",
                                  "Techwear Fashion": "OctoAI.SdxlStyles.TechwearFashion",
                                  "Tribal": "OctoAI.SdxlStyles.Tribal",
                                  "Zentangle": "OctoAI.SdxlStyles.Zentangle",
                                  "Collage": "OctoAI.SdxlStyles.Collage",
                                  "Flat Papercut": "OctoAI.SdxlStyles.FlatPapercut",
                                  "Kirigami": "OctoAI.SdxlStyles.Kirigami",
                                  "Paper Mache": "OctoAI.SdxlStyles.PaperMache",
                                  "Paper Quilling": "OctoAI.SdxlStyles.PaperQuilling",
                                  "Papercut Collage": "OctoAI.SdxlStyles.PapercutCollage",
                                  "Papercut Shadow Box": "OctoAI.SdxlStyles.PapercutShadowBox",
                                  "Stacked Papercut": "OctoAI.SdxlStyles.StackedPapercut",
                                  "Thick Layered Papercut": "OctoAI.SdxlStyles.ThickLayeredPapercut",
                                  "Alien": "OctoAI.SdxlStyles.Alien",
                                  "Film Noir": "OctoAI.SdxlStyles.FilmNoir",
                                  "HDR": "OctoAI.SdxlStyles.Hdr",
                                  "Long Exposure": "OctoAI.SdxlStyles.LongExposure",
                                  "Neon Noir": "OctoAI.SdxlStyles.NeonNoir",
                                  "Silhouette": "OctoAI.SdxlStyles.Silhouette",
                                  "Tilt-Shift": "OctoAI.SdxlStyles.TiltShift"
                                },
                                "templateString": "stylePreset: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "style_preset"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "useRefiner: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "use_refiner"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "highNoiseFrac: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "high_noise_frac"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetConditioningScale: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_conditioning_scale"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetEarlyStop: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_early_stop"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "controlnetPreprocess: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "controlnet_preprocess"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "clipSkip: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "clip_skip"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "outpainting: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "outpainting"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "enableSafety: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "enable_safety"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "enum",
                                "imports": [],
                                "isOptional": true,
                                "values": {
                                  "jpeg": "OctoAI.ImageEncoding.Jpeg",
                                  "png": "OctoAI.ImageEncoding.Png"
                                },
                                "templateString": "imageEncoding: $FERN_INPUT",
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "image_encoding"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "transferImages: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "iterable",
                                  "imports": [],
                                  "isOptional": true,
                                  "containerTemplateString": "[\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                  "delimiter": ",\n\t\t\t\t\t",
                                  "innerTemplate": {
                                    "type": "generic",
                                    "imports": [],
                                    "templateString": "$FERN_INPUT",
                                    "isOptional": true,
                                    "templateInputs": [
                                      {
                                        "type": "payload",
                                        "location": "RELATIVE",
                                        "path": null
                                      }
                                    ]
                                  },
                                  "templateInput": {
                                    "location": "RELATIVE",
                                    "path": null
                                  }
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "transfer_images"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetDownload: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_download"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "forceAssetGpuCopy: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "force_asset_gpu_copy"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.image_gen.generate_sd(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "negative_prompt2=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "negative_prompt_2",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "checkpoint=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "checkpoint",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "vae=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "vae",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "textual_inversions={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "textual_inversions"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "loras={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "loras"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "sampler=$FERN_INPUT",
                    "values": {
                      "PNDM": "\"PNDM\"",
                      "LMS": "\"LMS\"",
                      "KLMS": "\"KLMS\"",
                      "DDIM": "\"DDIM\"",
                      "DDPM": "\"DDPM\"",
                      "HEUN": "\"HEUN\"",
                      "K_HEUN": "\"K_HEUN\"",
                      "K_EULER": "\"K_EULER\"",
                      "K_EULER_ANCESTRAL": "\"K_EULER_ANCESTRAL\"",
                      "DPM_SOLVER_MULTISTEP": "\"DPM_SOLVER_MULTISTEP\"",
                      "DPM_PLUS_PLUS_2M_KARRAS": "\"DPM_PLUS_PLUS_2M_KARRAS\"",
                      "DPM_SINGLE": "\"DPM_SINGLE\"",
                      "DPM_2": "\"DPM_2\"",
                      "DPM_2_ANCESTRAL": "\"DPM_2_ANCESTRAL\"",
                      "DPM_PLUS_PLUS_SDE_KARRAS": "\"DPM_PLUS_PLUS_SDE_KARRAS\"",
                      "UNI_PC": "\"UNI_PC\"",
                      "LCM": "\"LCM\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "sampler"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "height=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "height",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "width=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "width",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "cfg_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "cfg_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "steps=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "steps",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "num_images=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "num_images",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "init_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "init_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "mask_image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "mask_image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "strength=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "strength",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "style_preset=$FERN_INPUT",
                    "values": {
                      "base": "\"base\"",
                      "3d-model": "\"3d-model\"",
                      "analog-film": "\"analog-film\"",
                      "anime": "\"anime\"",
                      "cinematic": "\"cinematic\"",
                      "comic-book": "\"comic-book\"",
                      "Craft Clay": "\"Craft Clay\"",
                      "modeling-compound": "\"modeling-compound\"",
                      "digital-art": "\"digital-art\"",
                      "enhance": "\"enhance\"",
                      "fantasy-art": "\"fantasy-art\"",
                      "isometric": "\"isometric\"",
                      "line-art": "\"line-art\"",
                      "low-poly": "\"low-poly\"",
                      "neon-punk": "\"neon-punk\"",
                      "origami": "\"origami\"",
                      "photographic": "\"photographic\"",
                      "pixel-art": "\"pixel-art\"",
                      "tile-texture": "\"tile-texture\"",
                      "Advertising": "\"Advertising\"",
                      "Food Photography": "\"Food Photography\"",
                      "Real Estate": "\"Real Estate\"",
                      "Abstract": "\"Abstract\"",
                      "Cubist": "\"Cubist\"",
                      "Graffiti": "\"Graffiti\"",
                      "Hyperrealism": "\"Hyperrealism\"",
                      "Impressionist": "\"Impressionist\"",
                      "Pointillism": "\"Pointillism\"",
                      "Pop Art": "\"Pop Art\"",
                      "Psychedelic": "\"Psychedelic\"",
                      "Renaissance": "\"Renaissance\"",
                      "Steampunk": "\"Steampunk\"",
                      "Surrealist": "\"Surrealist\"",
                      "Typography": "\"Typography\"",
                      "Watercolor": "\"Watercolor\"",
                      "Fighting Game": "\"Fighting Game\"",
                      "GTA": "\"GTA\"",
                      "Super Mario": "\"Super Mario\"",
                      "Minecraft": "\"Minecraft\"",
                      "Pokémon": "\"Pokémon\"",
                      "Retro Arcade": "\"Retro Arcade\"",
                      "Retro Game": "\"Retro Game\"",
                      "RPG Fantasy Game": "\"RPG Fantasy Game\"",
                      "Strategy Game": "\"Strategy Game\"",
                      "Street Fighter": "\"Street Fighter\"",
                      "Legend of Zelda": "\"Legend of Zelda\"",
                      "Architectural": "\"Architectural\"",
                      "Disco": "\"Disco\"",
                      "Dreamscape": "\"Dreamscape\"",
                      "Dystopian": "\"Dystopian\"",
                      "Fairy Tale": "\"Fairy Tale\"",
                      "Gothic": "\"Gothic\"",
                      "Grunge": "\"Grunge\"",
                      "Horror": "\"Horror\"",
                      "Minimalist": "\"Minimalist\"",
                      "Monochrome": "\"Monochrome\"",
                      "Nautical": "\"Nautical\"",
                      "Space": "\"Space\"",
                      "Stained Glass": "\"Stained Glass\"",
                      "Techwear Fashion": "\"Techwear Fashion\"",
                      "Tribal": "\"Tribal\"",
                      "Zentangle": "\"Zentangle\"",
                      "Collage": "\"Collage\"",
                      "Flat Papercut": "\"Flat Papercut\"",
                      "Kirigami": "\"Kirigami\"",
                      "Paper Mache": "\"Paper Mache\"",
                      "Paper Quilling": "\"Paper Quilling\"",
                      "Papercut Collage": "\"Papercut Collage\"",
                      "Papercut Shadow Box": "\"Papercut Shadow Box\"",
                      "Stacked Papercut": "\"Stacked Papercut\"",
                      "Thick Layered Papercut": "\"Thick Layered Papercut\"",
                      "Alien": "\"Alien\"",
                      "Film Noir": "\"Film Noir\"",
                      "HDR": "\"HDR\"",
                      "Long Exposure": "\"Long Exposure\"",
                      "Neon Noir": "\"Neon Noir\"",
                      "Silhouette": "\"Silhouette\"",
                      "Tilt-Shift": "\"Tilt-Shift\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "style_preset"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "use_refiner=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "use_refiner",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "high_noise_frac=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "high_noise_frac",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_conditioning_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_conditioning_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_early_stop=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_early_stop",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "controlnet_preprocess=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "controlnet_preprocess",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "clip_skip=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "clip_skip",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "outpainting=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "outpainting",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "enable_safety=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "enable_safety",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "image_encoding=$FERN_INPUT",
                    "values": {
                      "jpeg": "\"jpeg\"",
                      "png": "\"png\""
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "image_encoding"
                    },
                    "type": "enum"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "transfer_images={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "containerTemplateString": "[\n\t\t\t$FERN_INPUT\n\t\t]",
                      "delimiter": ",\n\t\t\t",
                      "innerTemplate": {
                        "imports": [],
                        "isOptional": true,
                        "templateString": "$FERN_INPUT",
                        "templateInputs": [
                          {
                            "location": "RELATIVE",
                            "path": null,
                            "type": "payload"
                          }
                        ],
                        "type": "generic"
                      },
                      "templateInput": {
                        "location": "RELATIVE",
                        "path": null
                      },
                      "type": "iterable"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "transfer_images"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_download=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_download",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_gpu_copy=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_gpu_copy",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_image-gen.generateSvd": {
        "id": "endpoint_image-gen.generateSvd",
        "namespace": [
          "subpackage_image-gen"
        ],
        "description": "Generate videos in response to the given request.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/generate/svd"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://image.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://image.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "image",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Starting point image encoded in base64 string."
              },
              {
                "key": "height",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "width",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "cfg_scale",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "maximum": 10,
                          "default": 3
                        }
                      }
                    }
                  }
                },
                "description": "Floating-point number represeting how closely to adhere to 'image'. Must be a positive number no greater than 10.0."
              },
              {
                "key": "steps",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "maximum": 50,
                          "default": 25
                        }
                      }
                    }
                  }
                },
                "description": "Integer repreenting how many steps of diffusion to run. Must be greater than 0 and less than or equal to 50."
              },
              {
                "key": "motion_scale",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": 0,
                          "maximum": 5,
                          "default": 0.5
                        }
                      }
                    }
                  }
                },
                "description": "A floating point number between 0.0 and 5.0 indicating how much motion should be in the generated video/animation."
              },
              {
                "key": "noise_aug_strength",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": 0,
                          "maximum": 1,
                          "default": 0.02
                        }
                      }
                    }
                  }
                },
                "description": "A floating point number between 0.0 and 1.0 indicatiing how much noise to add to the initial image. Higher values encourage creativity."
              },
              {
                "key": "num_videos",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "maximum": 16,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Integer representing how many output videos/animations to generate with a single 'image' and configuration."
              },
              {
                "key": "fps",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 25,
                          "default": 7
                        }
                      }
                    }
                  }
                },
                "description": "Integer representing how fast the generated frames should play back."
              },
              {
                "key": "seed",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_image-gen:VideoGenerationRequestSeed"
                      }
                    }
                  }
                },
                "description": "Integer number or list of integers representing the seeds of random generators.Fixing random seed is useful when attempting to generate a specific video/animation (or set of videos/animations). Must be greater than 0 and less than 2^32."
              },
              {
                "key": "enable_safety",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Boolean defining whether to use safety checker system on generated outputs or not."
              },
              {
                "key": "force_asset_download",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "[Internal] Boolean defining if assets must be re-downloaded into the cache even if present."
              },
              {
                "key": "force_asset_gpu_copy",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "[Internal] Boolean defining if assets must to be copied into the GPU even if present."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_image-gen:VideoGenerationResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_image-gen:HTTPValidationError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/generate/svd",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "image": "image"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "videos": [
                  {
                    "removed_for_safety": true,
                    "seed": 1,
                    "video": "video",
                    "safety_score": 1.1
                  }
                ],
                "prediction_time_ms": 1.1
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/svd \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"image\": \"image\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_svd(\n    image=\"image\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateSvd({\n    image: \"image\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/generate/svd",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "image": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://image.octoai.run/generate/svd \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"image\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.image_gen.generate_svd(\n    image=\"image\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.imageGen.generateSvd({\n    image: \"image\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.imageGen.generateSvd(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "image: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "image"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "height: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "height"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "width: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "width"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "cfgScale: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "cfg_scale"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "steps: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "steps"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "motionScale: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "motion_scale"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "noiseAugStrength: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "noise_aug_strength"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "numVideos: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "num_videos"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "fps: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "fps"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "enableSafety: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "enable_safety"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "forceAssetDownload: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "force_asset_download"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "forceAssetGpuCopy: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "force_asset_gpu_copy"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.image_gen.generate_svd(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "image=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "image",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "height=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "height",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "width=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "width",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "cfg_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "cfg_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "steps=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "steps",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "motion_scale=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "motion_scale",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "noise_aug_strength=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "noise_aug_strength",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "num_videos=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "num_videos",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "fps=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "fps",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "enable_safety=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "enable_safety",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_download=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_download",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "force_asset_gpu_copy=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "force_asset_gpu_copy",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_text-gen.createChatCompletion_stream": {
        "id": "endpoint_text-gen.createChatCompletion_stream",
        "namespace": [
          "subpackage_text-gen"
        ],
        "description": "Create a Chat Completion.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/chat/completions"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://text.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://text.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "frequency_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": -2,
                          "maximum": 2,
                          "default": 0
                        }
                      }
                    }
                  }
                },
                "description": "Penalizes new tokens based on their frequency in the generated text so far."
              },
              {
                "key": "ignore_eos",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "logit_bias",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "optional",
                            "shape": {
                              "type": "alias",
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "double"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "loglikelihood",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "logprobs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "max_tokens",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "default": 512
                        }
                      }
                    }
                  }
                },
                "description": "Maximum number of tokens to generate per output sequence."
              },
              {
                "key": "messages",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:ChatMessage"
                      }
                    }
                  }
                },
                "description": "A list of messages comprising the conversation so far."
              },
              {
                "key": "model",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The identifier of the model to use.Can be a shared tenancy or custom model identifier."
              },
              {
                "key": "n",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "default": 1
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "octoai",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:ChatCompletionRequestExt"
                      }
                    }
                  }
                }
              },
              {
                "key": "presence_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": -2,
                          "maximum": 2,
                          "default": 0
                        }
                      }
                    }
                  }
                },
                "description": "Penalizes new tokens based on whether they appear in the generated text so far"
              },
              {
                "key": "repetition_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the likelihood of the model generating repeated texts"
              },
              {
                "key": "response_format",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:ChatCompletionResponseFormat"
                      }
                    }
                  }
                }
              },
              {
                "key": "stop",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:Stop"
                      }
                    }
                  }
                }
              },
              {
                "key": "stream",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "literal",
                    "value": {
                      "type": "booleanLiteral",
                      "value": true
                    }
                  }
                },
                "description": "If set, tokens will be streamed incrementally to users."
              },
              {
                "key": "stream_options",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:StreamOptions"
                      }
                    }
                  }
                }
              },
              {
                "key": "temperature",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": 0,
                          "maximum": 2,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the randomness of the sampling."
              },
              {
                "key": "top_logprobs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "default": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "top_p",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "maximum": 1,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the cumulative probability of the top tokens to consider."
              },
              {
                "key": "user",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "stream",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:ChatCompletionChunk"
              }
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:HTTPValidationError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:ErrorResponse"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "message": "An example error",
                    "type": "internal_error",
                    "object": "error"
                  }
                }
              }
            ]
          }
        ],
        "examples": [
          {
            "path": "/v1/chat/completions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "messages": [
                  {
                    "role": "string"
                  }
                ],
                "model": "string",
                "stream": true
              }
            },
            "responseBody": {
              "type": "stream",
              "value": [
                {
                  "choices": [
                    {
                      "delta": {
                        "content": "string",
                        "role": "string"
                      },
                      "finish_reason": "stop",
                      "index": 0,
                      "logprobs": {
                        "content": [
                          {
                            "bytes": [
                              {}
                            ],
                            "logprob": 1,
                            "token": "string",
                            "top_logprobs": [
                              {
                                "bytes": [
                                  {}
                                ],
                                "logprob": 1,
                                "token": "string"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "created": 0,
                  "id": "string",
                  "model": "string",
                  "object": {},
                  "usage": {
                    "completion_tokens": 0,
                    "prompt_tokens": 0,
                    "total_tokens": 0
                  }
                },
                {
                  "choices": [
                    {
                      "delta": {
                        "content": "string",
                        "role": "string"
                      },
                      "finish_reason": "stop",
                      "index": 0,
                      "logprobs": {
                        "content": [
                          {
                            "bytes": [
                              {}
                            ],
                            "logprob": 1,
                            "token": "string",
                            "top_logprobs": [
                              {
                                "bytes": [
                                  {}
                                ],
                                "logprob": 1,
                                "token": "string"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "created": 0,
                  "id": "string",
                  "model": "string",
                  "object": {},
                  "usage": {
                    "completion_tokens": 0,
                    "prompt_tokens": 0,
                    "total_tokens": 0
                  }
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/chat/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"messages\": [\n    {\n      \"role\": \"string\"\n    }\n  ],\n  \"model\": \"string\",\n  \"stream\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\nfrom octoai.text_gen import (\n    ChatCompletionRequestExt,\n    ChatCompletionRequestExtVllm,\n    ChatCompletionResponseFormat,\n    ChatFnCall,\n    ChatMessage,\n    Function,\n)\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_chat_completion_stream(\n    frequency_penalty=1.1,\n    function_call=\"string\",\n    functions=[\n        Function(\n            description=\"string\",\n            name=\"string\",\n            parameters={\"key\": \"value\"},\n        )\n    ],\n    ignore_eos=True,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    max_tokens=1,\n    messages=[\n        ChatMessage(\n            content=\"string\",\n            function_call=ChatFnCall(\n                arguments=\"string\",\n                name=\"string\",\n            ),\n            role=\"string\",\n        )\n    ],\n    model=\"string\",\n    n=1,\n    octoai=ChatCompletionRequestExt(\n        vllm=ChatCompletionRequestExtVllm(),\n    ),\n    presence_penalty=1.1,\n    repetition_penalty=1.1,\n    response_format=ChatCompletionResponseFormat(\n        schema={\"string\": {\"key\": \"value\"}},\n        type=\"string\",\n    ),\n    stop=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createChatCompletion({\n    messages: [{\n            role: \"role\"\n        }],\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/chat/completions",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "messages": [
                  {
                    "role": "string"
                  }
                ],
                "model": "string",
                "stream": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/chat/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"messages\": [\n    {\n      \"role\": \"string\"\n    }\n  ],\n  \"model\": \"string\",\n  \"stream\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\nfrom octoai.text_gen import (\n    ChatCompletionRequestExt,\n    ChatCompletionRequestExtVllm,\n    ChatCompletionResponseFormat,\n    ChatFnCall,\n    ChatMessage,\n    Function,\n)\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_chat_completion_stream(\n    frequency_penalty=1.1,\n    function_call=\"string\",\n    functions=[\n        Function(\n            description=\"string\",\n            name=\"string\",\n            parameters={\"key\": \"value\"},\n        )\n    ],\n    ignore_eos=True,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    max_tokens=1,\n    messages=[\n        ChatMessage(\n            content=\"string\",\n            function_call=ChatFnCall(\n                arguments=\"string\",\n                name=\"string\",\n            ),\n            role=\"string\",\n        )\n    ],\n    model=\"string\",\n    n=1,\n    octoai=ChatCompletionRequestExt(\n        vllm=ChatCompletionRequestExtVllm(),\n    ),\n    presence_penalty=1.1,\n    repetition_penalty=1.1,\n    response_format=ChatCompletionResponseFormat(\n        schema={\"string\": {\"key\": \"value\"}},\n        type=\"string\",\n    ),\n    stop=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createChatCompletion({\n    messages: [{\n            role: \"role\"\n        }],\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/chat/completions",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "messages": [
                  {
                    "role": "string"
                  }
                ],
                "model": "string",
                "stream": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": "string",
                "message": "string",
                "object": "string",
                "param": "string",
                "type": "string",
                "validation_errors": {
                  "string": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/chat/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"messages\": [\n    {\n      \"role\": \"string\"\n    }\n  ],\n  \"model\": \"string\",\n  \"stream\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\nfrom octoai.text_gen import (\n    ChatCompletionRequestExt,\n    ChatCompletionRequestExtVllm,\n    ChatCompletionResponseFormat,\n    ChatFnCall,\n    ChatMessage,\n    Function,\n)\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_chat_completion_stream(\n    frequency_penalty=1.1,\n    function_call=\"string\",\n    functions=[\n        Function(\n            description=\"string\",\n            name=\"string\",\n            parameters={\"key\": \"value\"},\n        )\n    ],\n    ignore_eos=True,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    max_tokens=1,\n    messages=[\n        ChatMessage(\n            content=\"string\",\n            function_call=ChatFnCall(\n                arguments=\"string\",\n                name=\"string\",\n            ),\n            role=\"string\",\n        )\n    ],\n    model=\"string\",\n    n=1,\n    octoai=ChatCompletionRequestExt(\n        vllm=ChatCompletionRequestExtVllm(),\n    ),\n    presence_penalty=1.1,\n    repetition_penalty=1.1,\n    response_format=ChatCompletionResponseFormat(\n        schema={\"string\": {\"key\": \"value\"}},\n        type=\"string\",\n    ),\n    stop=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createChatCompletion({\n    messages: [{\n            role: \"role\"\n        }],\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.textGen.createChatCompletionStream(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "frequencyPenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "frequency_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "ignoreEos: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "ignore_eos"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "dict",
                          "imports": [],
                          "isOptional": true,
                          "containerTemplateString": "logitBias: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "delimiter": ",\n\t\t\t",
                          "keyValueSeparator": ": ",
                          "keyTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "RELATIVE",
                                "path": null
                              }
                            ]
                          },
                          "valueTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "RELATIVE",
                                "path": null
                              }
                            ]
                          },
                          "templateInput": {
                            "location": "BODY",
                            "path": "logit_bias"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "loglikelihood: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "loglikelihood"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "logprobs: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "logprobs"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "maxTokens: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "max_tokens"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "iterable",
                          "imports": [],
                          "isOptional": true,
                          "containerTemplateString": "messages: [\n\t\t\t$FERN_INPUT\n\t\t]",
                          "delimiter": ",\n\t\t\t",
                          "innerTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "content: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": "content"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "role: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": "role"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "templateInput": {
                            "location": "BODY",
                            "path": "messages"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "model: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "model"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "n: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "n"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "octoai: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "vllm: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "isOptional": true,
                                "inputDelimiter": ",\n\t\t\t\t",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "bestOf: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.best_of"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "ignoreEos: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.ignore_eos"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "skipSpecialTokens: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.skip_special_tokens"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "iterable",
                                      "imports": [],
                                      "isOptional": true,
                                      "containerTemplateString": "stopTokenIds: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                      "delimiter": ",\n\t\t\t\t\t",
                                      "innerTemplate": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "templateInput": {
                                        "location": "BODY",
                                        "path": "octoai.vllm.stop_token_ids"
                                      }
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "topK: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.top_k"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "useBeamSearch: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.use_beam_search"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "presencePenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "presence_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "repetitionPenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "repetition_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "responseFormat: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "schema: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "response_format.schema"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "type: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "response_format.type"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "streamOptions: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "includeUsage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "stream_options.include_usage"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "temperature: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "temperature"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "topLogprobs: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "top_logprobs"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "topP: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "top_p"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "user: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "user"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.text_gen.create_chat_completion_stream(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "frequency_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "frequency_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "functions=[\n\t\t$FERN_INPUT\n\t]",
                    "delimiter": ",\n\t\t",
                    "innerTemplate": {
                      "imports": [
                        "from octoai.text_gen import Function"
                      ],
                      "isOptional": true,
                      "templateString": "Function(\n\t\t\t$FERN_INPUT\n\t\t)",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "description=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "description",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "name=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "name",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "parameters=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "parameters",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t\t",
                      "type": "generic"
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "functions"
                    },
                    "type": "iterable"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "ignore_eos=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "ignore_eos",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "logit_bias={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "logit_bias"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "max_tokens=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "max_tokens",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "messages=[\n\t\t$FERN_INPUT\n\t]",
                    "delimiter": ",\n\t\t",
                    "innerTemplate": {
                      "imports": [
                        "from octoai.text_gen import ChatMessage"
                      ],
                      "isOptional": true,
                      "templateString": "ChatMessage(\n\t\t\t$FERN_INPUT\n\t\t)",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "content=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "content",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [
                              "from octoai.text_gen import ChatFnCall"
                            ],
                            "isOptional": true,
                            "templateString": "function_call=ChatFnCall(\n\t\t\t\t$FERN_INPUT\n\t\t\t)",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "arguments=$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": "function_call.arguments",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "name=$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": "function_call.name",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "role=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "role",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t\t",
                      "type": "generic"
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "messages"
                    },
                    "type": "iterable"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "model=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "model",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "n=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "n",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [
                      "from octoai.text_gen import ChatCompletionRequestExt"
                    ],
                    "isOptional": true,
                    "templateString": "octoai=ChatCompletionRequestExt(\n\t\t$FERN_INPUT\n\t)",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "imports": [
                            "from octoai.text_gen import ChatCompletionRequestExtVllm"
                          ],
                          "isOptional": true,
                          "templateString": "vllm=ChatCompletionRequestExtVllm(\n\t\t\t$FERN_INPUT\n\t\t)",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "best_of=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "ignore_eos=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of.vllm.ignore_eos",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "skip_special_tokens=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of.vllm.ignore_eos.vllm.skip_special_tokens",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "stop_token_ids=[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                "delimiter": ",\n\t\t\t\t",
                                "innerTemplate": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "octoai.vllm.best_of.vllm.ignore_eos.vllm.skip_special_tokens.vllm.stop_token_ids"
                                },
                                "type": "iterable"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "top_k=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of.vllm.ignore_eos.vllm.skip_special_tokens.vllm.stop_token_ids.vllm.top_k",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "use_beam_search=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of.vllm.ignore_eos.vllm.skip_special_tokens.vllm.stop_token_ids.vllm.top_k.vllm.use_beam_search",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            }
                          ],
                          "inputDelimiter": ",\n\t\t\t",
                          "type": "generic"
                        }
                      }
                    ],
                    "inputDelimiter": ",\n\t\t",
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "presence_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "presence_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "repetition_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "repetition_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [
                      "from octoai.text_gen import ChatCompletionResponseFormat"
                    ],
                    "isOptional": true,
                    "templateString": "response_format=ChatCompletionResponseFormat(\n\t\t$FERN_INPUT\n\t)",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "imports": [],
                          "isOptional": true,
                          "containerTemplateString": "schema={\n\t\t\t$FERN_INPUT\n\t\t}",
                          "delimiter": ",\n\t\t\t",
                          "keyTemplate": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          },
                          "valueTemplate": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          },
                          "keyValueSeparator": ": ",
                          "templateInput": {
                            "location": "BODY",
                            "path": "response_format.schema"
                          },
                          "type": "dict"
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "imports": [],
                          "isOptional": true,
                          "templateString": "type=$FERN_INPUT",
                          "templateInputs": [
                            {
                              "location": "BODY",
                              "path": "response_format.type",
                              "type": "payload"
                            }
                          ],
                          "type": "generic"
                        }
                      }
                    ],
                    "inputDelimiter": ",\n\t\t",
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "temperature=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "temperature",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "top_p=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "top_p",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "user=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "user",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_text-gen.createChatCompletion": {
        "id": "endpoint_text-gen.createChatCompletion",
        "namespace": [
          "subpackage_text-gen"
        ],
        "description": "Create a Chat Completion.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/chat/completions"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://text.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://text.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "frequency_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": -2,
                          "maximum": 2,
                          "default": 0
                        }
                      }
                    }
                  }
                },
                "description": "Penalizes new tokens based on their frequency in the generated text so far."
              },
              {
                "key": "ignore_eos",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "logit_bias",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "optional",
                            "shape": {
                              "type": "alias",
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "double"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "loglikelihood",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "logprobs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "max_tokens",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "default": 512
                        }
                      }
                    }
                  }
                },
                "description": "Maximum number of tokens to generate per output sequence."
              },
              {
                "key": "messages",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:ChatMessage"
                      }
                    }
                  }
                },
                "description": "A list of messages comprising the conversation so far."
              },
              {
                "key": "model",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The identifier of the model to use.Can be a shared tenancy or custom model identifier."
              },
              {
                "key": "n",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "default": 1
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "octoai",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:ChatCompletionRequestExt"
                      }
                    }
                  }
                }
              },
              {
                "key": "presence_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": -2,
                          "maximum": 2,
                          "default": 0
                        }
                      }
                    }
                  }
                },
                "description": "Penalizes new tokens based on whether they appear in the generated text so far"
              },
              {
                "key": "repetition_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the likelihood of the model generating repeated texts"
              },
              {
                "key": "response_format",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:ChatCompletionResponseFormat"
                      }
                    }
                  }
                }
              },
              {
                "key": "stop",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:Stop"
                      }
                    }
                  }
                }
              },
              {
                "key": "stream",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "literal",
                    "value": {
                      "type": "booleanLiteral",
                      "value": false
                    }
                  }
                },
                "description": "If set, tokens will be streamed incrementally to users."
              },
              {
                "key": "stream_options",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:StreamOptions"
                      }
                    }
                  }
                }
              },
              {
                "key": "temperature",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": 0,
                          "maximum": 2,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the randomness of the sampling."
              },
              {
                "key": "top_logprobs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "default": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "top_p",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "maximum": 1,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the cumulative probability of the top tokens to consider."
              },
              {
                "key": "user",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_text-gen:ChatCompletionResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:HTTPValidationError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:ErrorResponse"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "message": "An example error",
                    "type": "internal_error",
                    "object": "error"
                  }
                }
              }
            ]
          }
        ],
        "examples": [
          {
            "path": "/v1/chat/completions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "messages": [
                  {
                    "role": "role"
                  }
                ],
                "model": "model",
                "stream": false
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "choices": [
                  {
                    "index": 1,
                    "message": {
                      "role": "role"
                    },
                    "finish_reason": "stop"
                  }
                ],
                "created": 1,
                "id": "id",
                "model": "model",
                "usage": {
                  "completion_tokens": 1,
                  "prompt_tokens": 1,
                  "total_tokens": 1
                },
                "object": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/chat/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"messages\": [\n    {\n      \"role\": \"role\"\n    }\n  ],\n  \"model\": \"model\",\n  \"stream\": false\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\nfrom octoai.text_gen import (\n    ChatCompletionRequestExt,\n    ChatCompletionRequestExtVllm,\n    ChatCompletionResponseFormat,\n    ChatFnCall,\n    ChatMessage,\n    Function,\n)\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_chat_completion_stream(\n    frequency_penalty=1.1,\n    function_call=\"string\",\n    functions=[\n        Function(\n            description=\"string\",\n            name=\"string\",\n            parameters={\"key\": \"value\"},\n        )\n    ],\n    ignore_eos=True,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    max_tokens=1,\n    messages=[\n        ChatMessage(\n            content=\"string\",\n            function_call=ChatFnCall(\n                arguments=\"string\",\n                name=\"string\",\n            ),\n            role=\"string\",\n        )\n    ],\n    model=\"string\",\n    n=1,\n    octoai=ChatCompletionRequestExt(\n        vllm=ChatCompletionRequestExtVllm(),\n    ),\n    presence_penalty=1.1,\n    repetition_penalty=1.1,\n    response_format=ChatCompletionResponseFormat(\n        schema={\"string\": {\"key\": \"value\"}},\n        type=\"string\",\n    ),\n    stop=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createChatCompletion({\n    messages: [{\n            role: \"role\"\n        }],\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/chat/completions",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "messages": [
                  {
                    "role": "string"
                  }
                ],
                "model": "string",
                "stream": false
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/chat/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"messages\": [\n    {\n      \"role\": \"string\"\n    }\n  ],\n  \"model\": \"string\",\n  \"stream\": false\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\nfrom octoai.text_gen import (\n    ChatCompletionRequestExt,\n    ChatCompletionRequestExtVllm,\n    ChatCompletionResponseFormat,\n    ChatFnCall,\n    ChatMessage,\n    Function,\n)\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_chat_completion_stream(\n    frequency_penalty=1.1,\n    function_call=\"string\",\n    functions=[\n        Function(\n            description=\"string\",\n            name=\"string\",\n            parameters={\"key\": \"value\"},\n        )\n    ],\n    ignore_eos=True,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    max_tokens=1,\n    messages=[\n        ChatMessage(\n            content=\"string\",\n            function_call=ChatFnCall(\n                arguments=\"string\",\n                name=\"string\",\n            ),\n            role=\"string\",\n        )\n    ],\n    model=\"string\",\n    n=1,\n    octoai=ChatCompletionRequestExt(\n        vllm=ChatCompletionRequestExtVllm(),\n    ),\n    presence_penalty=1.1,\n    repetition_penalty=1.1,\n    response_format=ChatCompletionResponseFormat(\n        schema={\"string\": {\"key\": \"value\"}},\n        type=\"string\",\n    ),\n    stop=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createChatCompletion({\n    messages: [{\n            role: \"role\"\n        }],\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/chat/completions",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "messages": [
                  {
                    "role": "string"
                  }
                ],
                "model": "string",
                "stream": false
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "object": "string",
                "code": "string",
                "message": "string",
                "param": "string",
                "type": "string",
                "validation_errors": {
                  "string": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/chat/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"messages\": [\n    {\n      \"role\": \"string\"\n    }\n  ],\n  \"model\": \"string\",\n  \"stream\": false\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\nfrom octoai.text_gen import (\n    ChatCompletionRequestExt,\n    ChatCompletionRequestExtVllm,\n    ChatCompletionResponseFormat,\n    ChatFnCall,\n    ChatMessage,\n    Function,\n)\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_chat_completion_stream(\n    frequency_penalty=1.1,\n    function_call=\"string\",\n    functions=[\n        Function(\n            description=\"string\",\n            name=\"string\",\n            parameters={\"key\": \"value\"},\n        )\n    ],\n    ignore_eos=True,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    max_tokens=1,\n    messages=[\n        ChatMessage(\n            content=\"string\",\n            function_call=ChatFnCall(\n                arguments=\"string\",\n                name=\"string\",\n            ),\n            role=\"string\",\n        )\n    ],\n    model=\"string\",\n    n=1,\n    octoai=ChatCompletionRequestExt(\n        vllm=ChatCompletionRequestExtVllm(),\n    ),\n    presence_penalty=1.1,\n    repetition_penalty=1.1,\n    response_format=ChatCompletionResponseFormat(\n        schema={\"string\": {\"key\": \"value\"}},\n        type=\"string\",\n    ),\n    stop=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createChatCompletion({\n    messages: [{\n            role: \"role\"\n        }],\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.textGen.createChatCompletionStream(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "frequencyPenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "frequency_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "ignoreEos: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "ignore_eos"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "dict",
                          "imports": [],
                          "isOptional": true,
                          "containerTemplateString": "logitBias: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "delimiter": ",\n\t\t\t",
                          "keyValueSeparator": ": ",
                          "keyTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "RELATIVE",
                                "path": null
                              }
                            ]
                          },
                          "valueTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "RELATIVE",
                                "path": null
                              }
                            ]
                          },
                          "templateInput": {
                            "location": "BODY",
                            "path": "logit_bias"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "loglikelihood: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "loglikelihood"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "logprobs: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "logprobs"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "maxTokens: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "max_tokens"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "iterable",
                          "imports": [],
                          "isOptional": true,
                          "containerTemplateString": "messages: [\n\t\t\t$FERN_INPUT\n\t\t]",
                          "delimiter": ",\n\t\t\t",
                          "innerTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "{\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                            "isOptional": true,
                            "inputDelimiter": ",\n\t\t\t\t",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "content: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": "content"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "role: $FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": "role"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "templateInput": {
                            "location": "BODY",
                            "path": "messages"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "model: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "model"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "n: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "n"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "octoai: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "vllm: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "isOptional": true,
                                "inputDelimiter": ",\n\t\t\t\t",
                                "templateInputs": [
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "bestOf: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.best_of"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "ignoreEos: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.ignore_eos"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "skipSpecialTokens: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.skip_special_tokens"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "iterable",
                                      "imports": [],
                                      "isOptional": true,
                                      "containerTemplateString": "stopTokenIds: [\n\t\t\t\t\t$FERN_INPUT\n\t\t\t\t]",
                                      "delimiter": ",\n\t\t\t\t\t",
                                      "innerTemplate": {
                                        "type": "generic",
                                        "imports": [],
                                        "templateString": "$FERN_INPUT",
                                        "isOptional": true,
                                        "templateInputs": [
                                          {
                                            "type": "payload",
                                            "location": "RELATIVE",
                                            "path": null
                                          }
                                        ]
                                      },
                                      "templateInput": {
                                        "location": "BODY",
                                        "path": "octoai.vllm.stop_token_ids"
                                      }
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "topK: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.top_k"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "template",
                                    "value": {
                                      "type": "generic",
                                      "imports": [],
                                      "templateString": "useBeamSearch: $FERN_INPUT",
                                      "isOptional": true,
                                      "templateInputs": [
                                        {
                                          "type": "payload",
                                          "location": "BODY",
                                          "path": "octoai.vllm.use_beam_search"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "presencePenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "presence_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "repetitionPenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "repetition_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "responseFormat: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "dict",
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "schema: {\n\t\t\t\t$FERN_INPUT\n\t\t\t}",
                                "delimiter": ",\n\t\t\t\t",
                                "keyValueSeparator": ": ",
                                "keyTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "valueTemplate": {
                                  "type": "generic",
                                  "imports": [],
                                  "templateString": "$FERN_INPUT",
                                  "isOptional": true,
                                  "templateInputs": [
                                    {
                                      "type": "payload",
                                      "location": "RELATIVE",
                                      "path": null
                                    }
                                  ]
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "response_format.schema"
                                }
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "type: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "response_format.type"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "streamOptions: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "includeUsage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "stream_options.include_usage"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "temperature: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "temperature"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "topLogprobs: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "top_logprobs"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "topP: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "top_p"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "user: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "user"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.text_gen.create_chat_completion_stream(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "frequency_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "frequency_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "functions=[\n\t\t$FERN_INPUT\n\t]",
                    "delimiter": ",\n\t\t",
                    "innerTemplate": {
                      "imports": [
                        "from octoai.text_gen import Function"
                      ],
                      "isOptional": true,
                      "templateString": "Function(\n\t\t\t$FERN_INPUT\n\t\t)",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "description=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "description",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "name=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "name",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "parameters=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "parameters",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t\t",
                      "type": "generic"
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "functions"
                    },
                    "type": "iterable"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "ignore_eos=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "ignore_eos",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "logit_bias={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "logit_bias"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "max_tokens=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "max_tokens",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "messages=[\n\t\t$FERN_INPUT\n\t]",
                    "delimiter": ",\n\t\t",
                    "innerTemplate": {
                      "imports": [
                        "from octoai.text_gen import ChatMessage"
                      ],
                      "isOptional": true,
                      "templateString": "ChatMessage(\n\t\t\t$FERN_INPUT\n\t\t)",
                      "templateInputs": [
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "content=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "content",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [
                              "from octoai.text_gen import ChatFnCall"
                            ],
                            "isOptional": true,
                            "templateString": "function_call=ChatFnCall(\n\t\t\t\t$FERN_INPUT\n\t\t\t)",
                            "templateInputs": [
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "arguments=$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": "function_call.arguments",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              },
                              {
                                "type": "template",
                                "value": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "name=$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": "function_call.name",
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                }
                              }
                            ],
                            "inputDelimiter": ",\n\t\t\t\t",
                            "type": "generic"
                          }
                        },
                        {
                          "type": "template",
                          "value": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "role=$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": "role",
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          }
                        }
                      ],
                      "inputDelimiter": ",\n\t\t\t",
                      "type": "generic"
                    },
                    "templateInput": {
                      "location": "BODY",
                      "path": "messages"
                    },
                    "type": "iterable"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "model=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "model",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "n=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "n",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [
                      "from octoai.text_gen import ChatCompletionRequestExt"
                    ],
                    "isOptional": true,
                    "templateString": "octoai=ChatCompletionRequestExt(\n\t\t$FERN_INPUT\n\t)",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "imports": [
                            "from octoai.text_gen import ChatCompletionRequestExtVllm"
                          ],
                          "isOptional": true,
                          "templateString": "vllm=ChatCompletionRequestExtVllm(\n\t\t\t$FERN_INPUT\n\t\t)",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "best_of=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "ignore_eos=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of.vllm.ignore_eos",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "skip_special_tokens=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of.vllm.ignore_eos.vllm.skip_special_tokens",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "containerTemplateString": "stop_token_ids=[\n\t\t\t\t$FERN_INPUT\n\t\t\t]",
                                "delimiter": ",\n\t\t\t\t",
                                "innerTemplate": {
                                  "imports": [],
                                  "isOptional": true,
                                  "templateString": "$FERN_INPUT",
                                  "templateInputs": [
                                    {
                                      "location": "RELATIVE",
                                      "path": null,
                                      "type": "payload"
                                    }
                                  ],
                                  "type": "generic"
                                },
                                "templateInput": {
                                  "location": "BODY",
                                  "path": "octoai.vllm.best_of.vllm.ignore_eos.vllm.skip_special_tokens.vllm.stop_token_ids"
                                },
                                "type": "iterable"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "top_k=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of.vllm.ignore_eos.vllm.skip_special_tokens.vllm.stop_token_ids.vllm.top_k",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            },
                            {
                              "type": "template",
                              "value": {
                                "imports": [],
                                "isOptional": true,
                                "templateString": "use_beam_search=$FERN_INPUT",
                                "templateInputs": [
                                  {
                                    "location": "BODY",
                                    "path": "octoai.vllm.best_of.vllm.ignore_eos.vllm.skip_special_tokens.vllm.stop_token_ids.vllm.top_k.vllm.use_beam_search",
                                    "type": "payload"
                                  }
                                ],
                                "type": "generic"
                              }
                            }
                          ],
                          "inputDelimiter": ",\n\t\t\t",
                          "type": "generic"
                        }
                      }
                    ],
                    "inputDelimiter": ",\n\t\t",
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "presence_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "presence_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "repetition_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "repetition_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [
                      "from octoai.text_gen import ChatCompletionResponseFormat"
                    ],
                    "isOptional": true,
                    "templateString": "response_format=ChatCompletionResponseFormat(\n\t\t$FERN_INPUT\n\t)",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "imports": [],
                          "isOptional": true,
                          "containerTemplateString": "schema={\n\t\t\t$FERN_INPUT\n\t\t}",
                          "delimiter": ",\n\t\t\t",
                          "keyTemplate": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          },
                          "valueTemplate": {
                            "imports": [],
                            "isOptional": true,
                            "templateString": "$FERN_INPUT",
                            "templateInputs": [
                              {
                                "location": "RELATIVE",
                                "path": null,
                                "type": "payload"
                              }
                            ],
                            "type": "generic"
                          },
                          "keyValueSeparator": ": ",
                          "templateInput": {
                            "location": "BODY",
                            "path": "response_format.schema"
                          },
                          "type": "dict"
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "imports": [],
                          "isOptional": true,
                          "templateString": "type=$FERN_INPUT",
                          "templateInputs": [
                            {
                              "location": "BODY",
                              "path": "response_format.type",
                              "type": "payload"
                            }
                          ],
                          "type": "generic"
                        }
                      }
                    ],
                    "inputDelimiter": ",\n\t\t",
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "temperature=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "temperature",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "top_p=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "top_p",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "user=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "user",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_text-gen.createCompletion_stream": {
        "id": "endpoint_text-gen.createCompletion_stream",
        "namespace": [
          "subpackage_text-gen"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/completions"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://text.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://text.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "best_of",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Number of sequences that are generated from the prompt.`best_of` must be greater than or equal to `n`."
              },
              {
                "key": "echo",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Echo back the prompt in addition to the completion."
              },
              {
                "key": "frequency_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": -2,
                          "maximum": 2,
                          "default": 0
                        }
                      }
                    }
                  }
                },
                "description": "Penalizes new tokens based on their frequency in the generated text so far."
              },
              {
                "key": "logit_bias",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "optional",
                            "shape": {
                              "type": "alias",
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "double"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "loglikelihood",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Switch on loglikelihood regime and return log probabilities from all prompt tokens from prefill."
              },
              {
                "key": "logprobs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 5
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "max_tokens",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "default": 16
                        }
                      }
                    }
                  }
                },
                "description": "Maximum number of tokens to generate per output sequence."
              },
              {
                "key": "model",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Model name to use for completion."
              },
              {
                "key": "n",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Number of output sequences to return."
              },
              {
                "key": "presence_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": -2,
                          "maximum": 2,
                          "default": 0
                        }
                      }
                    }
                  }
                },
                "description": "Penalizes new tokens based on whether they appear in the generated text so far"
              },
              {
                "key": "prompt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:Prompt"
                      }
                    }
                  }
                },
                "description": "The prompt to generate completions from."
              },
              {
                "key": "repetition_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the likelihood of the model generating repeated texts"
              },
              {
                "key": "seed",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "default": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "stop",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:Stop"
                      }
                    }
                  }
                },
                "description": "Strings that stop the generation when they are generated."
              },
              {
                "key": "stream",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "literal",
                    "value": {
                      "type": "booleanLiteral",
                      "value": true
                    }
                  }
                },
                "description": "If set, tokens will be streamed incrementally to users."
              },
              {
                "key": "stream_options",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:StreamOptions"
                      }
                    }
                  }
                }
              },
              {
                "key": "suffix",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "temperature",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": 0,
                          "maximum": 2,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the randomness of the sampling."
              },
              {
                "key": "top_p",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "maximum": 1,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the cumulative probability of the top tokens to consider."
              },
              {
                "key": "user",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "stream",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:CompletionResponse"
              }
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:HTTPValidationError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:ErrorResponse"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "message": "An example error",
                    "type": "internal_error",
                    "object": "error"
                  }
                }
              }
            ]
          }
        ],
        "examples": [
          {
            "path": "/v1/completions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "model": "string",
                "stream": true
              }
            },
            "responseBody": {
              "type": "stream",
              "value": [
                {
                  "choices": [
                    {
                      "finish_reason": "stop",
                      "index": 0,
                      "logprobs": {
                        "content": [
                          {
                            "bytes": [
                              {}
                            ],
                            "logprob": 1,
                            "token": "string",
                            "top_logprobs": [
                              {
                                "bytes": [
                                  {}
                                ],
                                "logprob": 1,
                                "token": "string"
                              }
                            ]
                          }
                        ]
                      },
                      "text": "string"
                    }
                  ],
                  "created": 0,
                  "id": "string",
                  "model": "string",
                  "object": {},
                  "system_fingerprint": "string",
                  "usage": {
                    "completion_tokens": 0,
                    "prompt_tokens": 0,
                    "total_tokens": 0
                  }
                },
                {
                  "choices": [
                    {
                      "finish_reason": "stop",
                      "index": 0,
                      "logprobs": {
                        "content": [
                          {
                            "bytes": [
                              {}
                            ],
                            "logprob": 1,
                            "token": "string",
                            "top_logprobs": [
                              {
                                "bytes": [
                                  {}
                                ],
                                "logprob": 1,
                                "token": "string"
                              }
                            ]
                          }
                        ]
                      },
                      "text": "string"
                    }
                  ],
                  "created": 0,
                  "id": "string",
                  "model": "string",
                  "object": {},
                  "system_fingerprint": "string",
                  "usage": {
                    "completion_tokens": 0,
                    "prompt_tokens": 0,
                    "total_tokens": 0
                  }
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"model\": \"string\",\n  \"stream\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_completion_stream(\n    best_of=1,\n    echo=True,\n    frequency_penalty=1.1,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    logprobs=1,\n    max_tokens=1,\n    model=\"string\",\n    n=1,\n    presence_penalty=1.1,\n    prompt=\"string\",\n    repetition_penalty=1.1,\n    seed=1,\n    stop=\"string\",\n    suffix=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createCompletion({\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/completions",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "model": "string",
                "stream": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"model\": \"string\",\n  \"stream\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_completion_stream(\n    best_of=1,\n    echo=True,\n    frequency_penalty=1.1,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    logprobs=1,\n    max_tokens=1,\n    model=\"string\",\n    n=1,\n    presence_penalty=1.1,\n    prompt=\"string\",\n    repetition_penalty=1.1,\n    seed=1,\n    stop=\"string\",\n    suffix=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createCompletion({\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/completions",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "model": "string",
                "stream": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": "string",
                "message": "string",
                "object": "string",
                "param": "string",
                "type": "string",
                "validation_errors": {
                  "string": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"model\": \"string\",\n  \"stream\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_completion_stream(\n    best_of=1,\n    echo=True,\n    frequency_penalty=1.1,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    logprobs=1,\n    max_tokens=1,\n    model=\"string\",\n    n=1,\n    presence_penalty=1.1,\n    prompt=\"string\",\n    repetition_penalty=1.1,\n    seed=1,\n    stop=\"string\",\n    suffix=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createCompletion({\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.textGen.createCompletionStream(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "bestOf: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "best_of"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "echo: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "echo"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "frequencyPenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "frequency_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "dict",
                          "imports": [],
                          "isOptional": true,
                          "containerTemplateString": "logitBias: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "delimiter": ",\n\t\t\t",
                          "keyValueSeparator": ": ",
                          "keyTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "RELATIVE",
                                "path": null
                              }
                            ]
                          },
                          "valueTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "RELATIVE",
                                "path": null
                              }
                            ]
                          },
                          "templateInput": {
                            "location": "BODY",
                            "path": "logit_bias"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "loglikelihood: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "loglikelihood"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "logprobs: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "logprobs"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "maxTokens: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "max_tokens"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "model: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "model"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "n: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "n"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "presencePenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "presence_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "repetitionPenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "repetition_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "seed: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "seed"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "streamOptions: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "includeUsage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "stream_options.include_usage"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "suffix: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "suffix"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "temperature: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "temperature"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "topP: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "top_p"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "user: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "user"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.text_gen.create_completion_stream(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "best_of=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "best_of",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "echo=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "echo",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "frequency_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "frequency_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "logit_bias={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "logit_bias"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "logprobs=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "logprobs",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "max_tokens=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "max_tokens",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "model=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "model",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "n=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "n",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "presence_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "presence_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "repetition_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "repetition_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "seed=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "seed",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "suffix=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "suffix",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "temperature=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "temperature",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "top_p=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "top_p",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "user=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "user",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      },
      "endpoint_text-gen.createCompletion": {
        "id": "endpoint_text-gen.createCompletion",
        "namespace": [
          "subpackage_text-gen"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v1/completions"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://text.octoai.run"
          },
          {
            "id": "SecureLink",
            "baseUrl": "https://text.securelink.octo.ai"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "best_of",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Number of sequences that are generated from the prompt.`best_of` must be greater than or equal to `n`."
              },
              {
                "key": "echo",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Echo back the prompt in addition to the completion."
              },
              {
                "key": "frequency_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": -2,
                          "maximum": 2,
                          "default": 0
                        }
                      }
                    }
                  }
                },
                "description": "Penalizes new tokens based on their frequency in the generated text so far."
              },
              {
                "key": "logit_bias",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "optional",
                            "shape": {
                              "type": "alias",
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "double"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "loglikelihood",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Switch on loglikelihood regime and return log probabilities from all prompt tokens from prefill."
              },
              {
                "key": "logprobs",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 5
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "max_tokens",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "default": 16
                        }
                      }
                    }
                  }
                },
                "description": "Maximum number of tokens to generate per output sequence."
              },
              {
                "key": "model",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Model name to use for completion."
              },
              {
                "key": "n",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "minimum": 1,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Number of output sequences to return."
              },
              {
                "key": "presence_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": -2,
                          "maximum": 2,
                          "default": 0
                        }
                      }
                    }
                  }
                },
                "description": "Penalizes new tokens based on whether they appear in the generated text so far"
              },
              {
                "key": "prompt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:Prompt"
                      }
                    }
                  }
                },
                "description": "The prompt to generate completions from."
              },
              {
                "key": "repetition_penalty",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the likelihood of the model generating repeated texts"
              },
              {
                "key": "seed",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer",
                          "default": 0
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "stop",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:Stop"
                      }
                    }
                  }
                },
                "description": "Strings that stop the generation when they are generated."
              },
              {
                "key": "stream",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "literal",
                    "value": {
                      "type": "booleanLiteral",
                      "value": false
                    }
                  }
                },
                "description": "If set, tokens will be streamed incrementally to users."
              },
              {
                "key": "stream_options",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_text-gen:StreamOptions"
                      }
                    }
                  }
                }
              },
              {
                "key": "suffix",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "temperature",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "minimum": 0,
                          "maximum": 2,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the randomness of the sampling."
              },
              {
                "key": "top_p",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "maximum": 1,
                          "default": 1
                        }
                      }
                    }
                  }
                },
                "description": "Controls the cumulative probability of the top tokens to consider."
              },
              {
                "key": "user",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_text-gen:CompletionResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Validation Error",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:HTTPValidationError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_text-gen:ErrorResponse"
              }
            },
            "examples": [
              {
                "responseBody": {
                  "type": "json",
                  "value": {
                    "message": "An example error",
                    "type": "internal_error",
                    "object": "error"
                  }
                }
              }
            ]
          }
        ],
        "examples": [
          {
            "path": "/v1/completions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "model": "model",
                "stream": false
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "choices": [
                  {
                    "index": 1,
                    "text": "text",
                    "finish_reason": "stop"
                  }
                ],
                "created": 1,
                "id": "id",
                "model": "model",
                "system_fingerprint": "system_fingerprint",
                "object": {
                  "key": "value"
                },
                "usage": {
                  "completion_tokens": 1,
                  "prompt_tokens": 1,
                  "total_tokens": 1
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"model\": \"model\",\n  \"stream\": false\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_completion_stream(\n    best_of=1,\n    echo=True,\n    frequency_penalty=1.1,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    logprobs=1,\n    max_tokens=1,\n    model=\"string\",\n    n=1,\n    presence_penalty=1.1,\n    prompt=\"string\",\n    repetition_penalty=1.1,\n    seed=1,\n    stop=\"string\",\n    suffix=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createCompletion({\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/completions",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "model": "string",
                "stream": false
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "detail": [
                  {
                    "loc": [
                      "string"
                    ],
                    "msg": "string",
                    "type": "string"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"model\": \"string\",\n  \"stream\": false\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_completion_stream(\n    best_of=1,\n    echo=True,\n    frequency_penalty=1.1,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    logprobs=1,\n    max_tokens=1,\n    model=\"string\",\n    n=1,\n    presence_penalty=1.1,\n    prompt=\"string\",\n    repetition_penalty=1.1,\n    seed=1,\n    stop=\"string\",\n    suffix=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createCompletion({\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v1/completions",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "model": "string",
                "stream": false
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "object": "string",
                "code": "string",
                "message": "string",
                "param": "string",
                "type": "string",
                "validation_errors": {
                  "string": "string"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://text.octoai.run/v1/completions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"model\": \"string\",\n  \"stream\": false\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_gen.create_completion_stream(\n    best_of=1,\n    echo=True,\n    frequency_penalty=1.1,\n    logit_bias={\"string\": {\"key\": \"value\"}},\n    logprobs=1,\n    max_tokens=1,\n    model=\"string\",\n    n=1,\n    presence_penalty=1.1,\n    prompt=\"string\",\n    repetition_penalty=1.1,\n    seed=1,\n    stop=\"string\",\n    suffix=\"string\",\n    temperature=1.1,\n    top_p=1.1,\n    user=\"string\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { OctoAIClient } from \"@octoai/sdk\";\n\nconst octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\nawait octoAi.textGen.createCompletion({\n    model: \"model\",\n    stream: false\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ],
        "snippetTemplates": {
          "typescript": {
            "type": "v1",
            "functionInvocation": {
              "type": "generic",
              "imports": [],
              "templateString": "await octoAi.textGen.createCompletionStream(\n\t$FERN_INPUT\n)",
              "isOptional": false,
              "inputDelimiter": ",\n\t",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "type": "generic",
                    "imports": [],
                    "templateString": "{\n\t\t$FERN_INPUT\n\t}",
                    "isOptional": true,
                    "inputDelimiter": ",\n\t\t",
                    "templateInputs": [
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "bestOf: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "best_of"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "echo: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "echo"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "frequencyPenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "frequency_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "dict",
                          "imports": [],
                          "isOptional": true,
                          "containerTemplateString": "logitBias: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "delimiter": ",\n\t\t\t",
                          "keyValueSeparator": ": ",
                          "keyTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "RELATIVE",
                                "path": null
                              }
                            ]
                          },
                          "valueTemplate": {
                            "type": "generic",
                            "imports": [],
                            "templateString": "$FERN_INPUT",
                            "isOptional": true,
                            "templateInputs": [
                              {
                                "type": "payload",
                                "location": "RELATIVE",
                                "path": null
                              }
                            ]
                          },
                          "templateInput": {
                            "location": "BODY",
                            "path": "logit_bias"
                          }
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "loglikelihood: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "loglikelihood"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "logprobs: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "logprobs"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "maxTokens: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "max_tokens"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "model: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "model"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "n: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "n"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "presencePenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "presence_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "repetitionPenalty: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "repetition_penalty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "seed: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "seed"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "streamOptions: {\n\t\t\t$FERN_INPUT\n\t\t}",
                          "isOptional": true,
                          "inputDelimiter": ",\n\t\t\t",
                          "templateInputs": [
                            {
                              "type": "template",
                              "value": {
                                "type": "generic",
                                "imports": [],
                                "templateString": "includeUsage: $FERN_INPUT",
                                "isOptional": true,
                                "templateInputs": [
                                  {
                                    "type": "payload",
                                    "location": "BODY",
                                    "path": "stream_options.include_usage"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "suffix: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "suffix"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "temperature: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "temperature"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "topP: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "top_p"
                            }
                          ]
                        }
                      },
                      {
                        "type": "template",
                        "value": {
                          "type": "generic",
                          "imports": [],
                          "templateString": "user: $FERN_INPUT",
                          "isOptional": true,
                          "templateInputs": [
                            {
                              "type": "payload",
                              "location": "BODY",
                              "path": "user"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "clientInstantiation": "const octoAi = new OctoAIClient({ apiKey: \"YOUR_API_KEY\" });\n"
          },
          "python": {
            "type": "v1",
            "functionInvocation": {
              "imports": [],
              "isOptional": true,
              "templateString": "client.text_gen.create_completion_stream(\n\t$FERN_INPUT\n)",
              "templateInputs": [
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "best_of=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "best_of",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "echo=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "echo",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "frequency_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "frequency_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "containerTemplateString": "logit_bias={\n\t\t$FERN_INPUT\n\t}",
                    "delimiter": ",\n\t\t",
                    "keyTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "valueTemplate": {
                      "imports": [],
                      "isOptional": true,
                      "templateString": "$FERN_INPUT",
                      "templateInputs": [
                        {
                          "location": "RELATIVE",
                          "path": null,
                          "type": "payload"
                        }
                      ],
                      "type": "generic"
                    },
                    "keyValueSeparator": ": ",
                    "templateInput": {
                      "location": "BODY",
                      "path": "logit_bias"
                    },
                    "type": "dict"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "logprobs=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "logprobs",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "max_tokens=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "max_tokens",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "model=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "model",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "n=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "n",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "presence_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "presence_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "repetition_penalty=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "repetition_penalty",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "seed=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "seed",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "suffix=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "suffix",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "temperature=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "temperature",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "top_p=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "top_p",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                },
                {
                  "type": "template",
                  "value": {
                    "imports": [],
                    "isOptional": true,
                    "templateString": "user=$FERN_INPUT",
                    "templateInputs": [
                      {
                        "location": "BODY",
                        "path": "user",
                        "type": "payload"
                      }
                    ],
                    "type": "generic"
                  }
                }
              ],
              "inputDelimiter": ",\n\t",
              "type": "generic"
            },
            "clientInstantiation": "from octoai.client import OctoAI\n\nclient = OctoAI(\n    api_key=\"YOUR_API_KEY\",\n)"
          }
        }
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_asset-library:Data": {
        "name": "Data",
        "description": "Asset data.",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "asset_type",
          "variants": [
            {
              "discriminantValue": "checkpoint",
              "extends": [
                "type_asset-library:CheckpointData"
              ],
              "properties": []
            },
            {
              "discriminantValue": "file",
              "extends": [
                "type_asset-library:FileData"
              ],
              "properties": []
            },
            {
              "discriminantValue": "latent",
              "extends": [
                "type_asset-library:LatentData"
              ],
              "properties": []
            },
            {
              "discriminantValue": "lora",
              "extends": [
                "type_asset-library:LoraData"
              ],
              "properties": []
            },
            {
              "discriminantValue": "textual_inversion",
              "extends": [
                "type_asset-library:TextualInversionData"
              ],
              "properties": []
            },
            {
              "discriminantValue": "vae",
              "extends": [
                "type_asset-library:VAEData"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_asset-library:Asset": {
        "name": "Asset",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "asset_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:AssetType"
                }
              },
              "description": "Asset type."
            },
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Asset creation time."
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:Data"
                }
              },
              "description": "Asset data."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Description."
            },
            {
              "key": "file_structure",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:FileStructure"
                    }
                  }
                }
              },
              "description": "File structure."
            },
            {
              "key": "hf_repo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Asset id."
            },
            {
              "key": "is_public",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "True if asset is public."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Asset name."
            },
            {
              "key": "size_bytes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Size in bytes."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:Status"
                }
              },
              "description": "Asset status."
            },
            {
              "key": "status_details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Asset status."
            },
            {
              "key": "status_info",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Asset status info."
            },
            {
              "key": "tenant_uuid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Asset tenant ID."
            },
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 1
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_asset-library:AssetType": {
        "name": "AssetType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "file"
            },
            {
              "value": "checkpoint"
            },
            {
              "value": "lora"
            },
            {
              "value": "textual_inversion"
            },
            {
              "value": "vae"
            },
            {
              "value": "latent"
            }
          ]
        }
      },
      "type_asset-library:BaseEngine": {
        "name": "BaseEngine",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "text/llama-2-7b"
            },
            {
              "value": "text/llama-2-13b"
            },
            {
              "value": "text/llama-2-70b"
            },
            {
              "value": "text/codellama-7b"
            },
            {
              "value": "text/codellama-13b"
            },
            {
              "value": "text/codellama-34b"
            },
            {
              "value": "text/codellama-70b"
            },
            {
              "value": "text/mistral-7b"
            },
            {
              "value": "text/mixtral-8x7b"
            },
            {
              "value": "image/controlnet-sd15"
            },
            {
              "value": "image/controlnet-sdxl"
            },
            {
              "value": "image/stable-diffusion-v1-5"
            },
            {
              "value": "image/stable-diffusion-xl-v1-0"
            },
            {
              "value": "image/stable-diffusion-ssd"
            },
            {
              "value": "audio/tortoise-tts"
            },
            {
              "value": "audio/rvc"
            }
          ]
        }
      },
      "type_asset-library:BaseEngineType": {
        "name": "BaseEngineType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "text"
            },
            {
              "value": "image"
            },
            {
              "value": "audio"
            }
          ]
        }
      },
      "type_asset-library:CheckpointData": {
        "name": "CheckpointData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:DataType"
                    }
                  }
                }
              },
              "description": "Data type."
            },
            {
              "key": "engine",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:BaseEngine"
                }
              },
              "description": "Engine type."
            },
            {
              "key": "file_format",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:FileFormat"
                    }
                  }
                }
              },
              "description": "File format."
            }
          ]
        }
      },
      "type_asset-library:CompleteAssetUploadResponse": {
        "name": "CompleteAssetUploadResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_asset-library:CreateAssetResponseTransferApi": {
        "name": "CreateAssetResponseTransferApi",
        "description": "Asset transfer API.",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "none",
              "extends": [
                "type_asset-library:NoTransferApi"
              ],
              "properties": []
            },
            {
              "discriminantValue": "presigned-url",
              "extends": [
                "type_asset-library:PresignedUrlTransferApi"
              ],
              "properties": []
            },
            {
              "discriminantValue": "sts",
              "extends": [
                "type_asset-library:StsTransferApi"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_asset-library:CreateAssetResponse": {
        "name": "CreateAssetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "asset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:Asset"
                }
              },
              "description": "Asset."
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": ""
                      }
                    }
                  }
                }
              },
              "description": "Unused. Present for compatibility purposes."
            },
            {
              "key": "transfer_api",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:CreateAssetResponseTransferApi"
                }
              },
              "description": "Asset transfer API."
            }
          ]
        }
      },
      "type_asset-library:DataType": {
        "name": "DataType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "fp16"
            },
            {
              "value": "fp32"
            },
            {
              "value": "int4"
            },
            {
              "value": "int8"
            }
          ]
        }
      },
      "type_asset-library:DeleteAssetResponse": {
        "name": "DeleteAssetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "deleted_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Deletion time."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Asset ID."
            }
          ]
        }
      },
      "type_asset-library:FileData": {
        "name": "FileData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "file_format",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:FileExtension"
                    }
                  }
                }
              },
              "description": "File format."
            },
            {
              "key": "preview_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": ""
                      }
                    }
                  }
                }
              },
              "description": "Version."
            }
          ]
        }
      },
      "type_asset-library:FileExtension": {
        "name": "FileExtension",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "unknown"
            },
            {
              "value": "png"
            },
            {
              "value": "jpg"
            },
            {
              "value": "jpeg"
            },
            {
              "value": "txt"
            },
            {
              "value": "mp3"
            },
            {
              "value": "wav"
            }
          ]
        }
      },
      "type_asset-library:FileFormat": {
        "name": "FileFormat",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "safetensors"
            },
            {
              "value": "pt"
            }
          ]
        }
      },
      "type_asset-library:FileStructure": {
        "name": "FileStructure",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "unknown"
            },
            {
              "value": "single_file"
            },
            {
              "value": "multiple_files"
            }
          ]
        }
      },
      "type_asset-library:HTTPValidationError": {
        "name": "HTTPValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "detail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_asset-library:ValidationError"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_asset-library:LatentData": {
        "name": "LatentData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "engine",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:BaseEngine"
                }
              },
              "description": "Engine type."
            },
            {
              "key": "file_format",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:FileFormat"
                    }
                  }
                }
              },
              "description": "File format."
            }
          ]
        }
      },
      "type_asset-library:ListAssetsResponse": {
        "name": "ListAssetsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:Asset"
                    }
                  }
                }
              },
              "description": "List of assets."
            },
            {
              "key": "has_more",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "True if there are more asset to show."
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Total number of assets."
            }
          ]
        }
      },
      "type_asset-library:LoraData": {
        "name": "LoraData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "checkpoint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "data_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:DataType"
                    }
                  }
                }
              },
              "description": "Data type."
            },
            {
              "key": "engine",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:BaseEngine"
                }
              },
              "description": "Engine type."
            },
            {
              "key": "file_format",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:FileFormat"
                    }
                  }
                }
              },
              "description": "File format."
            },
            {
              "key": "trigger_words",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_asset-library:NoTransferApi": {
        "name": "NoTransferApi",
        "description": "This type exists to avoid Optional[TransferApi] so openapi-generator can work.\n\nIn this class, type is not added to TransferApiType because it is not a valid\nTransferApiType. It exists only to note that no TransferApi is defined.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_asset-library:PresignedUrlTransferApi": {
        "name": "PresignedUrlTransferApi",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "get_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Get asset URL."
            },
            {
              "key": "put_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Asset URL to upload."
            }
          ]
        }
      },
      "type_asset-library:RetrieveAssetResponseTransferApi": {
        "name": "RetrieveAssetResponseTransferApi",
        "description": "Transfer API.",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "none",
              "extends": [
                "type_asset-library:NoTransferApi"
              ],
              "properties": []
            },
            {
              "discriminantValue": "presigned-url",
              "extends": [
                "type_asset-library:PresignedUrlTransferApi"
              ],
              "properties": []
            },
            {
              "discriminantValue": "sts",
              "extends": [
                "type_asset-library:StsTransferApi"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_asset-library:RetrieveAssetResponse": {
        "name": "RetrieveAssetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "asset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:Asset"
                }
              },
              "description": "Asset."
            },
            {
              "key": "transfer_api",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:RetrieveAssetResponseTransferApi"
                }
              },
              "description": "Transfer API."
            }
          ]
        }
      },
      "type_asset-library:Status": {
        "name": "Status",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ready_to_upload"
            },
            {
              "value": "uploaded"
            },
            {
              "value": "ready"
            },
            {
              "value": "deleted"
            },
            {
              "value": "rejected"
            },
            {
              "value": "error"
            },
            {
              "value": "uploading"
            }
          ]
        }
      },
      "type_asset-library:StsTransferApi": {
        "name": "StsTransferApi",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "aws_access_key_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "AWS access key."
            },
            {
              "key": "aws_secret_access_key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "AWS secret accesss key."
            },
            {
              "key": "aws_session_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "s3_bucket",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "S3 bucket."
            },
            {
              "key": "s3_endpoint_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "s3_key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "S3 key."
            },
            {
              "key": "s3_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "S3 full URL."
            }
          ]
        }
      },
      "type_asset-library:TextualInversionData": {
        "name": "TextualInversionData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:DataType"
                    }
                  }
                }
              },
              "description": "Data type."
            },
            {
              "key": "engine",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:BaseEngine"
                }
              },
              "description": "Engine type."
            },
            {
              "key": "file_format",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:FileFormat"
                    }
                  }
                }
              },
              "description": "File format."
            },
            {
              "key": "trigger_words",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Trigger words."
            }
          ]
        }
      },
      "type_asset-library:TransferApiType": {
        "name": "TransferApiType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "presigned-url"
            },
            {
              "value": "sts"
            }
          ]
        }
      },
      "type_asset-library:VAEData": {
        "name": "VAEData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:DataType"
                    }
                  }
                }
              },
              "description": "Data type."
            },
            {
              "key": "engine",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_asset-library:BaseEngine"
                }
              },
              "description": "Engine type."
            },
            {
              "key": "file_format",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:FileFormat"
                    }
                  }
                }
              },
              "description": "File format."
            }
          ]
        }
      },
      "type_asset-library:ValidationErrorLocItem": {
        "name": "ValidationErrorLocItem",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_asset-library:ValidationError": {
        "name": "ValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "loc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_asset-library:ValidationErrorLocItem"
                    }
                  }
                }
              }
            },
            {
              "key": "msg",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_fine-tuning:Details": {
        "name": "Details",
        "description": "Details of the tune.",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "tune_type",
          "variants": [
            {
              "discriminantValue": "lora_tune",
              "extends": [
                "type_fine-tuning:LoraTune"
              ],
              "properties": []
            },
            {
              "discriminantValue": "text_to_speech_latent_tune",
              "extends": [
                "type_fine-tuning:TextToSpeechLatentTune"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_fine-tuning:BaseEngine": {
        "name": "BaseEngine",
        "description": "BaseEngine",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "text/llama-2-7b"
            },
            {
              "value": "text/llama-2-13b"
            },
            {
              "value": "text/llama-2-70b"
            },
            {
              "value": "text/codellama-7b"
            },
            {
              "value": "text/codellama-13b"
            },
            {
              "value": "text/codellama-34b"
            },
            {
              "value": "text/codellama-70b"
            },
            {
              "value": "text/mistral-7b"
            },
            {
              "value": "text/mixtral-8x7b"
            },
            {
              "value": "image/controlnet-sd15"
            },
            {
              "value": "image/controlnet-sdxl"
            },
            {
              "value": "image/stable-diffusion-v1-5"
            },
            {
              "value": "image/stable-diffusion-xl-v1-0"
            },
            {
              "value": "image/stable-diffusion-ssd"
            },
            {
              "value": "audio/tortoise-tts"
            },
            {
              "value": "audio/rvc"
            }
          ]
        }
      },
      "type_fine-tuning:HTTPValidationError": {
        "name": "HTTPValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "detail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_fine-tuning:ValidationError"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_fine-tuning:ListTunesResponse": {
        "name": "ListTunesResponse",
        "description": "The list tunes response.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_fine-tuning:Tune"
                    }
                  }
                }
              },
              "description": "List of tunes."
            },
            {
              "key": "has_more",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "True if it has more items than the returned list."
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Total number of tunes."
            }
          ]
        }
      },
      "type_fine-tuning:LoraTune": {
        "name": "LoraTune",
        "description": "A LoRA Tune.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "base_checkpoint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_fine-tuning:LoraTuneCheckpoint"
                }
              },
              "description": "The base checkpoint used for this LoRA Tune."
            },
            {
              "key": "files",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_fine-tuning:LoraTuneFile"
                    }
                  }
                }
              },
              "description": "The files used for this LoRA Tune."
            },
            {
              "key": "resize_images",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "seed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "steps",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The number of steps used for this LoRA Tune."
            },
            {
              "key": "trigger_words",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The trigger words used for this tune. As of now, only one trigger word is supported. `List` is used for future-proofing."
            }
          ]
        }
      },
      "type_fine-tuning:LoraTuneCheckpoint": {
        "name": "LoraTuneCheckpoint",
        "description": "A checkpoint used for a LoRA Tune.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "checkpoint_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The checkpoint asset ID."
            },
            {
              "key": "engine",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_fine-tuning:BaseEngine"
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_fine-tuning:LoraTuneFile": {
        "name": "LoraTuneFile",
        "description": "An input file to a LoRA tune with its caption.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "caption",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "file_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the file on asset lake."
            }
          ]
        }
      },
      "type_fine-tuning:TextToSpeechLatentTune": {
        "name": "TextToSpeechLatentTune",
        "description": "A TextToSpeechLatentTune.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "asset_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The Asset Lake asset ids used for this task."
            },
            {
              "key": "inline_assets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_fine-tuning:TuneDetails": {
        "name": "TuneDetails",
        "description": "Tune details.",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "tune_type",
          "variants": [
            {
              "discriminantValue": "lora_tune",
              "extends": [
                "type_fine-tuning:LoraTune"
              ],
              "properties": []
            },
            {
              "discriminantValue": "text_to_speech_latent_tune",
              "extends": [
                "type_fine-tuning:TextToSpeechLatentTune"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_fine-tuning:Tune": {
        "name": "Tune",
        "description": "A tune base class.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time this tune task was created."
            },
            {
              "key": "deleted_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The description of the tune."
            },
            {
              "key": "details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_fine-tuning:TuneDetails"
                }
              },
              "description": "Tune details."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The ID of the LoRA tune."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the tune."
            },
            {
              "key": "output_lora_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The output LoRA IDs, if the task was successful."
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_fine-tuning:TuneResult"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_fine-tuning:TuneStatus"
                }
              },
              "description": "The status of the associated task."
            },
            {
              "key": "status_details",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The details of the status, only used when the associated task failed."
            },
            {
              "key": "succeeded_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "tenant_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The tenant who requested the LoRA tune."
            },
            {
              "key": "tune_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_fine-tuning:TuneType"
                }
              },
              "description": "The type of this tune."
            },
            {
              "key": "updated_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The time this tune task was updated."
            }
          ]
        }
      },
      "type_fine-tuning:TuneResult": {
        "name": "TuneResult",
        "description": "Tune result on worker.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "number_of_available_assets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "output_assets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "rejected_assets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unready_assets",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_fine-tuning:TuneStatus": {
        "name": "TuneStatus",
        "description": "The status of the tune job.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "pending"
            },
            {
              "value": "running"
            },
            {
              "value": "succeeded"
            },
            {
              "value": "cancelled"
            },
            {
              "value": "failed"
            }
          ]
        }
      },
      "type_fine-tuning:TuneType": {
        "name": "TuneType",
        "description": "The type of tune requested.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "lora_tune"
            },
            {
              "value": "text_to_speech_latent_tune"
            },
            {
              "value": "text_to_speech_rvc_tune"
            },
            {
              "value": "text_to_speech_tortoise_tune"
            }
          ]
        }
      },
      "type_fine-tuning:ValidationErrorLocItem": {
        "name": "ValidationErrorLocItem",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_fine-tuning:ValidationError": {
        "name": "ValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "loc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_fine-tuning:ValidationErrorLocItem"
                    }
                  }
                }
              }
            },
            {
              "key": "msg",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_image-gen:VideoGenerationRequestSeed": {
        "name": "VideoGenerationRequestSeed",
        "description": "Integer number or list of integers representing the seeds of random generators.Fixing random seed is useful when attempting to generate a specific video/animation (or set of videos/animations). Must be greater than 0 and less than 2^32.",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_image-gen:HTTPValidationError": {
        "name": "HTTPValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "detail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_image-gen:ValidationError"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_image-gen:ImageEncoding": {
        "name": "ImageEncoding",
        "description": "The image encoding types available for image generation response.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "jpeg"
            },
            {
              "value": "png"
            }
          ]
        }
      },
      "type_image-gen:ImageGeneration": {
        "name": "ImageGeneration",
        "description": "Represent a generated image.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "image_b64",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "removed_for_safety",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "True if the image was removed for safety, False otherwise."
            },
            {
              "key": "seed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Seed used to generate the image. It can be used to recreate the generation."
            },
            {
              "key": "safety_score",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_image-gen:ImageGenerationRequestSeed": {
        "name": "ImageGenerationRequestSeed",
        "description": "Integer number or list of integers representing the seeds of random generators. Fixing random seed is useful when attempting to generate a specific image. Must be greater than 0 and less than 2^32.",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_image-gen:ImageGenerationRequest": {
        "name": "ImageGenerationRequest",
        "description": "Generate one or more images based on the given parameters.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "prompt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Text describing the image content to generate."
            },
            {
              "key": "prompt_2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "negative_prompt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "negative_prompt_2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "checkpoint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "controlnet",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "vae",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "textual_inversions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "loras",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "double"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sampler",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_image-gen:Scheduler"
                    }
                  }
                }
              },
              "description": "Sampler name (also known as 'scheduler') to use during image generation."
            },
            {
              "key": "height",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "width",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "cfg_scale",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "maximum": 50,
                        "default": 12
                      }
                    }
                  }
                }
              },
              "description": "Floating-point number represeting how closely to adhere to prompt description. Must be a positive number no greater than 50.0."
            },
            {
              "key": "steps",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "maximum": 200,
                        "default": 30
                      }
                    }
                  }
                }
              },
              "description": "Integer repreenting how many steps of diffusion to run. Must be greater than 0 and less than or equal to 200."
            },
            {
              "key": "num_images",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "maximum": 16,
                        "default": 1
                      }
                    }
                  }
                }
              },
              "description": "Integer representing how many output images to generate with a single prompt/configuration."
            },
            {
              "key": "seed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_image-gen:ImageGenerationRequestSeed"
                    }
                  }
                }
              },
              "description": "Integer number or list of integers representing the seeds of random generators. Fixing random seed is useful when attempting to generate a specific image. Must be greater than 0 and less than 2^32."
            },
            {
              "key": "controlnet_image",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "init_image",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mask_image",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "strength",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "minimum": 0,
                        "maximum": 1,
                        "default": 0.8
                      }
                    }
                  }
                }
              },
              "description": "Floating-point number indicating how much creative the Image to Image generation mode should be. Must be greater than 0 and less than or equal to 1.0."
            },
            {
              "key": "style_preset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_image-gen:SDXLStyles"
                    }
                  }
                }
              }
            },
            {
              "key": "use_refiner",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to enable and apply the SDXL refiner model to the image generation."
            },
            {
              "key": "high_noise_frac",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "minimum": 0,
                        "maximum": 1,
                        "default": 0.8
                      }
                    }
                  }
                }
              },
              "description": "Floating-point number that defines the fraction of steps to perform with the base model. Used only by SD XL. Must be greater than or equal to 0.0 and less than or equal to 1.0."
            },
            {
              "key": "controlnet_conditioning_scale",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "minimum": 0,
                        "default": 1
                      }
                    }
                  }
                }
              },
              "description": "How strong the effect of the controlnet should be."
            },
            {
              "key": "controlnet_early_stop",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double",
                        "minimum": 0,
                        "maximum": 1
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "controlnet_preprocess",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to apply automatic ControlNet preprocessing."
            },
            {
              "key": "clip_skip",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 12
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "outpainting",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the request requires outpainting or not. If so, special preprocessing is applied for better results."
            },
            {
              "key": "enable_safety",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Boolean defining whether to use safety checker system on generated outputs or not."
            },
            {
              "key": "image_encoding",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_image-gen:ImageEncoding"
                    }
                  }
                }
              },
              "description": "Define which encoding process should be applied before returning the generated image(s)."
            },
            {
              "key": "transfer_images",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "list",
                              "itemShape": {
                                "type": "alias",
                                "value": {
                                  "type": "primitive",
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "force_asset_download",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "[Internal] Boolean defining if assets must be re-downloaded into the cache even if present."
            },
            {
              "key": "force_asset_gpu_copy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "[Internal] Boolean defining if assets must to be copied into the GPU even if present."
            }
          ]
        }
      },
      "type_image-gen:ImageGenerationResponse": {
        "name": "ImageGenerationResponse",
        "description": "Response to an ImageGenerationRequest.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "images",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_image-gen:ImageGeneration"
                    }
                  }
                }
              },
              "description": "List of ImageGeneration(s) generated by the request."
            },
            {
              "key": "prediction_time_ms",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "Total runtime of the image generation(s)."
            }
          ]
        }
      },
      "type_image-gen:SDXLStyles": {
        "name": "SDXLStyles",
        "description": "The supported SDXL styles.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "base"
            },
            {
              "value": "3d-model"
            },
            {
              "value": "analog-film"
            },
            {
              "value": "anime"
            },
            {
              "value": "cinematic"
            },
            {
              "value": "comic-book"
            },
            {
              "value": "Craft Clay"
            },
            {
              "value": "modeling-compound"
            },
            {
              "value": "digital-art"
            },
            {
              "value": "enhance"
            },
            {
              "value": "fantasy-art"
            },
            {
              "value": "isometric"
            },
            {
              "value": "line-art"
            },
            {
              "value": "low-poly"
            },
            {
              "value": "neon-punk"
            },
            {
              "value": "origami"
            },
            {
              "value": "photographic"
            },
            {
              "value": "pixel-art"
            },
            {
              "value": "tile-texture"
            },
            {
              "value": "Advertising"
            },
            {
              "value": "Food Photography"
            },
            {
              "value": "Real Estate"
            },
            {
              "value": "Abstract"
            },
            {
              "value": "Cubist"
            },
            {
              "value": "Graffiti"
            },
            {
              "value": "Hyperrealism"
            },
            {
              "value": "Impressionist"
            },
            {
              "value": "Pointillism"
            },
            {
              "value": "Pop Art"
            },
            {
              "value": "Psychedelic"
            },
            {
              "value": "Renaissance"
            },
            {
              "value": "Steampunk"
            },
            {
              "value": "Surrealist"
            },
            {
              "value": "Typography"
            },
            {
              "value": "Watercolor"
            },
            {
              "value": "Fighting Game"
            },
            {
              "value": "GTA"
            },
            {
              "value": "Super Mario"
            },
            {
              "value": "Minecraft"
            },
            {
              "value": "Pokémon"
            },
            {
              "value": "Retro Arcade"
            },
            {
              "value": "Retro Game"
            },
            {
              "value": "RPG Fantasy Game"
            },
            {
              "value": "Strategy Game"
            },
            {
              "value": "Street Fighter"
            },
            {
              "value": "Legend of Zelda"
            },
            {
              "value": "Architectural"
            },
            {
              "value": "Disco"
            },
            {
              "value": "Dreamscape"
            },
            {
              "value": "Dystopian"
            },
            {
              "value": "Fairy Tale"
            },
            {
              "value": "Gothic"
            },
            {
              "value": "Grunge"
            },
            {
              "value": "Horror"
            },
            {
              "value": "Minimalist"
            },
            {
              "value": "Monochrome"
            },
            {
              "value": "Nautical"
            },
            {
              "value": "Space"
            },
            {
              "value": "Stained Glass"
            },
            {
              "value": "Techwear Fashion"
            },
            {
              "value": "Tribal"
            },
            {
              "value": "Zentangle"
            },
            {
              "value": "Collage"
            },
            {
              "value": "Flat Papercut"
            },
            {
              "value": "Kirigami"
            },
            {
              "value": "Paper Mache"
            },
            {
              "value": "Paper Quilling"
            },
            {
              "value": "Papercut Collage"
            },
            {
              "value": "Papercut Shadow Box"
            },
            {
              "value": "Stacked Papercut"
            },
            {
              "value": "Thick Layered Papercut"
            },
            {
              "value": "Alien"
            },
            {
              "value": "Film Noir"
            },
            {
              "value": "HDR"
            },
            {
              "value": "Long Exposure"
            },
            {
              "value": "Neon Noir"
            },
            {
              "value": "Silhouette"
            },
            {
              "value": "Tilt-Shift"
            }
          ]
        }
      },
      "type_image-gen:Scheduler": {
        "name": "Scheduler",
        "description": "The schedulers available for image generation.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PNDM"
            },
            {
              "value": "LMS"
            },
            {
              "value": "KLMS"
            },
            {
              "value": "DDIM"
            },
            {
              "value": "DDPM"
            },
            {
              "value": "HEUN"
            },
            {
              "value": "K_HEUN"
            },
            {
              "value": "K_EULER"
            },
            {
              "value": "K_EULER_ANCESTRAL"
            },
            {
              "value": "DPM_SOLVER_MULTISTEP"
            },
            {
              "value": "DPM_PLUS_PLUS_2M_KARRAS"
            },
            {
              "value": "DPM_SINGLE"
            },
            {
              "value": "DPM_2"
            },
            {
              "value": "DPM_2_ANCESTRAL"
            },
            {
              "value": "DPM_PLUS_PLUS_SDE_KARRAS"
            },
            {
              "value": "UNI_PC"
            },
            {
              "value": "LCM"
            }
          ]
        }
      },
      "type_image-gen:ValidationErrorLocItem": {
        "name": "ValidationErrorLocItem",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_image-gen:ValidationError": {
        "name": "ValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "loc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_image-gen:ValidationErrorLocItem"
                    }
                  }
                }
              }
            },
            {
              "key": "msg",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_image-gen:VideoGeneration": {
        "name": "VideoGeneration",
        "description": "Represent a generated video/animation.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "video",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "removed_for_safety",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "True if the video/animation was removed for safety, False otherwise."
            },
            {
              "key": "seed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Seed used to generate the video/animation. It can be used to recreate the generation."
            },
            {
              "key": "safety_score",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_image-gen:VideoGenerationResponse": {
        "name": "VideoGenerationResponse",
        "description": "Response to an VideoGenerationRequest.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "videos",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_image-gen:VideoGeneration"
                    }
                  }
                }
              },
              "description": "List of VideoGeneration(s) generated by the request."
            },
            {
              "key": "prediction_time_ms",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "Total runtime of the video(s) generation(s)."
            }
          ]
        }
      },
      "type_text-gen:Stop": {
        "name": "Stop",
        "description": "Strings that stop the generation when they are generated.",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:Prompt": {
        "name": "Prompt",
        "description": "The prompt to generate completions from.",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ChatCompletionChoice": {
        "name": "ChatCompletionChoice",
        "description": "A single chat completion choice. A response will contain one or\nmore of these based on the setting of `n`.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "finish_reason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:FinishReason"
                    }
                  }
                }
              }
            },
            {
              "key": "index",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "A unique identifier for the chat completion.Each chunk has the same ID."
            },
            {
              "key": "logprobs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:Logprobs"
                    }
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_text-gen:ChatMessage"
                }
              },
              "description": "A chat completion message generated by the model."
            }
          ]
        }
      },
      "type_text-gen:ChatCompletionChunk": {
        "name": "ChatCompletionChunk",
        "description": "Represents a single chunk of a streaming chat completion response.\n\nThis object's schema is compatible with OpenAI's Chat Completion API.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "choices",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:ChatCompletionChunkChoice"
                    }
                  }
                }
              },
              "description": "A list of chat completion choices.Can be more than one if n is greater than 1."
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The Unix timestamp (in seconds) of when the chat completion was created."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A unique identifier for the entire chat completion request. Each chunk in the stream has the same ID."
            },
            {
              "key": "model",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The model used for the chat completion."
            },
            {
              "key": "object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "usage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:UsageStats"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ChatCompletionChunkChoice": {
        "name": "ChatCompletionChunkChoice",
        "description": "An OpenAPI compatible schema for a chat completion chunk choice.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "delta",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_text-gen:ChatCompletionDelta"
                }
              }
            },
            {
              "key": "finish_reason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:FinishReason"
                    }
                  }
                }
              }
            },
            {
              "key": "index",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "logprobs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:Logprobs"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ChatCompletionDelta": {
        "name": "ChatCompletionDelta",
        "description": "An OpenAPI compatible schema for a chat completion choice delta.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ChatCompletionRequestExt": {
        "name": "ChatCompletionRequestExt",
        "description": "OctoAI specific extensions for a chat completion request.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "vllm",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:ChatCompletionRequestExtVLLM"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ChatCompletionRequestExtVLLM": {
        "name": "ChatCompletionRequestExtVLLM",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "best_of",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": 1
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "ignore_eos",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "skip_special_tokens",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "stop_token_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "top_k",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer",
                        "default": -1
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "use_beam_search",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ChatCompletionResponse": {
        "name": "ChatCompletionResponse",
        "description": "An OpenAI API compatible schema for a chat completion response object.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "choices",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:ChatCompletionChoice"
                    }
                  }
                }
              },
              "description": "A list of chat completion choices.Can be more than one if n is greater than 1."
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The Unix timestamp (in seconds) of when the chat completion was created."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A unique identifier for the chat completion."
            },
            {
              "key": "model",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The model used for the chat completion."
            },
            {
              "key": "object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "usage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_text-gen:UsageStats"
                }
              },
              "description": "Usage statistics for the completion request."
            }
          ]
        }
      },
      "type_text-gen:ChatCompletionResponseFormat": {
        "name": "ChatCompletionResponseFormat",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "schema",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ChatMessage": {
        "name": "ChatMessage",
        "description": "An OpenAI API compatible schema for a single ChatMessage.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The role of the author of this message."
            }
          ]
        }
      },
      "type_text-gen:CompletionChoice": {
        "name": "CompletionChoice",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "finish_reason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:FinishReason"
                    }
                  }
                }
              }
            },
            {
              "key": "index",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "logprobs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:Logprobs"
                    }
                  }
                }
              }
            },
            {
              "key": "text",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:CompletionResponse": {
        "name": "CompletionResponse",
        "description": "Represents a completion response from the API.\nNote: both the streamed and non-streamed response objects\nshare the same shape (unlike the chat endpoint).",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "choices",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:CompletionChoice"
                    }
                  }
                }
              }
            },
            {
              "key": "created",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The Unix timestamp (in seconds) of when the completion was created."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "model",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "system_fingerprint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "usage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:UsageStats"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ErrorResponseValidationErrorsValue": {
        "name": "ErrorResponseValidationErrorsValue",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ErrorResponse": {
        "name": "ErrorResponse",
        "description": "An OpenAI API compatible schema for a error response.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "default": "error"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "param",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "validation_errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_text-gen:ErrorResponseValidationErrorsValue"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:FinishReason": {
        "name": "FinishReason",
        "description": "The reason why the model stopped generating tokens.\n\nThis will be `stop` if the model naturally completed generation or encountered a\nprovided stop sequence, `length` if the maximum number of tokens specified in the\nrequest was reached, content_filter if content was omitted due to a flag from our\ncontent filters, tool_calls if the model called a tool, or function_call\n(deprecated) if the model called a function.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "stop"
            },
            {
              "value": "length"
            },
            {
              "value": "tool_calls"
            },
            {
              "value": "content_filter"
            },
            {
              "value": "function_call"
            },
            {
              "value": "cancelled"
            }
          ]
        }
      },
      "type_text-gen:FunctionCall": {
        "name": "FunctionCall",
        "description": "The representation of a function called during tool use.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "arguments",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The arguments to the function call."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The name of the function to call."
            }
          ]
        }
      },
      "type_text-gen:HTTPValidationError": {
        "name": "HTTPValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "detail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_text-gen:ValidationError"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:Logprobs": {
        "name": "Logprobs",
        "description": "An OpenAI API compatible schema for logprobs output.\nSee details in https://platform.openai.com/docs/api-reference/chat/object#chat-create-logprobs",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_text-gen:LogprobsContent"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "List of logprobs info"
            }
          ]
        }
      },
      "type_text-gen:LogprobsContent": {
        "name": "LogprobsContent",
        "description": "An OpenAI API compatible schema for logprobs output.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bytes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "logprob",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "Logprob corresponding to the token"
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "New generated token or token from prompt for loglikelihood case"
            },
            {
              "key": "top_logprobs",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_text-gen:TopLogprobs"
                        }
                      }
                    }
                  }
                }
              },
              "description": "List of top tokens info"
            }
          ]
        }
      },
      "type_text-gen:StreamOptions": {
        "name": "StreamOptions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "include_usage",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not to include token usage stats on the final chunk before the [Done] message."
            }
          ]
        }
      },
      "type_text-gen:ToolCall": {
        "name": "ToolCall",
        "description": "An OpenAI API compatible schema for a tool invocation.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_text-gen:FunctionCall"
                }
              },
              "description": "The function called by the model."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A unique ID for the tool call used to reference it in the response."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:TopLogprobs": {
        "name": "TopLogprobs",
        "description": "An OpenAI API compatible schema for logprobs output.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bytes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "logprob",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "Logprob corresponding to the top token"
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Token from the top list"
            }
          ]
        }
      },
      "type_text-gen:UsageStats": {
        "name": "UsageStats",
        "description": "The token usage statistics for a request.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "completion_tokens",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Number of tokens in the prompt."
            },
            {
              "key": "prompt_tokens",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Number of tokens in the prompt."
            },
            {
              "key": "total_tokens",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Total number of tokens used in the request (prompt + completion)."
            }
          ]
        }
      },
      "type_text-gen:ValidationErrorLocItem": {
        "name": "ValidationErrorLocItem",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "shape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_text-gen:ValidationError": {
        "name": "ValidationError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "loc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_text-gen:ValidationErrorLocItem"
                    }
                  }
                }
              }
            },
            {
              "key": "msg",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_asset-library": {
        "id": "subpackage_asset-library",
        "name": "asset-library"
      },
      "subpackage_fine-tuning": {
        "id": "subpackage_fine-tuning",
        "name": "fine-tuning"
      },
      "subpackage_image-gen": {
        "id": "subpackage_image-gen",
        "name": "image-gen"
      },
      "subpackage_text-gen": {
        "id": "subpackage_text-gen",
        "name": "text-gen"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "api_key"
      }
    }
  }
]