[
  {
    "id": "12db1278-2c20-48ce-a475-512268587c8b",
    "endpoints": {
      "endpoint_copilots.createCopilot": {
        "id": "endpoint_copilots.createCopilot",
        "namespace": [
          "subpackage_copilots"
        ],
        "description": "Create a new copilot. The API key used will be added to the copilot for future Requests",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/copilots"
          },
          {
            "type": "literal",
            "value": "/createCopilot"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "A descriptive name for the copilot.\n"
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "An in depth name for the copilot's function. Useful for routing requests to the right copilot.\n"
              },
              {
                "key": "collaborators",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_common:Collaborator"
                      }
                    }
                  }
                },
                "description": "A list of collaborator emails and roles that will have access to the copilot.\n"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_copilots:CreateCopilotResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/copilots/createCopilot",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Customer Copilot",
                "description": "This copilot is used to answer customer requests based on internal documentation.",
                "collaborators": [
                  {
                    "email": "test@gmail.com",
                    "role": "editor"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "agentId": "ac20e6ba-0bae-11ef-b25a-efca73df4c3a"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/copilots/createCopilot \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Customer Copilot\",\n  \"description\": \"This copilot is used to answer customer requests based on internal documentation.\",\n  \"collaborators\": [\n    {\n      \"email\": \"test@gmail.com\",\n      \"role\": \"editor\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from credal import Collaborator\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.copilots.create_copilot(\n    name=\"Customer Copilot\",\n    description=\"This copilot is used to answer customer requests based on internal documentation.\",\n    collaborators=[\n        Collaborator(\n            email=\"test@gmail.com\",\n            role=\"editor\",\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient, Credal } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.copilots.createCopilot({\n    name: \"Customer Copilot\",\n    description: \"This copilot is used to answer customer requests based on internal documentation.\",\n    collaborators: [{\n            email: \"test@gmail.com\",\n            role: Credal.Role.Editor\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_copilots.createConversation": {
        "id": "endpoint_copilots.createConversation",
        "namespace": [
          "subpackage_copilots"
        ],
        "description": "OPTIONAL. Create a new conversation with the Copilot. The conversation ID can be used in the `sendMessage` endpoint. The `sendMessage` endpoint automatically creates new conversations upon first request, but calling this endpoint can simplify certain use cases where it is helpful for the application to have the conversation ID before the first message is sent.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/copilots"
          },
          {
            "type": "literal",
            "value": "/createConversation"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "agentId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Credal-generated Copilot ID to specify which agent to route the request to.\n"
              },
              {
                "key": "userEmail",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "End-user for the conversation.\n"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_copilots:CreateConversationResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/copilots/createConversation",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "agentId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "userEmail": "ravin@credal.ai"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "conversationId": "ac20e6ba-0bae-11ef-b25a-efca73df4c3a"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/copilots/createConversation \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"agentId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"userEmail\": \"ravin@credal.ai\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.copilots.create_conversation(\n    agent_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    user_email=\"ravin@credal.ai\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.copilots.createConversation({\n    agentId: \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    userEmail: \"ravin@credal.ai\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_copilots.provideMessageFeedback": {
        "id": "endpoint_copilots.provideMessageFeedback",
        "namespace": [
          "subpackage_copilots"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/copilots"
          },
          {
            "type": "literal",
            "value": "/provideMessageFeedback"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "agentId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Credal-generated Copilot ID to specify which agent to route the request to.\n"
              },
              {
                "key": "userEmail",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The user profile you want to use when providing feedback.\n"
              },
              {
                "key": "messageId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "The message ID for which feedback is being provided.\n"
              },
              {
                "key": "messageFeedback",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_copilots:MessageFeedback"
                  }
                },
                "description": "The feedback provided by the user.\n"
              }
            ]
          }
        },
        "examples": [
          {
            "path": "/v0/copilots/provideMessageFeedback",
            "responseStatusCode": 204,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "agentId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "userEmail": "ravin@credal.ai",
                "messageId": "dd721cd8-4bf2-4b94-9869-258df3dab9dc",
                "messageFeedback": {
                  "feedback": "NEGATIVE",
                  "suggestedAnswer": "Yes, Credal is SOC 2 compliant."
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/copilots/provideMessageFeedback \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"agentId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"userEmail\": \"ravin@credal.ai\",\n  \"messageId\": \"dd721cd8-4bf2-4b94-9869-258df3dab9dc\",\n  \"messageFeedback\": {\n    \"feedback\": \"NEGATIVE\",\n    \"suggestedAnswer\": \"Yes, Credal is SOC 2 compliant.\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import MessageFeedback\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.copilots.provide_message_feedback(\n    user_email=\"ravin@credal.ai\",\n    message_id=uuid.UUID(\n        \"dd721cd8-4bf2-4b94-9869-258df3dab9dc\",\n    ),\n    agent_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    message_feedback=MessageFeedback(\n        feedback=\"NEGATIVE\",\n        suggested_answer=\"Yes, Credal is SOC 2 compliant.\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient, Credal } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.copilots.provideMessageFeedback({\n    userEmail: \"ravin@credal.ai\",\n    messageId: \"dd721cd8-4bf2-4b94-9869-258df3dab9dc\",\n    agentId: \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    messageFeedback: {\n        feedback: Credal.FeedbackEnum.Negative,\n        suggestedAnswer: \"Yes, Credal is SOC 2 compliant.\"\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_copilots.sendMessage": {
        "id": "endpoint_copilots.sendMessage",
        "namespace": [
          "subpackage_copilots"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/copilots"
          },
          {
            "type": "literal",
            "value": "/sendMessage"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "agentId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Credal-generated Copilot ID to specify which agent to route the request to.\n"
              },
              {
                "key": "message",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The message you want to send to your copilot.\n"
              },
              {
                "key": "userEmail",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The user profile you want to use when sending the message.\n"
              },
              {
                "key": "conversationId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "uuid"
                        }
                      }
                    }
                  }
                },
                "description": "Credal-generated conversation ID for sending follow up messages. Conversation ID is returned after initial message. Optional, to be left off for first messages on new conversations.\n"
              },
              {
                "key": "inputVariables",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_copilots:InputVariable"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Optional input variables to be used in the message. Map the name of the variable to a list of urls.\n",
                "availability": "Beta"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_copilots:SendAgentMessageResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/copilots/sendMessage",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "agentId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "message": "Is Credal SOC 2 compliant?",
                "userEmail": "ravin@credal.ai",
                "inputVariables": [
                  {
                    "name": "input1",
                    "urls": [
                      "https://drive.google.com/file/d/123456/view"
                    ]
                  },
                  {
                    "name": "input2",
                    "urls": [
                      "https://drive.google.com/file/d/123457/view",
                      "https://drive.google.com/file/d/123458/view"
                    ]
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "sendChatResult": {
                  "type": "ai_response_result",
                  "conversationId": "fc938005-92db-411a-88eb-32ca50d5f744",
                  "inserted_audit_log": {
                    "id": "5842804e-ffbe-4f8d-873e-f007fff93440"
                  },
                  "messageId": "dd721cd8-4bf2-4b94-9869-258df3dab9dc",
                  "policy_triggers": [],
                  "referencedSources": [
                    {
                      "id": "1",
                      "externalResourceId": {
                        "externalResourceId": "123456",
                        "resourceType": "GOOGLE_DRIVE_ITEM"
                      },
                      "name": "Example Document",
                      "url": "https://drive.google.com/file/d/123456/view"
                    }
                  ],
                  "response": {
                    "message": "Based on the context provided, Credal is SOC 2 compliant...",
                    "dataChunk": "...SOC 2 is a technical audit that requires companies to establish and follow strict information security policies and procedures. Credal's SOC 2 report is available upon request..."
                  },
                  "sourcesInDataContext": [
                    {
                      "id": "1",
                      "externalResourceId": {
                        "externalResourceId": "123456",
                        "resourceType": "GOOGLE_DRIVE_ITEM"
                      },
                      "name": "Example Document",
                      "url": "https://drive.google.com/file/d/123456/view"
                    },
                    {
                      "id": "2",
                      "externalResourceId": {
                        "externalResourceId": "123457",
                        "resourceType": "GOOGLE_DRIVE_ITEM"
                      },
                      "name": "Example Document 2",
                      "url": "https://drive.google.com/file/d/123457/view"
                    }
                  ],
                  "warnings": [],
                  "webSearchResults": [
                    {
                      "title": "SOC 2 Compliance",
                      "url": "https://www.credal.ai/soc2",
                      "content": "Credal is SOC 2 compliant. Learn more about SOC 2 compliance at Credal."
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/copilots/sendMessage \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"agentId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"message\": \"Is Credal SOC 2 compliant?\",\n  \"userEmail\": \"ravin@credal.ai\",\n  \"inputVariables\": [\n    {\n      \"name\": \"input1\",\n      \"urls\": [\n        \"https://drive.google.com/file/d/123456/view\"\n      ]\n    },\n    {\n      \"name\": \"input2\",\n      \"urls\": [\n        \"https://drive.google.com/file/d/123457/view\",\n        \"https://drive.google.com/file/d/123458/view\"\n      ]\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import InputVariable\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.copilots.send_message(\n    agent_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    message=\"Is Credal SOC 2 compliant?\",\n    user_email=\"ravin@credal.ai\",\n    input_variables=[\n        InputVariable(\n            name=\"input1\",\n            urls=[\"https://drive.google.com/file/d/123456/view\"],\n        ),\n        InputVariable(\n            name=\"input2\",\n            urls=[\n                \"https://drive.google.com/file/d/123457/view\",\n                \"https://drive.google.com/file/d/123458/view\",\n            ],\n        ),\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.copilots.sendMessage({\n    agentId: \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    message: \"Is Credal SOC 2 compliant?\",\n    userEmail: \"ravin@credal.ai\",\n    inputVariables: [{\n            name: \"input1\",\n            urls: [\"https://drive.google.com/file/d/123456/view\"]\n        }, {\n            name: \"input2\",\n            urls: [\"https://drive.google.com/file/d/123457/view\", \"https://drive.google.com/file/d/123458/view\"]\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_copilots.streamMessage": {
        "id": "endpoint_copilots.streamMessage",
        "namespace": [
          "subpackage_copilots"
        ],
        "description": "This endpoint allows you to send a message to a specific copilot and get the response back as a streamed set of Server-Sent Events.",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/copilots"
          },
          {
            "type": "literal",
            "value": "/streamMessage"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "copilotId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Credal-generated Copilot ID to specify which agent to route the request to.\n"
              },
              {
                "key": "message",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The message you want to send to your copilot.\n"
              },
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The user profile you want to use when sending the message.\n"
              },
              {
                "key": "conversationId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "uuid"
                        }
                      }
                    }
                  }
                },
                "description": "Credal-generated conversation ID for sending follow up messages. Conversation ID is returned after initial message. Optional, to be left off for first messages on new conversations.\n"
              },
              {
                "key": "inputVariables",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_copilots:InputVariable"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Optional input variables to be used in the message. Map the name of the variable to a list of urls.\n",
                "availability": "Beta"
              }
            ]
          }
        },
        "response": {
          "description": "This endpoint returns a stream of server sent events. These can be in two formats - one is an initial event, followed by multiple data chunks, followed by a final chunk, or the other format is just one blocked event. See the examples for more details.\n",
          "statusCode": 200,
          "body": {
            "type": "stream",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_copilots:StreamingChunk"
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v0/copilots/streamMessage",
            "responseStatusCode": 200,
            "name": "Example Success",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "copilotId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "message": "Is Credal SOC 2 compliant?",
                "email": "ravin@credal.ai",
                "inputVariables": [
                  {
                    "name": "input1",
                    "urls": [
                      "https://drive.google.com/file/d/123456/view"
                    ]
                  },
                  {
                    "name": "input2",
                    "urls": [
                      "https://drive.google.com/file/d/123457/view",
                      "https://drive.google.com/file/d/123458/view"
                    ]
                  }
                ]
              }
            },
            "responseBody": {
              "type": "sse",
              "value": [
                {
                  "event": "initial",
                  "data": {
                    "conversationId": "fc938005-92db-411a-88eb-32ca50d5f744",
                    "webSearchResults": [
                      {
                        "title": "SOC 2 Compliance",
                        "url": "https://www.credal.ai/soc2",
                        "content": "Credal is SOC 2 compliant. Learn more about SOC 2 compliance at Credal."
                      }
                    ],
                    "warnings": []
                  }
                },
                {
                  "event": "data_chunk",
                  "data": {
                    "chunk": "Based on"
                  }
                },
                {
                  "event": "data_chunk",
                  "data": {
                    "chunk": "the context provided,"
                  }
                },
                {
                  "event": "data_chunk",
                  "data": {
                    "chunk": "Credal is SOC 2 compliant."
                  }
                },
                {
                  "event": "final_chunk",
                  "data": {
                    "referencedSources": [
                      {
                        "id": "1",
                        "externalResourceId": {
                          "externalResourceId": "123456",
                          "resourceType": "GOOGLE_DRIVE_ITEM"
                        },
                        "name": "Example Document",
                        "url": "https://drive.google.com/file/d/123456/view"
                      }
                    ]
                  }
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/copilots/streamMessage \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"copilotId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"message\": \"Is Credal SOC 2 compliant?\",\n  \"email\": \"ravin@credal.ai\",\n  \"inputVariables\": [\n    {\n      \"name\": \"input1\",\n      \"urls\": [\n        \"https://drive.google.com/file/d/123456/view\"\n      ]\n    },\n    {\n      \"name\": \"input2\",\n      \"urls\": [\n        \"https://drive.google.com/file/d/123457/view\",\n        \"https://drive.google.com/file/d/123458/view\"\n      ]\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import InputVariable\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nresponse = client.copilots.stream_message(\n    copilot_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    message=\"Is Credal SOC 2 compliant?\",\n    email=\"ravin@credal.ai\",\n    input_variables=[\n        InputVariable(\n            name=\"input1\",\n            urls=[\"https://drive.google.com/file/d/123456/view\"],\n        ),\n        InputVariable(\n            name=\"input2\",\n            urls=[\n                \"https://drive.google.com/file/d/123457/view\",\n                \"https://drive.google.com/file/d/123458/view\",\n            ],\n        ),\n    ],\n)\nfor chunk in response:\n    yield chunk\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/v0/copilots/streamMessage",
            "responseStatusCode": 200,
            "name": "Example Blocked",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "copilotId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "message": "Is this user eligible for benefits based on their date of birth?",
                "email": "ravin@credal.ai",
                "inputVariables": [
                  {
                    "name": "input1",
                    "urls": [
                      "https://drive.google.com/file/d/123456/view"
                    ]
                  },
                  {
                    "name": "input2",
                    "urls": [
                      "https://drive.google.com/file/d/123457/view",
                      "https://drive.google.com/file/d/123458/view"
                    ]
                  }
                ]
              }
            },
            "responseBody": {
              "type": "sse",
              "value": [
                {
                  "event": "blocked",
                  "data": {
                    "conversationId": "fc938005-92db-411a-88eb-32ca50d5f744",
                    "policyTriggers": [],
                    "warnings": [],
                    "blocks": [
                      "This request contains PII"
                    ]
                  }
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/copilots/streamMessage \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"copilotId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"message\": \"Is this user eligible for benefits based on their date of birth?\",\n  \"email\": \"ravin@credal.ai\",\n  \"inputVariables\": [\n    {\n      \"name\": \"input1\",\n      \"urls\": [\n        \"https://drive.google.com/file/d/123456/view\"\n      ]\n    },\n    {\n      \"name\": \"input2\",\n      \"urls\": [\n        \"https://drive.google.com/file/d/123457/view\",\n        \"https://drive.google.com/file/d/123458/view\"\n      ]\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import InputVariable\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nresponse = client.copilots.stream_message(\n    copilot_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    message=\"Is this user eligible for benefits based on their date of birth?\",\n    email=\"ravin@credal.ai\",\n    input_variables=[\n        InputVariable(\n            name=\"input1\",\n            urls=[\"https://drive.google.com/file/d/123456/view\"],\n        ),\n        InputVariable(\n            name=\"input2\",\n            urls=[\n                \"https://drive.google.com/file/d/123457/view\",\n                \"https://drive.google.com/file/d/123458/view\",\n            ],\n        ),\n    ],\n)\nfor chunk in response:\n    yield chunk\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_copilots.addCollectionToCopilot": {
        "id": "endpoint_copilots.addCollectionToCopilot",
        "namespace": [
          "subpackage_copilots"
        ],
        "description": "Link a collection with a copilot. The API Key used must be added to both the collection and the copilot beforehand.",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/copilots"
          },
          {
            "type": "literal",
            "value": "/addCollectionToCopilot"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "copilotId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Credal-generated copilot ID to add the collection to.\n"
              },
              {
                "key": "collectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Credal-generated collection ID to add.\n"
              }
            ]
          }
        },
        "examples": [
          {
            "path": "/v0/copilots/addCollectionToCopilot",
            "responseStatusCode": 204,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "copilotId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "collectionId": "def1055f-83c5-43d6-b558-f7a38e7b299e"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/copilots/addCollectionToCopilot \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"copilotId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"collectionId\": \"def1055f-83c5-43d6-b558-f7a38e7b299e\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.copilots.add_collection_to_copilot(\n    copilot_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    collection_id=uuid.UUID(\n        \"def1055f-83c5-43d6-b558-f7a38e7b299e\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.copilots.addCollectionToCopilot({\n    copilotId: \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    collectionId: \"def1055f-83c5-43d6-b558-f7a38e7b299e\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_copilots.removeCollectionFromCopilot": {
        "id": "endpoint_copilots.removeCollectionFromCopilot",
        "namespace": [
          "subpackage_copilots"
        ],
        "description": "Unlink a collection with a copilot. The API Key used must be added to both the collection and the copilot beforehand.",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/copilots"
          },
          {
            "type": "literal",
            "value": "/removeCollectionFromCopilot"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "copilotId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Credal-generated copilot ID to add the collection to.\n"
              },
              {
                "key": "collectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Credal-generated collection ID to add.\n"
              }
            ]
          }
        },
        "examples": [
          {
            "path": "/v0/copilots/removeCollectionFromCopilot",
            "responseStatusCode": 204,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "copilotId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "collectionId": "def1055f-83c5-43d6-b558-f7a38e7b299e"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/copilots/removeCollectionFromCopilot \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"copilotId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"collectionId\": \"def1055f-83c5-43d6-b558-f7a38e7b299e\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.copilots.remove_collection_from_copilot(\n    copilot_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    collection_id=uuid.UUID(\n        \"def1055f-83c5-43d6-b558-f7a38e7b299e\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.copilots.removeCollectionFromCopilot({\n    copilotId: \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    collectionId: \"def1055f-83c5-43d6-b558-f7a38e7b299e\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_copilots.updateConfiguration": {
        "id": "endpoint_copilots.updateConfiguration",
        "namespace": [
          "subpackage_copilots"
        ],
        "description": "Update the configuration for a copilot",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/copilots"
          },
          {
            "type": "literal",
            "value": "/updateConfiguration"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "copilotId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Credal-generated copilot ID to add the collection to.\n"
              },
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_copilots:Configuration"
                  }
                }
              }
            ]
          }
        },
        "examples": [
          {
            "path": "/v0/copilots/updateConfiguration",
            "responseStatusCode": 204,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "copilotId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "configuration": {
                  "aiEndpointConfiguration": {
                    "baseUrl": "https://api.openai.com/v1/",
                    "apiKey": "<YOUR_API_KEY_HERE>"
                  },
                  "name": "Customer Copilot",
                  "description": "This copilot is used to answer customer requests based on internal documentation.",
                  "prompt": "You are a polite, helpful assistant used to answer customer requests."
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/copilots/updateConfiguration \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"copilotId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"configuration\": {\n    \"aiEndpointConfiguration\": {\n      \"baseUrl\": \"https://api.openai.com/v1/\",\n      \"apiKey\": \"<YOUR_API_KEY_HERE>\"\n    },\n    \"name\": \"Customer Copilot\",\n    \"description\": \"This copilot is used to answer customer requests based on internal documentation.\",\n    \"prompt\": \"You are a polite, helpful assistant used to answer customer requests.\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import AiEndpointConfiguration, Configuration\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.copilots.update_configuration(\n    copilot_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    configuration=Configuration(\n        name=\"Customer Copilot\",\n        description=\"This copilot is used to answer customer requests based on internal documentation.\",\n        prompt=\"You are a polite, helpful assistant used to answer customer requests.\",\n        ai_endpoint_configuration=AiEndpointConfiguration(\n            base_url=\"https://api.openai.com/v1/\",\n            api_key=\"<YOUR_API_KEY_HERE>\",\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.copilots.updateConfiguration({\n    copilotId: \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    configuration: {\n        name: \"Customer Copilot\",\n        description: \"This copilot is used to answer customer requests based on internal documentation.\",\n        prompt: \"You are a polite, helpful assistant used to answer customer requests.\",\n        aiEndpointConfiguration: {\n            baseUrl: \"https://api.openai.com/v1/\",\n            apiKey: \"<YOUR_API_KEY_HERE>\"\n        }\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_copilots.deleteCopilot": {
        "id": "endpoint_copilots.deleteCopilot",
        "namespace": [
          "subpackage_copilots"
        ],
        "availability": "Beta",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/v0/copilots"
          },
          {
            "type": "literal",
            "value": "/deleteCopilot"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "Copilot ID"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_copilots:DeleteCopilotResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/copilots/deleteCopilot",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "id": "ac20e6ba-0bae-11ef-b25a-efca73df4c3a"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "copilotId": "ac20e6ba-0bae-11ef-b25a-efca73df4c3a"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.credal.ai/api/v0/copilots/deleteCopilot \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"id\": \"ac20e6ba-0bae-11ef-b25a-efca73df4c3a\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.copilots.delete_copilot(\n    id=uuid.UUID(\n        \"ac20e6ba-0bae-11ef-b25a-efca73df4c3a\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.copilots.deleteCopilot({\n    id: \"ac20e6ba-0bae-11ef-b25a-efca73df4c3a\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documentCatalog.uploadDocumentContents": {
        "id": "endpoint_documentCatalog.uploadDocumentContents",
        "namespace": [
          "subpackage_documentCatalog"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/catalog"
          },
          {
            "type": "literal",
            "value": "/uploadDocumentContents"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "documentName",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The name of the document you want to upload.\n"
              },
              {
                "key": "documentContents",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The full LLM-formatted text contents of the document you want to upload.\n"
              },
              {
                "key": "allowedUsersEmailAddresses",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Users allowed to access the document. Unlike Credal's out of the box connectors which reconcile various permissions models from 3rd party software, for custom uploads the caller is responsible for specifying who can access the document and currently flattening groups if applicable. Documents can also be marked as internal public.\n"
              },
              {
                "key": "uploadAsUserEmail",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "[Legacy] The user on behalf of whom the document should be uploaded. In most cases, this can simply be the email of the developer making the API call. This field will be removed in the future in favor of purely specifying permissions via allowedUsersEmailAddresses.\n"
              },
              {
                "key": "documentExternalId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The external ID of the document. This is typically the ID as it exists in its original external system. Uploads to the same external ID will update the document in Credal.\n"
              },
              {
                "key": "documentExternalUrl",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The external URL of the document you want to upload. If provided Credal will link to this URL.\n"
              },
              {
                "key": "customMetadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "unknown"
                      }
                    }
                  }
                },
                "description": "Optional JSON representing any custom metdata for this document\n"
              },
              {
                "key": "collectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "If specified, document will also be added to a particular document collection\n"
              },
              {
                "key": "forceUpdate",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "If specified, document contents will be re-uploaded and re-embedded even if the document already exists in Credal\n"
              },
              {
                "key": "internalPublic",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "If specified, document will be accessible to everyone within the organization of the uploader\n"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documentCatalog:UploadDocumentResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/catalog/uploadDocumentContents",
            "responseStatusCode": 200,
            "name": "Example1",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "documentName": "My Document",
                "documentContents": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                "allowedUsersEmailAddresses": [
                  "jack@credal.ai",
                  "ravin@credal.ai"
                ],
                "uploadAsUserEmail": "jack@credal.ai",
                "documentExternalId": "73eead26-d124-4940-b329-5f068a0a8db9"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "documentId": "82e4b12a-6990-45d4-8ebd-85c00e030c24"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/catalog/uploadDocumentContents \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"documentName\": \"My Document\",\n  \"documentContents\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n  \"allowedUsersEmailAddresses\": [\n    \"jack@credal.ai\",\n    \"ravin@credal.ai\"\n  ],\n  \"uploadAsUserEmail\": \"jack@credal.ai\",\n  \"documentExternalId\": \"73eead26-d124-4940-b329-5f068a0a8db9\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.document_catalog.upload_document_contents(\n    document_name=\"My Document\",\n    document_contents=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n    document_external_id=\"73eead26-d124-4940-b329-5f068a0a8db9\",\n    allowed_users_email_addresses=[\"jack@credal.ai\", \"ravin@credal.ai\"],\n    upload_as_user_email=\"jack@credal.ai\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.documentCatalog.uploadDocumentContents({\n    documentName: \"My Document\",\n    documentContents: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n    documentExternalId: \"73eead26-d124-4940-b329-5f068a0a8db9\",\n    allowedUsersEmailAddresses: [\"jack@credal.ai\", \"ravin@credal.ai\"],\n    uploadAsUserEmail: \"jack@credal.ai\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documentCatalog.metadata": {
        "id": "endpoint_documentCatalog.metadata",
        "namespace": [
          "subpackage_documentCatalog"
        ],
        "description": "Bulk patch metadata for documents, synced natively by Credal or manual API uploads",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/v0/catalog"
          },
          {
            "type": "literal",
            "value": "/metadata"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documentCatalog:DocumentMetadataPatchRequest"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/catalog/metadata",
            "responseStatusCode": 204,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "sources": [
                  {
                    "resourceIdentifier": {
                      "type": "external-resource-id",
                      "externalResourceId": "170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr",
                      "resourceType": "GOOGLE_DRIVE_ITEM"
                    },
                    "metadata": {
                      "Department": "HR",
                      "Country": "United States"
                    }
                  },
                  {
                    "resourceIdentifier": {
                      "type": "external-resource-id",
                      "externalResourceId": "123456",
                      "resourceType": "ZENDESK_TICKET"
                    },
                    "metadata": {
                      "Department": "Sales",
                      "Vertical": "Healthcare"
                    }
                  }
                ],
                "uploadAsUserEmail": "ben@credal.ai"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.credal.ai/api/v0/catalog/metadata \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"sources\": [\n    {\n      \"resourceIdentifier\": {\n        \"type\": \"external-resource-id\",\n        \"externalResourceId\": \"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n        \"resourceType\": \"GOOGLE_DRIVE_ITEM\"\n      },\n      \"metadata\": {\n        \"Department\": \"HR\",\n        \"Country\": \"United States\"\n      }\n    },\n    {\n      \"resourceIdentifier\": {\n        \"type\": \"external-resource-id\",\n        \"externalResourceId\": \"123456\",\n        \"resourceType\": \"ZENDESK_TICKET\"\n      },\n      \"metadata\": {\n        \"Department\": \"Sales\",\n        \"Vertical\": \"Healthcare\"\n      }\n    }\n  ],\n  \"uploadAsUserEmail\": \"ben@credal.ai\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from credal import DocumentMetadataPatch, ResourceIdentifier_ExternalResourceId\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.document_catalog.metadata(\n    sources=[\n        DocumentMetadataPatch(\n            metadata={\"Department\": \"HR\", \"Country\": \"United States\"},\n            resource_identifier=ResourceIdentifier_ExternalResourceId(\n                external_resource_id=\"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n                resource_type=\"GOOGLE_DRIVE_ITEM\",\n            ),\n        ),\n        DocumentMetadataPatch(\n            metadata={\"Department\": \"Sales\", \"Vertical\": \"Healthcare\"},\n            resource_identifier=ResourceIdentifier_ExternalResourceId(\n                external_resource_id=\"123456\",\n                resource_type=\"ZENDESK_TICKET\",\n            ),\n        ),\n    ],\n    upload_as_user_email=\"ben@credal.ai\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient, Credal } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.documentCatalog.metadata({\n    sources: [{\n            metadata: {\n                \"Department\": \"HR\",\n                \"Country\": \"United States\"\n            },\n            resourceIdentifier: {\n                type: \"external-resource-id\",\n                externalResourceId: \"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n                resourceType: Credal.ResourceType.GoogleDriveItem\n            }\n        }, {\n            metadata: {\n                \"Department\": \"Sales\",\n                \"Vertical\": \"Healthcare\"\n            },\n            resourceIdentifier: {\n                type: \"external-resource-id\",\n                externalResourceId: \"123456\",\n                resourceType: Credal.ResourceType.ZendeskTicket\n            }\n        }],\n    uploadAsUserEmail: \"ben@credal.ai\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documentCollections.addDocumentsToCollection": {
        "id": "endpoint_documentCollections.addDocumentsToCollection",
        "namespace": [
          "subpackage_documentCollections"
        ],
        "description": "Add documents to a document collection. Note that the documents must already exist in the document catalog to use this endpoint. If you want to upload a new document to a collection, use the `uploadDocumentContents` endpoint.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/documentCollections"
          },
          {
            "type": "literal",
            "value": "/addDocumentsToCollection"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "collectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "The ID of the document collection you want to add to."
              },
              {
                "key": "resourceIdentifiers",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_common:ResourceIdentifier"
                      }
                    }
                  }
                },
                "description": "The set of resource identifier for which you want to add to the collection.\n"
              }
            ]
          }
        },
        "examples": [
          {
            "path": "/v0/documentCollections/addDocumentsToCollection",
            "responseStatusCode": 204,
            "name": "addDocumentsToCollectionExample",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "collectionId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "resourceIdentifiers": [
                  {
                    "type": "external-resource-id",
                    "externalResourceId": "170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr",
                    "resourceType": "GOOGLE_DRIVE_ITEM"
                  },
                  {
                    "type": "external-resource-id",
                    "externalResourceId": "398KAHdfkjsdf09r54UvyslPVWkQFOA0lOiu34in923",
                    "resourceType": "GOOGLE_DRIVE_ITEM"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/documentCollections/addDocumentsToCollection \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"collectionId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"resourceIdentifiers\": [\n    {\n      \"type\": \"external-resource-id\",\n      \"externalResourceId\": \"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n      \"resourceType\": \"GOOGLE_DRIVE_ITEM\"\n    },\n    {\n      \"type\": \"external-resource-id\",\n      \"externalResourceId\": \"398KAHdfkjsdf09r54UvyslPVWkQFOA0lOiu34in923\",\n      \"resourceType\": \"GOOGLE_DRIVE_ITEM\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import ResourceIdentifier_ExternalResourceId\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.document_collections.add_documents_to_collection(\n    collection_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    resource_identifiers=[\n        ResourceIdentifier_ExternalResourceId(\n            external_resource_id=\"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n            resource_type=\"GOOGLE_DRIVE_ITEM\",\n        ),\n        ResourceIdentifier_ExternalResourceId(\n            external_resource_id=\"398KAHdfkjsdf09r54UvyslPVWkQFOA0lOiu34in923\",\n            resource_type=\"GOOGLE_DRIVE_ITEM\",\n        ),\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient, Credal } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.documentCollections.addDocumentsToCollection({\n    collectionId: \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    resourceIdentifiers: [{\n            type: \"external-resource-id\",\n            externalResourceId: \"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n            resourceType: Credal.ResourceType.GoogleDriveItem\n        }, {\n            type: \"external-resource-id\",\n            externalResourceId: \"398KAHdfkjsdf09r54UvyslPVWkQFOA0lOiu34in923\",\n            resourceType: Credal.ResourceType.GoogleDriveItem\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documentCollections.removeDocumentsFromCollection": {
        "id": "endpoint_documentCollections.removeDocumentsFromCollection",
        "namespace": [
          "subpackage_documentCollections"
        ],
        "description": "Remove documents from a collection",
        "availability": "Beta",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/v0/documentCollections"
          },
          {
            "type": "literal",
            "value": "/removeDocumentsFromCollection"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "collectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                },
                "description": "The ID of the document collection you want to add to."
              },
              {
                "key": "resourceIdentifiers",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_common:ResourceIdentifier"
                      }
                    }
                  }
                },
                "description": "The set of resource identifier for which you want to remove from the collection\n"
              }
            ]
          }
        },
        "examples": [
          {
            "path": "/v0/documentCollections/removeDocumentsFromCollection",
            "responseStatusCode": 204,
            "name": "removeDocumentsFromCollectionExample",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "collectionId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "resourceIdentifiers": [
                  {
                    "type": "external-resource-id",
                    "externalResourceId": "170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr",
                    "resourceType": "GOOGLE_DRIVE_ITEM"
                  },
                  {
                    "type": "external-resource-id",
                    "externalResourceId": "398KAHdfkjsdf09r54UvyslPVWkQFOA0lOiu34in923",
                    "resourceType": "GOOGLE_DRIVE_ITEM"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.credal.ai/api/v0/documentCollections/removeDocumentsFromCollection \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"collectionId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"resourceIdentifiers\": [\n    {\n      \"type\": \"external-resource-id\",\n      \"externalResourceId\": \"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n      \"resourceType\": \"GOOGLE_DRIVE_ITEM\"\n    },\n    {\n      \"type\": \"external-resource-id\",\n      \"externalResourceId\": \"398KAHdfkjsdf09r54UvyslPVWkQFOA0lOiu34in923\",\n      \"resourceType\": \"GOOGLE_DRIVE_ITEM\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import ResourceIdentifier_ExternalResourceId\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.document_collections.remove_documents_from_collection(\n    collection_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    resource_identifiers=[\n        ResourceIdentifier_ExternalResourceId(\n            external_resource_id=\"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n            resource_type=\"GOOGLE_DRIVE_ITEM\",\n        ),\n        ResourceIdentifier_ExternalResourceId(\n            external_resource_id=\"398KAHdfkjsdf09r54UvyslPVWkQFOA0lOiu34in923\",\n            resource_type=\"GOOGLE_DRIVE_ITEM\",\n        ),\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient, Credal } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.documentCollections.removeDocumentsFromCollection({\n    collectionId: \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    resourceIdentifiers: [{\n            type: \"external-resource-id\",\n            externalResourceId: \"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n            resourceType: Credal.ResourceType.GoogleDriveItem\n        }, {\n            type: \"external-resource-id\",\n            externalResourceId: \"398KAHdfkjsdf09r54UvyslPVWkQFOA0lOiu34in923\",\n            resourceType: Credal.ResourceType.GoogleDriveItem\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documentCollections.createCollection": {
        "id": "endpoint_documentCollections.createCollection",
        "namespace": [
          "subpackage_documentCollections"
        ],
        "description": "Create a new copilot. The API key used will be added to the copilot for future Requests",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/documentCollections"
          },
          {
            "type": "literal",
            "value": "/createCollection"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "A descriptive name for the collection.\n"
              },
              {
                "key": "description",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "An in depth name for the copilot's function. Useful for routing requests to the right copilot.\n"
              },
              {
                "key": "collaborators",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_common:Collaborator"
                      }
                    }
                  }
                },
                "description": "A list of collaborator emails and roles that will have access to the copilot.\n"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documentCollections:CreateCollectionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/documentCollections/createCollection",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Customer Collection",
                "description": "This collection is used to answer customer requests based on internal documentation.",
                "collaborators": [
                  {
                    "email": "test@gmail.com",
                    "role": "editor"
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "collectionId": "ac20e6ba-0bae-11ef-b25a-efca73df4c3a"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/documentCollections/createCollection \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Customer Collection\",\n  \"description\": \"This collection is used to answer customer requests based on internal documentation.\",\n  \"collaborators\": [\n    {\n      \"email\": \"test@gmail.com\",\n      \"role\": \"editor\"\n    }\n  ]\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from credal import Collaborator\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.document_collections.create_collection(\n    name=\"Customer Collection\",\n    description=\"This collection is used to answer customer requests based on internal documentation.\",\n    collaborators=[\n        Collaborator(\n            email=\"test@gmail.com\",\n            role=\"editor\",\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient, Credal } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.documentCollections.createCollection({\n    name: \"Customer Collection\",\n    description: \"This collection is used to answer customer requests based on internal documentation.\",\n    collaborators: [{\n            email: \"test@gmail.com\",\n            role: Credal.Role.Editor\n        }]\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documentCollections.deleteCollection": {
        "id": "endpoint_documentCollections.deleteCollection",
        "namespace": [
          "subpackage_documentCollections"
        ],
        "description": "Delete the collection.",
        "availability": "Beta",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/v0/documentCollections"
          },
          {
            "type": "literal",
            "value": "/deleteCollection"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "collectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documentCollections:DeleteCollectionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/documentCollections/deleteCollection",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "collectionId": "ac20e6ba-0bae-11ef-b25a-efca73df4c3a"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "collectionId": "ac20e6ba-0bae-11ef-b25a-efca73df4c3a"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.credal.ai/api/v0/documentCollections/deleteCollection \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"collectionId\": \"ac20e6ba-0bae-11ef-b25a-efca73df4c3a\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.document_collections.delete_collection(\n    collection_id=uuid.UUID(\n        \"ac20e6ba-0bae-11ef-b25a-efca73df4c3a\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.documentCollections.deleteCollection({\n    collectionId: \"ac20e6ba-0bae-11ef-b25a-efca73df4c3a\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documentCollections.createMongoCollectionSync": {
        "id": "endpoint_documentCollections.createMongoCollectionSync",
        "namespace": [
          "subpackage_documentCollections"
        ],
        "description": "Credal lets you easily sync your MongoDB data for use in Collections and Copilots. Create a new sync from a MongoDB collection to a Credal collection.",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/documentCollections"
          },
          {
            "type": "literal",
            "value": "/mongodb/createMongoSync"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "collectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                }
              },
              {
                "key": "mongoURI",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "config",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_documentCollections:MongoCollectionSyncConfig"
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documentCollections:MongoCollectionSyncResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/documentCollections/mongodb/createMongoSync",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "collectionId": "ac20e6ba-0bae-11ef-b25a-efca73df4c3a",
                "mongoURI": "mongodb+srv://cluster0.hzwklqn.mongodb.net/Cluster0?retryWrites=true&w=majority",
                "config": {
                  "syncName": "My sales transcripts",
                  "collectionName": "myCollection",
                  "filterExpression": {
                    "status": {
                      "$ne": "disabled"
                    }
                  },
                  "sourceFields": {
                    "body": "body",
                    "sourceName": "meetingName",
                    "sourceSystemUpdated": "transcriptDatetime",
                    "sourceUrl": "link"
                  }
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "mongoCredentialId": "5988ed76-6ee1-11ef-97dd-1fca54b7c4bc",
                "resourceId": "mongo-collection-credal-sync-bfd82450-6c68-11ef-bb2b-f7176fe2f3c4",
                "syncLaunched": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/documentCollections/mongodb/createMongoSync \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"collectionId\": \"ac20e6ba-0bae-11ef-b25a-efca73df4c3a\",\n  \"mongoURI\": \"mongodb+srv://cluster0.hzwklqn.mongodb.net/Cluster0?retryWrites=true&w=majority\",\n  \"config\": {\n    \"syncName\": \"My sales transcripts\",\n    \"collectionName\": \"myCollection\",\n    \"filterExpression\": {\n      \"status\": {\n        \"$ne\": \"disabled\"\n      }\n    },\n    \"sourceFields\": {\n      \"body\": \"body\",\n      \"sourceName\": \"meetingName\",\n      \"sourceSystemUpdated\": \"transcriptDatetime\",\n      \"sourceUrl\": \"link\"\n    }\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import MongoCollectionSyncConfig, MongoSourceFieldsConfig\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.document_collections.create_mongo_collection_sync(\n    mongo_uri=\"mongodb+srv://cluster0.hzwklqn.mongodb.net/Cluster0?retryWrites=true&w=majority\",\n    collection_id=uuid.UUID(\n        \"ac20e6ba-0bae-11ef-b25a-efca73df4c3a\",\n    ),\n    config=MongoCollectionSyncConfig(\n        sync_name=\"My sales transcripts\",\n        collection_name=\"myCollection\",\n        filter_expression={\"status\": {\"$ne\": \"disabled\"}},\n        source_fields=MongoSourceFieldsConfig(\n            body=\"body\",\n            source_name=\"meetingName\",\n            source_system_updated=\"transcriptDatetime\",\n            source_url=\"link\",\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.documentCollections.createMongoCollectionSync({\n    mongoUri: \"mongodb+srv://cluster0.hzwklqn.mongodb.net/Cluster0?retryWrites=true&w=majority\",\n    collectionId: \"ac20e6ba-0bae-11ef-b25a-efca73df4c3a\",\n    config: {\n        syncName: \"My sales transcripts\",\n        collectionName: \"myCollection\",\n        filterExpression: {\n            \"status\": {\n                \"$ne\": \"disabled\"\n            }\n        },\n        sourceFields: {\n            body: \"body\",\n            sourceName: \"meetingName\",\n            sourceSystemUpdated: \"transcriptDatetime\",\n            sourceUrl: \"link\"\n        }\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_documentCollections.updateMongoCollectionSync": {
        "id": "endpoint_documentCollections.updateMongoCollectionSync",
        "namespace": [
          "subpackage_documentCollections"
        ],
        "description": "Credal lets you easily sync your MongoDB data for use in Collections and Copilots. Update an existing sync from a MongoDB collection to a Credal collection via the `mongoCredentialId`, to disambiguate between multiple potential syncs to a given collection.",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/documentCollections"
          },
          {
            "type": "literal",
            "value": "/mongodb/updateMongoSync"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "mongoCredentialId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                }
              },
              {
                "key": "mongoURI",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "config",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_documentCollections:MongoCollectionSyncConfig"
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_documentCollections:MongoCollectionSyncResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/documentCollections/mongodb/updateMongoSync",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "mongoCredentialId": "5988ed76-6ee1-11ef-97dd-1fca54b7c4bc",
                "mongoURI": "mongodb+srv://cluster0.hzwklqn.mongodb.net/Cluster0?retryWrites=true&w=majority",
                "config": {
                  "syncName": "My recent summarized sales transcripts",
                  "collectionName": "myCollection",
                  "filterExpression": {
                    "transcriptDatetime": {
                      "$gt": "2023-01-01T00:00:00.000Z"
                    }
                  },
                  "sourceFields": {
                    "body": "transcriptSummary",
                    "sourceName": "meetingName",
                    "sourceSystemUpdated": "transcriptDatetime",
                    "sourceUrl": "link"
                  }
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "mongoCredentialId": "5988ed76-6ee1-11ef-97dd-1fca54b7c4bc",
                "resourceId": "mongo-collection-credal-sync-bfd82450-6c68-11ef-bb2b-f7176fe2f3c4",
                "syncLaunched": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/documentCollections/mongodb/updateMongoSync \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mongoCredentialId\": \"5988ed76-6ee1-11ef-97dd-1fca54b7c4bc\",\n  \"mongoURI\": \"mongodb+srv://cluster0.hzwklqn.mongodb.net/Cluster0?retryWrites=true&w=majority\",\n  \"config\": {\n    \"syncName\": \"My recent summarized sales transcripts\",\n    \"collectionName\": \"myCollection\",\n    \"filterExpression\": {\n      \"transcriptDatetime\": {\n        \"$gt\": \"2023-01-01T00:00:00.000Z\"\n      }\n    },\n    \"sourceFields\": {\n      \"body\": \"transcriptSummary\",\n      \"sourceName\": \"meetingName\",\n      \"sourceSystemUpdated\": \"transcriptDatetime\",\n      \"sourceUrl\": \"link\"\n    }\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import MongoCollectionSyncConfig, MongoSourceFieldsConfig\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.document_collections.update_mongo_collection_sync(\n    mongo_uri=\"mongodb+srv://cluster0.hzwklqn.mongodb.net/Cluster0?retryWrites=true&w=majority\",\n    mongo_credential_id=uuid.UUID(\n        \"5988ed76-6ee1-11ef-97dd-1fca54b7c4bc\",\n    ),\n    config=MongoCollectionSyncConfig(\n        sync_name=\"My recent summarized sales transcripts\",\n        collection_name=\"myCollection\",\n        filter_expression={\n            \"transcriptDatetime\": {\"$gt\": \"2023-01-01T00:00:00.000Z\"}\n        },\n        source_fields=MongoSourceFieldsConfig(\n            body=\"transcriptSummary\",\n            source_name=\"meetingName\",\n            source_system_updated=\"transcriptDatetime\",\n            source_url=\"link\",\n        ),\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.documentCollections.updateMongoCollectionSync({\n    mongoUri: \"mongodb+srv://cluster0.hzwklqn.mongodb.net/Cluster0?retryWrites=true&w=majority\",\n    mongoCredentialId: \"5988ed76-6ee1-11ef-97dd-1fca54b7c4bc\",\n    config: {\n        syncName: \"My recent summarized sales transcripts\",\n        collectionName: \"myCollection\",\n        filterExpression: {\n            \"transcriptDatetime\": {\n                \"$gt\": \"2023-01-01T00:00:00.000Z\"\n            }\n        },\n        sourceFields: {\n            body: \"transcriptSummary\",\n            sourceName: \"meetingName\",\n            sourceSystemUpdated: \"transcriptDatetime\",\n            sourceUrl: \"link\"\n        }\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissionsService.checkResourceAuthorizationForUser": {
        "id": "endpoint_permissionsService.checkResourceAuthorizationForUser",
        "namespace": [
          "subpackage_permissionsService"
        ],
        "description": "Admin endpoint to check whether the specified user is authorized to read the specified resource.",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/permissions"
          },
          {
            "type": "literal",
            "value": "/checkResourceAuthorizationForUser"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "resourceIdentifier",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_common:ResourceIdentifier"
                  }
                },
                "description": "The resource identifier for which you want to check authorization.\n"
              },
              {
                "key": "userEmail",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The user email to check authorization for.\n"
              },
              {
                "key": "disableCache",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "If specified, Credal will bypass the permissions cache and check current permissions for this resource\n"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_permissionsService:CheckResourceAuthorizationResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/permissions/checkResourceAuthorizationForUser",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resourceIdentifier": {
                  "type": "external-resource-id",
                  "externalResourceId": "170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr",
                  "resourceType": "GOOGLE_DRIVE_ITEM"
                },
                "userEmail": "john.smith@foo.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "authorized": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/permissions/checkResourceAuthorizationForUser \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resourceIdentifier\": {\n    \"type\": \"external-resource-id\",\n    \"externalResourceId\": \"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n    \"resourceType\": \"GOOGLE_DRIVE_ITEM\"\n  },\n  \"userEmail\": \"john.smith@foo.com\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from credal import ResourceIdentifier_ExternalResourceId\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.permissions_service.check_resource_authorization_for_user(\n    resource_identifier=ResourceIdentifier_ExternalResourceId(\n        external_resource_id=\"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n        resource_type=\"GOOGLE_DRIVE_ITEM\",\n    ),\n    user_email=\"john.smith@foo.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient, Credal } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.permissionsService.checkResourceAuthorizationForUser({\n    resourceIdentifier: {\n        type: \"external-resource-id\",\n        externalResourceId: \"170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr\",\n        resourceType: Credal.ResourceType.GoogleDriveItem\n    },\n    userEmail: \"john.smith@foo.com\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissionsService.checkBulkResourcesAuthorizationForUser": {
        "id": "endpoint_permissionsService.checkBulkResourcesAuthorizationForUser",
        "namespace": [
          "subpackage_permissionsService"
        ],
        "description": "Admin endpoint to check whether the specified user is authorized to read the specified set of resources.",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/permissions"
          },
          {
            "type": "literal",
            "value": "/checkBulkResourcesAuthorizationForUser"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "resourceIdentifiers",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "list",
                    "itemShape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_common:ResourceIdentifier"
                      }
                    }
                  }
                },
                "description": "The set of resource identifier for which you want to check authorization. Currently limited to 20 resources.\n"
              },
              {
                "key": "userEmail",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The user email to check authorization for.\n"
              },
              {
                "key": "disableCache",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "If specified, Credal will bypass the permissions cache and check current permissions for all resources specified.\n"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_permissionsService:CheckBulkResourcesAuthorizationResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/permissions/checkBulkResourcesAuthorizationForUser",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resourceIdentifiers": [
                  {
                    "type": "url",
                    "url": "https://docs.google.com/document/d/170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr/edit"
                  },
                  {
                    "type": "external-resource-id",
                    "externalResourceId": "sfsdfvr54UvyslPVWkQFOA0dfsdfsdflgNycFmdZJQr",
                    "resourceType": "ZENDESK_TICKET"
                  }
                ],
                "userEmail": "john.smith@foo.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "externalResourceId": {
                    "externalResourceId": "170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr",
                    "resourceType": "GOOGLE_DRIVE_ITEM"
                  },
                  "authorized": true,
                  "inputUrl": "https://docs.google.com/document/d/170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr/edit"
                },
                {
                  "externalResourceId": {
                    "externalResourceId": "123456",
                    "resourceType": "ZENDESK_TICKET"
                  },
                  "authorized": true
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/permissions/checkBulkResourcesAuthorizationForUser \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resourceIdentifiers\": [\n    {\n      \"type\": \"url\",\n      \"url\": \"https://docs.google.com/document/d/170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr/edit\"\n    },\n    {\n      \"type\": \"external-resource-id\",\n      \"externalResourceId\": \"sfsdfvr54UvyslPVWkQFOA0dfsdfsdflgNycFmdZJQr\",\n      \"resourceType\": \"ZENDESK_TICKET\"\n    }\n  ],\n  \"userEmail\": \"john.smith@foo.com\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from credal import ResourceIdentifier_ExternalResourceId, ResourceIdentifier_Url\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.permissions_service.check_bulk_resources_authorization_for_user(\n    resource_identifiers=[\n        ResourceIdentifier_Url(\n            url=\"https://docs.google.com/document/d/170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr/edit\",\n        ),\n        ResourceIdentifier_ExternalResourceId(\n            external_resource_id=\"sfsdfvr54UvyslPVWkQFOA0dfsdfsdflgNycFmdZJQr\",\n            resource_type=\"ZENDESK_TICKET\",\n        ),\n    ],\n    user_email=\"john.smith@foo.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient, Credal } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.permissionsService.checkBulkResourcesAuthorizationForUser({\n    resourceIdentifiers: [{\n            type: \"url\",\n            url: \"https://docs.google.com/document/d/170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr/edit\"\n        }, {\n            type: \"external-resource-id\",\n            externalResourceId: \"sfsdfvr54UvyslPVWkQFOA0dfsdfsdflgNycFmdZJQr\",\n            resourceType: Credal.ResourceType.ZendeskTicket\n        }],\n    userEmail: \"john.smith@foo.com\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissionsService.listCachedAuthorizedResourcesForUser": {
        "id": "endpoint_permissionsService.listCachedAuthorizedResourcesForUser",
        "namespace": [
          "subpackage_permissionsService"
        ],
        "description": "Admin endpoint to list all resources that the specified user is authorized to read. Note this endpoint returns cached results and may not be up-to-date. You can use the checkResourceAuthorizationForUser endpoint with disableCache set to true to get the most up-to-date results.",
        "availability": "Beta",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/permissions"
          },
          {
            "type": "literal",
            "value": "/listCachedAuthorizedResourcesForUser"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "userEmail",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The user email to list authorized resources for.\n"
              },
              {
                "key": "resourceType",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_common:ResourceType"
                      }
                    }
                  }
                },
                "description": "The type of resource you want to list. If not specified, all resource types will be listed.\n"
              },
              {
                "key": "limit",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The maximum number of resources to return. Defaults to 100.\n"
              },
              {
                "key": "offset",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The offset to use for pagination. If not specified, the first page of results will be returned.\n"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_permissionsService:AuthorizedResourceListPage"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/permissions/listCachedAuthorizedResourcesForUser",
            "responseStatusCode": 200,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "userEmail": "john.smith@foo.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "credalId": "2b5cf2b8-3df3-11ef-9a96-332d4470d189",
                  "externalId": {
                    "externalResourceId": "170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr",
                    "resourceType": "GOOGLE_DRIVE_ITEM"
                  }
                },
                {
                  "credalId": "eb5a0a00-3d9a-11ef-836d-375bf4e237a6",
                  "externalId": {
                    "externalResourceId": "123456",
                    "resourceType": "ZENDESK_TICKET"
                  }
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/permissions/listCachedAuthorizedResourcesForUser \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"userEmail\": \"john.smith@foo.com\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.permissions_service.list_cached_authorized_resources_for_user(\n    user_email=\"john.smith@foo.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.permissionsService.listCachedAuthorizedResourcesForUser({\n    userEmail: \"john.smith@foo.com\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_search.searchDocumentCollection": {
        "id": "endpoint_search.searchDocumentCollection",
        "namespace": [
          "subpackage_search"
        ],
        "description": "Search across all documents in a document collection using the document metadata and contents.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/v0/search"
          },
          {
            "type": "literal",
            "value": "/searchDocumentCollection"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "collectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "uuid"
                    }
                  }
                }
              },
              {
                "key": "searchQuery",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "userEmail",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The email of the user making the search request for permissions reduction.\n"
              },
              {
                "key": "structuredQueryFilters",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_search:SingleFieldFilter"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "The structured query filters to apply to the search query.\n"
              },
              {
                "key": "searchOptions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_search:DocumentCollectionSearchOptions"
                      }
                    }
                  }
                }
              },
              {
                "key": "metadataFilterExpression",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Legacy metadata filter expression to apply to the search query. Use structuredQueryFilters instead.\n",
                "availability": "Deprecated"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_search:SearchDocumentCollectionResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/v0/search/searchDocumentCollection",
            "responseStatusCode": 200,
            "name": "searchDocumentCollectionExample",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "collectionId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                "searchQuery": "ABC Corp",
                "userEmail": "jack@credal.ai",
                "structuredQueryFilters": [
                  {
                    "field": "status",
                    "operator": "==",
                    "value": "Open"
                  }
                ],
                "searchOptions": {
                  "maxChunks": 10,
                  "mergeContents": true,
                  "threshold": 0.8,
                  "enableSmartFiltering": true,
                  "enableQueryExtraction": true,
                  "enableReranking": true
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "searchTermsUsed": [
                  "ABC Corp"
                ],
                "structuredFiltersApplied": [
                  {
                    "field": "status",
                    "operator": "==",
                    "value": "Open"
                  }
                ],
                "searchId": "76b534be-5d5c-11ee-b268-87f1fd934c81",
                "results": [
                  {
                    "documentId": "82e4b12a-6990-45d4-8ebd-85c00e030c24",
                    "documentName": "ABC Corp - Initial meeting transcript",
                    "documentMetadata": {
                      "customerName": "ABC Corp",
                      "meetingDate": "2021-01-01T00:00:00Z"
                    },
                    "chunks": [
                      {
                        "chunkId": "8d49fa7e-f09a-4bd4-ae94-4c089c9043a0",
                        "chunkIndex": 0,
                        "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit",
                        "score": 0.9
                      },
                      {
                        "chunkId": "c24f99f9-2477-461b-8f8f-90a82a40879d",
                        "chunkIndex": 1,
                        "text": "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore",
                        "score": 0.8
                      },
                      {
                        "chunkId": "6413d18c-b37f-4985-9045-cc8d6e100a17",
                        "chunkIndex": 2,
                        "text": "sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        "score": 0.7
                      }
                    ],
                    "mergedContents": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore. sunt in culpa qui officia deserunt mollit anim id est laborum."
                  },
                  {
                    "documentId": "90998ceb-1c10-4d2a-96cb-acf89fa3005e",
                    "documentName": "XYZ Corp - Follow-up transcript",
                    "documentMetadata": {
                      "customerName": "XYZ Corp",
                      "meetingDate": "2021-01-02T00:00:00Z"
                    },
                    "chunks": [
                      {
                        "chunkId": "3664912a-3edb-4d88-b624-80db99d383e6",
                        "chunkIndex": 0,
                        "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit",
                        "score": 0.7
                      },
                      {
                        "chunkId": "da9d43a4-2927-442c-8e5c-b9ef86f56fc3",
                        "chunkIndex": 1,
                        "text": "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore",
                        "score": 0.9
                      },
                      {
                        "chunkId": "8d882e9f-8eda-479b-ae2a-359ebae7b626",
                        "chunkIndex": 2,
                        "text": "sunt in culpa qui officia deserunt mollit anim id est laborum.",
                        "score": 0.75
                      }
                    ],
                    "mergedContents": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore. sunt in culpa qui officia deserunt mollit anim id est laborum."
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.credal.ai/api/v0/search/searchDocumentCollection \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"collectionId\": \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n  \"searchQuery\": \"ABC Corp\",\n  \"userEmail\": \"jack@credal.ai\",\n  \"structuredQueryFilters\": [\n    {\n      \"field\": \"status\",\n      \"operator\": \"==\",\n      \"value\": \"Open\"\n    }\n  ],\n  \"searchOptions\": {\n    \"maxChunks\": 10,\n    \"mergeContents\": true,\n    \"threshold\": 0.8,\n    \"enableSmartFiltering\": true,\n    \"enableQueryExtraction\": true,\n    \"enableReranking\": true\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import uuid\n\nfrom credal import DocumentCollectionSearchOptions, SingleFieldFilter\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.search.search_document_collection(\n    collection_id=uuid.UUID(\n        \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    ),\n    search_query=\"ABC Corp\",\n    structured_query_filters=[\n        SingleFieldFilter(\n            field=\"status\",\n            operator=\"==\",\n            value=\"Open\",\n        )\n    ],\n    user_email=\"jack@credal.ai\",\n    search_options=DocumentCollectionSearchOptions(\n        max_chunks=10,\n        merge_contents=True,\n        threshold=0.8,\n        enable_smart_filtering=True,\n        enable_query_extraction=True,\n        enable_reranking=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient, Credal } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.search.searchDocumentCollection({\n    collectionId: \"82e4b12a-6990-45d4-8ebd-85c00e030c24\",\n    searchQuery: \"ABC Corp\",\n    structuredQueryFilters: [{\n            field: \"status\",\n            operator: Credal.Operator.Equal,\n            value: \"Open\"\n        }],\n    userEmail: \"jack@credal.ai\",\n    searchOptions: {\n        maxChunks: 10,\n        mergeContents: true,\n        threshold: 0.8,\n        enableSmartFiltering: true,\n        enableQueryExtraction: true,\n        enableReranking: true\n    }\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.metadata": {
        "id": "endpoint_users.metadata",
        "namespace": [
          "subpackage_users"
        ],
        "description": "Bulk patch metadata for users",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/v0/users"
          },
          {
            "type": "literal",
            "value": "/metadata"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.credal.ai/api"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "list",
              "itemShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_users:UserMetadataPatch"
                }
              }
            }
          }
        },
        "examples": [
          {
            "path": "/v0/users/metadata",
            "responseStatusCode": 204,
            "name": "Example0",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": [
                {
                  "userEmail": "ravin@credal.ai",
                  "metadata": {
                    "State": "NY",
                    "Job Role": "CEO"
                  }
                },
                {
                  "userEmail": "jack@credal.ai",
                  "metadata": {
                    "State": "NY",
                    "Department": "Engineering"
                  }
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.credal.ai/api/v0/users/metadata \\\n     -H \"Authorization: Bearer <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '[\n  {\n    \"userEmail\": \"ravin@credal.ai\",\n    \"metadata\": {\n      \"State\": \"NY\",\n      \"Job Role\": \"CEO\"\n    }\n  },\n  {\n    \"userEmail\": \"jack@credal.ai\",\n    \"metadata\": {\n      \"State\": \"NY\",\n      \"Department\": \"Engineering\"\n    }\n  }\n]'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from credal import UserMetadataPatch\nfrom credal.client import CredalApi\n\nclient = CredalApi(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.users.metadata(\n    request=[\n        UserMetadataPatch(\n            metadata={\"State\": \"NY\", \"Job Role\": \"CEO\"},\n            user_email=\"ravin@credal.ai\",\n        ),\n        UserMetadataPatch(\n            metadata={\"State\": \"NY\", \"Department\": \"Engineering\"},\n            user_email=\"jack@credal.ai\",\n        ),\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "language": "typescript",
                  "code": "import { CredalClient } from \"@credal/sdk\";\n\nconst credal = new CredalClient({ apiKey: \"YOUR_API_KEY\" });\nawait credal.users.metadata([{\n        metadata: {\n            \"State\": \"NY\",\n            \"Job Role\": \"CEO\"\n        },\n        userEmail: \"ravin@credal.ai\"\n    }, {\n        metadata: {\n            \"State\": \"NY\",\n            \"Department\": \"Engineering\"\n        },\n        userEmail: \"jack@credal.ai\"\n    }]);\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_common:ResourceIdentifier": {
        "name": "ResourceIdentifier",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "external-resource-id",
              "extends": [
                "type_common:ExternalResourceId"
              ],
              "properties": []
            },
            {
              "discriminantValue": "url",
              "extends": [
                "type_common:Url"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_common:ExternalResourceId": {
        "name": "ExternalResourceId",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalResourceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "resourceType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:ResourceType"
                }
              }
            }
          ]
        }
      },
      "type_common:Url": {
        "name": "Url",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_common:ResourceType": {
        "name": "ResourceType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "GOOGLE_DRIVE_ITEM"
            },
            {
              "value": "MICROSOFT_DRIVE_ITEM"
            },
            {
              "value": "ZENDESK_TICKET"
            },
            {
              "value": "ZENDESK_ARTICLE"
            },
            {
              "value": "ZENDESK_GROUP"
            },
            {
              "value": "ZENDESK_ARTICLE_SECTION"
            },
            {
              "value": "ZENDESK_ARTICLE_CATEGORY"
            },
            {
              "value": "CONFLUENCE_PAGE"
            },
            {
              "value": "CONFLUENCE_SPACE"
            },
            {
              "value": "JIRA_TICKET"
            },
            {
              "value": "JIRA_PROJECT"
            },
            {
              "value": "SALESFORCE_TASK"
            },
            {
              "value": "BOX_FILE"
            },
            {
              "value": "BOX_FOLDER"
            },
            {
              "value": "NOTION_PAGE"
            },
            {
              "value": "NOTION_DATABASE"
            },
            {
              "value": "SLACK_CHANNEL"
            },
            {
              "value": "MONGO_COLLECTION_SYNC"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_common:Collaborator": {
        "name": "Collaborator",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:Role"
                }
              }
            }
          ]
        }
      },
      "type_common:Role": {
        "name": "Role",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "viewer"
            },
            {
              "value": "editor"
            }
          ]
        }
      },
      "type_common:Operator": {
        "name": "Operator",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "<"
            },
            {
              "value": ">"
            },
            {
              "value": "<="
            },
            {
              "value": ">="
            },
            {
              "value": "!="
            },
            {
              "value": "=="
            },
            {
              "value": "contains"
            }
          ]
        }
      },
      "type_copilots:CreateConversationResponse": {
        "name": "CreateConversationResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "conversationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:SendAgentMessageResponse": {
        "name": "SendAgentMessageResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sendChatResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_copilots:SendMessageResponse"
                }
              }
            }
          ]
        }
      },
      "type_copilots:SendMessageResponse": {
        "name": "SendMessageResponse",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "ai_response_result",
              "description": "Returned when there is a reply\nfetched from the copilot.\n",
              "extends": [
                "type_copilots:MessageReply"
              ],
              "properties": []
            },
            {
              "discriminantValue": "blocked_result",
              "description": "Returned when Credal detects possible\ninfosec violations and blocks the message.\n",
              "extends": [
                "type_copilots:MessageBlocked"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_copilots:InputVariable": {
        "name": "InputVariable",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "urls",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:MessageReply": {
        "name": "MessageReply",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "policy_triggers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:PolicyTrigger"
                    }
                  }
                }
              }
            },
            {
              "key": "conversationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "response",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_copilots:ResponseChunk"
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "inserted_audit_log",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_copilots:InsertedAuditLog"
                }
              }
            },
            {
              "key": "referencedSources",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:ReferencedSource"
                    }
                  }
                }
              }
            },
            {
              "key": "sourcesInDataContext",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:ReferencedSource"
                    }
                  }
                }
              }
            },
            {
              "key": "webSearchResults",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:WebSearchResult"
                    }
                  }
                }
              }
            },
            {
              "key": "messageId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:ReferencedSource": {
        "name": "ReferencedSource",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalResourceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:ExternalResourceId"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:WebSearchResult": {
        "name": "WebSearchResult",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:ResponseChunk": {
        "name": "ResponseChunk",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "dataChunk",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:InsertedAuditLog": {
        "name": "InsertedAuditLog",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:MessageBlocked": {
        "name": "MessageBlocked",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "policy_triggers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:PolicyTrigger"
                    }
                  }
                }
              }
            },
            {
              "key": "conversationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "blocks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "inserted_audit_log",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_copilots:InsertedAuditLog"
                }
              }
            }
          ]
        }
      },
      "type_copilots:PolicyTrigger": {
        "name": "PolicyTrigger",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:FeedbackEnum": {
        "name": "FeedbackEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "POSITIVE"
            },
            {
              "value": "NEGATIVE"
            }
          ]
        }
      },
      "type_copilots:MessageFeedback": {
        "name": "MessageFeedback",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "feedback",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_copilots:FeedbackEnum"
                }
              }
            },
            {
              "key": "suggestedAnswer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:Configuration": {
        "name": "Configuration",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "aiEndpointConfiguration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:AIEndpointConfiguration"
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "prompt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:AIEndpointConfiguration": {
        "name": "AIEndpointConfiguration",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "baseUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "apiKey",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:CreateCopilotResponse": {
        "name": "CreateCopilotResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "agentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:DeleteCopilotResponse": {
        "name": "DeleteCopilotResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "copilotId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:StringFieldSchema": {
        "name": "StringFieldSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "operator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:Operator"
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:NumberFieldSchema": {
        "name": "NumberFieldSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "operator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:Operator"
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:BooleanFieldSchema": {
        "name": "BooleanFieldSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "operator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "literal",
                  "value": {
                    "type": "stringLiteral",
                    "value": "=="
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:DatetimeFieldSchema": {
        "name": "DatetimeFieldSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "operator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:Operator"
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:Filter": {
        "name": "Filter",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "fieldType",
          "variants": [
            {
              "discriminantValue": "string",
              "extends": [
                "type_copilots:StringFieldSchema"
              ],
              "properties": []
            },
            {
              "discriminantValue": "number",
              "extends": [
                "type_copilots:NumberFieldSchema"
              ],
              "properties": []
            },
            {
              "discriminantValue": "boolean",
              "extends": [
                "type_copilots:BooleanFieldSchema"
              ],
              "properties": []
            },
            {
              "discriminantValue": "datetime",
              "extends": [
                "type_copilots:DatetimeFieldSchema"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_copilots:CollectionFilteredData": {
        "name": "CollectionFilteredData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "collectionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "filteredDataIds",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "uuid"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:Filter"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:DataFilter": {
        "name": "DataFilter",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "semanticSearchTerms",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "webSearchResults",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filteredDataSourcesPerCollection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:CollectionFilteredData"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:InitialChunk": {
        "name": "InitialChunk",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "conversationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "webSearchResults",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:WebSearchResult"
                    }
                  }
                }
              }
            },
            {
              "key": "dataFilters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:DataFilter"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:DataChunk": {
        "name": "DataChunk",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "chunk",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:FinalChunk": {
        "name": "FinalChunk",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "referencedSources",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:ReferencedSource"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:BlockedChunk": {
        "name": "BlockedChunk",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "conversationId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "blocks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policyTriggers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_copilots:PolicyTrigger"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_copilots:StreamingChunk": {
        "name": "StreamingChunk",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Initial Chunk",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_copilots:InitialChunk"
                }
              }
            },
            {
              "displayName": "Data Chunk",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_copilots:DataChunk"
                }
              }
            },
            {
              "displayName": "Final Chunk",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_copilots:FinalChunk"
                }
              }
            },
            {
              "displayName": "Blocked Chunk",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_copilots:BlockedChunk"
                }
              }
            }
          ]
        }
      },
      "type_documentCatalog:UploadDocumentResponse": {
        "name": "UploadDocumentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "documentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            }
          ]
        }
      },
      "type_documentCatalog:DocumentMetadataPatch": {
        "name": "DocumentMetadataPatch",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "resourceIdentifier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:ResourceIdentifier"
                }
              },
              "description": "The identifier for the resource you want to patch"
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "description": "Key-value object of metadata for document. Keys will be merged with any existing values but can also be set to `null` to effectively remove"
            }
          ]
        }
      },
      "type_documentCatalog:DocumentMetadataPatchRequest": {
        "name": "DocumentMetadataPatchRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sources",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_documentCatalog:DocumentMetadataPatch"
                    }
                  }
                }
              }
            },
            {
              "key": "uploadAsUserEmail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_documentCollections:CreateCollectionResponse": {
        "name": "CreateCollectionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "collectionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            }
          ]
        }
      },
      "type_documentCollections:DeleteCollectionResponse": {
        "name": "DeleteCollectionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "collectionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            }
          ]
        }
      },
      "type_documentCollections:MongoSourceFieldsConfig": {
        "name": "MongoSourceFieldsConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "body",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sourceName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sourceSystemUpdated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sourceUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_documentCollections:MongoCollectionSyncConfig": {
        "name": "MongoCollectionSyncConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "syncName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "collectionName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "filterExpression",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              }
            },
            {
              "key": "sourceFields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_documentCollections:MongoSourceFieldsConfig"
                }
              }
            }
          ]
        }
      },
      "type_documentCollections:MongoCollectionSyncResponse": {
        "name": "MongoCollectionSyncResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mongoCredentialId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "resourceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "syncLaunched",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_permissionsService:Group": {
        "name": "Group",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_permissionsService:User": {
        "name": "User",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_permissionsService:Principal": {
        "name": "Principal",
        "shape": {
          "type": "discriminatedUnion",
          "discriminant": "type",
          "variants": [
            {
              "discriminantValue": "group",
              "extends": [
                "type_permissionsService:Group"
              ],
              "properties": []
            },
            {
              "discriminantValue": "user",
              "extends": [
                "type_permissionsService:User"
              ],
              "properties": []
            }
          ]
        }
      },
      "type_permissionsService:AuthorizedResource": {
        "name": "AuthorizedResource",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "credalId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "externalId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:ExternalResourceId"
                }
              }
            }
          ]
        }
      },
      "type_permissionsService:AuthorizedResourceListPage": {
        "name": "AuthorizedResourceListPage",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_permissionsService:AuthorizedResource"
              }
            }
          }
        }
      },
      "type_permissionsService:PrincipalListPage": {
        "name": "PrincipalListPage",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "principals",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_permissionsService:Principal"
                    }
                  }
                }
              }
            },
            {
              "key": "nextPageToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_permissionsService:CheckResourceAuthorizationResponse": {
        "name": "CheckResourceAuthorizationResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "authorized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_permissionsService:ResourceAuthorizationResult": {
        "name": "ResourceAuthorizationResult",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalResourceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:ExternalResourceId"
                }
              }
            },
            {
              "key": "inputUrl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "authorized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_permissionsService:CheckBulkResourcesAuthorizationResponse": {
        "name": "CheckBulkResourcesAuthorizationResponse",
        "shape": {
          "type": "alias",
          "value": {
            "type": "list",
            "itemShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_permissionsService:ResourceAuthorizationResult"
              }
            }
          }
        }
      },
      "type_permissionsService:Action": {
        "name": "Action",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "READ"
            }
          ]
        }
      },
      "type_search:DocumentCollectionSearchOptions": {
        "name": "DocumentCollectionSearchOptions",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "maxChunks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The maximum number of chunks to return. Defaults to 10."
            },
            {
              "key": "mergeContents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to merge the chunks for a document and just return one result per document. Defaults to false."
            },
            {
              "key": "threshold",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The similarity threshold between 0 and 1 for the search results. A higher number leads to fewer but more relevant results.\nDefaults to 0.45."
            },
            {
              "key": "enableSmartFiltering",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to automatically filter the search results based on the user query and available metadata on the collection. Defaults to false."
            },
            {
              "key": "enableQueryExtraction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "/ Whether to extract search terms from the user query and use them for semantic search. Defaults to false."
            },
            {
              "key": "enableReranking",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether to rerank the search results after the initial semantic search query. Defaults to false."
            }
          ]
        }
      },
      "type_search:SearchDocumentCollectionResponse": {
        "name": "SearchDocumentCollectionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "searchTermsUsed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "structuredFiltersApplied",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_search:SingleFieldFilter"
                    }
                  }
                }
              }
            },
            {
              "key": "searchId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "results",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_search:DocumentCollectionSearchResult"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_search:DocumentCollectionSearchResult": {
        "name": "DocumentCollectionSearchResult",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "documentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "documentName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "documentMetadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "map",
                  "keyShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "chunks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_search:SearchResultChunk"
                    }
                  }
                }
              }
            },
            {
              "key": "mergedContents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_search:SearchResultChunk": {
        "name": "SearchResultChunk",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "chunkId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "chunkIndex",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "text",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "score",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The similarity score between 0 and 1 for the search result. A higher number means the chunk is more relevant to the search query."
            }
          ]
        }
      },
      "type_search:SingleFieldFilter": {
        "name": "SingleFieldFilter",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "operator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_common:Operator"
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_users:UserMetadataPatch": {
        "name": "UserMetadataPatch",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "userEmail",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "description": "Key-value object of metadata for user. Keys will be merged with any existing values but can also be set to `null` to effectively remove"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_common": {
        "id": "subpackage_common",
        "name": "common"
      },
      "subpackage_copilots": {
        "id": "subpackage_copilots",
        "name": "copilots"
      },
      "subpackage_documentCatalog": {
        "id": "subpackage_documentCatalog",
        "name": "documentCatalog"
      },
      "subpackage_documentCollections": {
        "id": "subpackage_documentCollections",
        "name": "documentCollections"
      },
      "subpackage_permissionsService": {
        "id": "subpackage_permissionsService",
        "name": "permissionsService"
      },
      "subpackage_search": {
        "id": "subpackage_search",
        "name": "search"
      },
      "subpackage_users": {
        "id": "subpackage_users",
        "name": "users"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "apiKey"
      }
    }
  }
]