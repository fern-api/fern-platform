[
  {
    "id": "e08c5491-f85f-4c3a-8402-21f1e34c253d",
    "endpoints": {
      "endpoint_memberships/service-card.addCard": {
        "id": "endpoint_memberships/service-card.addCard",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-card"
        ],
        "description": "This endpoint allows you to add an additional card for an existing member under a specific membership. It is useful when a member needs a new card for identification or for cases where multiple cards are allowed for the same member (e.g., secondary or replacement cards).",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/member/"
          },
          {
            "type": "pathParameter",
            "value": "memberId"
          },
          {
            "type": "literal",
            "value": "/card"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          },
          {
            "key": "memberId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MemberId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:AddCardRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:AddCardResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/1224/member/4331/card",
            "responseStatusCode": 200,
            "name": "ExampleAddCard",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224,
              "memberId": 4331
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cardNumber": "MC1234567890",
                "expiryDate": "2029-09-17"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "card": {
                  "cardNumber": "MC1234567890",
                  "expiryDate": "2029-09-17",
                  "temporary": false,
                  "cardId": 123434
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/1224/member/4331/card \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cardNumber\": \"MC1234567890\",\n  \"expiryDate\": \"2029-09-17\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-card.replaceCard": {
        "id": "endpoint_memberships/service-card.replaceCard",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-card"
        ],
        "description": "Use this endpoint to replace an existing member card with a new one. When a card is replaced, the old card is blocked, and a new card is issued to the member. This is typically used when a card is lost, damaged, or needs to be reissued.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/member/"
          },
          {
            "type": "pathParameter",
            "value": "memberId"
          },
          {
            "type": "literal",
            "value": "/card/"
          },
          {
            "type": "pathParameter",
            "value": "cardId"
          },
          {
            "type": "literal",
            "value": "/replace"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          },
          {
            "key": "memberId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MemberId"
              }
            }
          },
          {
            "key": "cardId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:CardId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:ReplaceCardRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:ReplaceCardResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/1224/member/4331/card/598/replace",
            "responseStatusCode": 200,
            "name": "ExampleReplaceCard",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224,
              "memberId": 4331,
              "cardId": 598
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cardNumber": "MC1234567890",
                "expiryDate": "2029-09-17"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "card": [
                  {
                    "cardNumber": "MC-XXXX-67891",
                    "expiryDate": "2029-09-17",
                    "temporary": false,
                    "cardId": 598,
                    "blocked": true
                  },
                  {
                    "cardNumber": "MC1234567890",
                    "expiryDate": "2029-09-17",
                    "temporary": false,
                    "cardId": 123434
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/1224/member/4331/card/598/replace \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cardNumber\": \"MC1234567890\",\n  \"expiryDate\": \"2029-09-17\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-card.getCardId": {
        "id": "endpoint_memberships/service-card.getCardId",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-card"
        ],
        "description": "Retrieve details about a specific card using its unique card ID. This endpoint provides detailed information about the card, such as the member it belongs to, its status, and its validity.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/card/id/"
          },
          {
            "type": "pathParameter",
            "value": "cardId"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "cardId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:CardId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:GetCardResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/id/123434",
            "responseStatusCode": 200,
            "name": "ExampleGetCard",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "cardId": 123434
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "card": {
                  "cardNumber": "MC1234567890",
                  "expiryDate": "2029-09-17",
                  "member": {
                    "blocked": false,
                    "memberId": 4331,
                    "memberNumber": "M123456789",
                    "address": "123 Main Street",
                    "birthday": "1980-01-01",
                    "city": "New York",
                    "country": "USA",
                    "email": "john.doe@acme.com",
                    "firstName": "John",
                    "gender": "male",
                    "lastName": "Doe",
                    "middleName": "A.",
                    "newsletter": true,
                    "phoneNo": "+1234567890",
                    "postCode": "12345"
                  },
                  "membership": {
                    "membershipId": 1224,
                    "membershipNumber": "MS-DEMO-00152",
                    "communityCode": "RIVERLAND",
                    "membershipCode": "GOLD",
                    "issueDate": "2024-09-17",
                    "blocked": false,
                    "validFromDate": "2024-09-17",
                    "validUntilDate": "2025-09-16",
                    "customerNumber": "D000188"
                  },
                  "temporary": false,
                  "cardId": 123434
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/id/123434",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-card.getCardNumber": {
        "id": "endpoint_memberships/service-card.getCardNumber",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-card"
        ],
        "description": "Retrieve details of a specific card using its card number. This endpoint allows access to card information when the card number is known, providing key details such as the card's status and associated member.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/card/number/"
          },
          {
            "type": "pathParameter",
            "value": "cardNumber"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "cardNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:CardNumber"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:GetCardResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/number/MC1234567890",
            "responseStatusCode": 200,
            "name": "ExampleGetCard",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "cardNumber": "MC1234567890"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "card": {
                  "cardNumber": "MC1234567890",
                  "expiryDate": "2029-09-17",
                  "member": {
                    "blocked": false,
                    "memberId": 4331,
                    "memberNumber": "M123456789",
                    "address": "123 Main Street",
                    "birthday": "1980-01-01",
                    "city": "New York",
                    "country": "USA",
                    "email": "john.doe@acme.com",
                    "firstName": "John",
                    "gender": "male",
                    "lastName": "Doe",
                    "middleName": "A.",
                    "newsletter": true,
                    "phoneNo": "+1234567890",
                    "postCode": "12345"
                  },
                  "membership": {
                    "membershipId": 1224,
                    "membershipNumber": "MS-DEMO-00152",
                    "communityCode": "RIVERLAND",
                    "membershipCode": "GOLD",
                    "issueDate": "2024-09-17",
                    "blocked": false,
                    "validFromDate": "2024-09-17",
                    "validUntilDate": "2025-09-16",
                    "customerNumber": "D000188"
                  },
                  "temporary": false,
                  "cardId": 123434
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/number/MC1234567890",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-card.registerArrival": {
        "id": "endpoint_memberships/service-card.registerArrival",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-card"
        ],
        "description": "This endpoint registers the member's arrival at a facility using their card. The card number is used to log the arrival and generate a ticket for the member. Use Ticketing API to retrieve ticket details using the ticket number.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/card/"
          },
          {
            "type": "pathParameter",
            "value": "cardNumber"
          },
          {
            "type": "literal",
            "value": "/register-arrival"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "cardNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:CardNumber"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:RegisterArrivalRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:RegisterArrivalResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/MC1234567890/register-arrival",
            "responseStatusCode": 200,
            "name": "ExampleRegisterArrival",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "cardNumber": "MC1234567890"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "admissionCode": "CASTLE"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "cardNumber": "MC1234567890",
                "ticketNumber": "TICKET123"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/MC1234567890/register-arrival \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"admissionCode\": \"CASTLE\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-card.sendToWallet": {
        "id": "endpoint_memberships/service-card.sendToWallet",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-card"
        ],
        "description": "Sends the card to the apple wallet via email or phone number specified in the request.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/card/"
          },
          {
            "type": "pathParameter",
            "value": "cardNumber"
          },
          {
            "type": "literal",
            "value": "/sendToWallet"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "cardNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:CardNumber"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:SendWalletRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-card:WalletSentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/MC1234567890/sendToWallet",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "cardNumber": "MC1234567890"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "notificationAddress": "+46701234567"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "cardNumber": "MC1234567890",
                "cardSent": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/card/MC1234567890/sendToWallet \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"notificationAddress\": \"+46701234567\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-catalog.getCatalog": {
        "id": "endpoint_memberships/service-catalog.getCatalog",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-catalog"
        ],
        "description": "Get the list of membership items and their descriptions for a specific store.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/membership"
          },
          {
            "type": "literal",
            "value": "/catalog/"
          },
          {
            "type": "pathParameter",
            "value": "storeCode"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "storeCode",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:StoreCode"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-catalog:StoreCatalogResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./membership/catalog/EN",
            "responseStatusCode": 200,
            "name": "ExampleCatalog1",
            "description": "Example response for the getCatalog endpoint",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "storeCode": "EN"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "storeCode": "EN",
                "items": [
                  {
                    "itemNumber": "M12345",
                    "type": "new_membership",
                    "recommendedPrice": 100,
                    "membershipCode": "GOLD",
                    "itemDescription": "Membership Item",
                    "shortDescription": "Short Description including HTML styling",
                    "fullDescription": "Full Description including HTML styling"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./membership/catalog/EN",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-lifecycle.getMembershipHistory": {
        "id": "endpoint_memberships/service-lifecycle.getMembershipHistory",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-lifecycle"
        ],
        "description": "Use this endpoint to retrieve the lifecycle history of a membership. It provides a chronological log of events, including creation, renewals, upgrades, and cancellations.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/history"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:GetMembershipHistoryResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/history",
            "responseStatusCode": 200,
            "name": "ExampleGetMembershipHistory",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "blocked": false,
                  "communityCode": "RIVERLAND",
                  "entries": [
                    {
                      "timeEntryId": 1223,
                      "validFromDate": "2024-09-17",
                      "validUntilDate": "2025-09-16",
                      "activateOnFirstUse": false,
                      "lifecycleAction": "new",
                      "itemNumber": "M12345",
                      "amount": 80,
                      "amountInclVat": 100,
                      "receiptNumber": "R123456789",
                      "receiptLine": 10,
                      "membershipCode": "GOLD"
                    }
                  ],
                  "issueDate": "2024-09-17",
                  "membershipCode": "GOLD",
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "customerNumber": "D000188",
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-09-16"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/history",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-lifecycle.activateMembership": {
        "id": "endpoint_memberships/service-lifecycle.activateMembership",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-lifecycle"
        ],
        "description": "Activate a membership that has been created but is not yet active. This is commonly used when a membership is set up ahead of time and needs to be activated for use.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/activate"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:ConfirmMembershipActivateResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/activate",
            "responseStatusCode": 200,
            "name": "ExampleActivateMembership",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "blocked": false,
                  "communityCode": "RIVERLAND",
                  "entries": [
                    {
                      "timeEntryId": 1223,
                      "validFromDate": "2024-09-17",
                      "validUntilDate": "2025-09-16",
                      "activateOnFirstUse": false,
                      "lifecycleAction": "new",
                      "itemNumber": "M12345",
                      "amount": 80,
                      "amountInclVat": 100,
                      "receiptNumber": "R123456789",
                      "receiptLine": 10,
                      "membershipCode": "GOLD"
                    }
                  ],
                  "issueDate": "2024-09-17",
                  "membershipCode": "GOLD",
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "customerNumber": "D000188",
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-09-16"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/activate",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-lifecycle.cancelMembership": {
        "id": "endpoint_memberships/service-lifecycle.cancelMembership",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-lifecycle"
        ],
        "description": "Cancel an active membership using this endpoint. You can provide a cancellation date, allowing the membership to run until that date, or cancel it immediately.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/cancel"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:CancelMembershipRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:ConfirmMembershipCancelResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/cancel",
            "responseStatusCode": 200,
            "name": "ExampleCancelMembership",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "cancelDate": "2024-10-07"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "blocked": false,
                  "communityCode": "RIVERLAND",
                  "entries": [
                    {
                      "timeEntryId": 2332,
                      "validFromDate": "2024-09-17",
                      "validUntilDate": "2024-10-07",
                      "activateOnFirstUse": false,
                      "lifecycleAction": "new",
                      "itemNumber": "M12345",
                      "amount": 80,
                      "amountInclVat": 100,
                      "receiptNumber": "R123456789",
                      "receiptLine": 10,
                      "membershipCode": "GOLD"
                    }
                  ],
                  "issueDate": "2024-09-17",
                  "membershipCode": "GOLD",
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "customerNumber": "D000188",
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2024-10-07"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/cancel \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"cancelDate\": \"2024-10-07\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-lifecycle.getRenewalOptions": {
        "id": "endpoint_memberships/service-lifecycle.getRenewalOptions",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-lifecycle"
        ],
        "description": "Retrieve a list of available renewal options for a membership. Each option is represented by an `itemNumber`, which includes predefined configurations such as price, duration, and other relevant details. The `itemNumber` returned from this endpoint can be used as a parameter in the `renewMembership` endpoint to proceed with the renewal.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/renew/options"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:GetRenewOptionsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/renew/options",
            "responseStatusCode": 200,
            "name": "ExampleGetRenewOptions",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "renewalOptions": [
                  {
                    "itemNumber": "RENEW-12346",
                    "lifecycleAction": "renew",
                    "description": "Renew GOLD Membership for 1 year",
                    "targetMembershipCode": "GOLD",
                    "periodStart": "2025-09-17",
                    "periodEnd": "2026-09-16",
                    "amount": 80,
                    "amountInclVat": 100,
                    "memberCardinality": 2,
                    "presentationOrder": 0
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/renew/options",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-lifecycle.renewMembership": {
        "id": "endpoint_memberships/service-lifecycle.renewMembership",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-lifecycle"
        ],
        "description": "Use this endpoint to renew an existing membership. The renewal will **add a new period** after the current membership period expires. To renew, you must provide the `itemNumber` from the `getRenewalOptions` endpoint, which specifies the predefined renewal configuration such as price and duration.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/renew"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:RenewMembershipRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:ConfirmMembershipRenewResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/renew",
            "responseStatusCode": 200,
            "name": "ExampleRenewMembership",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "renewWithItem": "RENEW-12346"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "blocked": false,
                  "communityCode": "RIVERLAND",
                  "entries": [
                    {
                      "timeEntryId": 1223,
                      "validFromDate": "2024-09-17",
                      "validUntilDate": "2025-09-16",
                      "activateOnFirstUse": false,
                      "lifecycleAction": "new",
                      "itemNumber": "M12345",
                      "amount": 80,
                      "amountInclVat": 100,
                      "receiptNumber": "R123456789",
                      "receiptLine": 10,
                      "membershipCode": "GOLD"
                    },
                    {
                      "timeEntryId": 3443,
                      "validFromDate": "2025-09-17",
                      "validUntilDate": "2026-09-16",
                      "activateOnFirstUse": false,
                      "lifecycleAction": "renew",
                      "itemNumber": "RENEW-12346",
                      "amount": 80,
                      "amountInclVat": 100,
                      "receiptNumber": "R987654321",
                      "receiptLine": 10,
                      "membershipCode": "GOLD"
                    }
                  ],
                  "issueDate": "2024-09-17",
                  "membershipCode": "GOLD",
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "customerNumber": "D000188",
                  "validFromDate": "2025-09-17",
                  "validUntilDate": "2026-09-16"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/renew \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"renewWithItem\": \"RENEW-12346\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-lifecycle.getUpgradeOptions": {
        "id": "endpoint_memberships/service-lifecycle.getUpgradeOptions",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-lifecycle"
        ],
        "description": "Retrieve a list of available upgrade options for a membership. Each upgrade option is represented by an `itemNumber`, which includes predefined details such as the upgraded benefits and any pricing adjustments. The `itemNumber` returned from this endpoint can be used as a parameter in the `upgradeMembership` endpoint to execute the upgrade.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/upgrade/options"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:GetUpgradeOptionsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/upgrade/options",
            "responseStatusCode": 200,
            "name": "ExampleGetUpgradeOptions",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "renewalOptions": [
                  {
                    "itemNumber": "UPGRADE-12346",
                    "lifecycleAction": "upgrade",
                    "description": "Upgrade to PLATINUM Membership for the remaining period",
                    "targetMembershipCode": "PLATINUM",
                    "periodStart": "2024-10-08",
                    "periodEnd": "2025-09-16",
                    "amount": 80,
                    "amountInclVat": 100,
                    "memberCardinality": 2,
                    "presentationOrder": 0
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/upgrade/options",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-lifecycle.upgradeMembership": {
        "id": "endpoint_memberships/service-lifecycle.upgradeMembership",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-lifecycle"
        ],
        "description": "Use this endpoint to upgrade an active membership to a higher (or lower) plan or tier. The upgrade will **terminate the current membership period** and apply the new membership tier immediately. However, the **overall membership duration remains unchanged**. You must provide the `itemNumber` from the `getUpgradeOptions` endpoint, which includes the predefined details for the upgrade.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/upgrade"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:UpgradeMembershipRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:ConfirmMembershipUpgradeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/upgrade",
            "responseStatusCode": 200,
            "name": "ExampleUpgradeMembership",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "renewWithItem": "UPGRADE-12346"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "blocked": false,
                  "communityCode": "RIVERLAND",
                  "entries": [
                    {
                      "timeEntryId": 2332,
                      "validFromDate": "2024-09-17",
                      "validUntilDate": "2024-10-07",
                      "activateOnFirstUse": false,
                      "lifecycleAction": "new",
                      "itemNumber": "M12345",
                      "amount": 80,
                      "amountInclVat": 100,
                      "receiptNumber": "R123456789",
                      "receiptLine": 10,
                      "membershipCode": "GOLD"
                    },
                    {
                      "timeEntryId": 4554,
                      "validFromDate": "2024-10-08",
                      "validUntilDate": "2025-09-16",
                      "activateOnFirstUse": false,
                      "lifecycleAction": "upgrade",
                      "itemNumber": "UPGRADE-12346",
                      "amount": 80,
                      "amountInclVat": 100,
                      "receiptNumber": "R987654321",
                      "receiptLine": 10,
                      "membershipCode": "PLATINUM"
                    }
                  ],
                  "issueDate": "2024-09-17",
                  "membershipCode": "GOLD",
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "customerNumber": "D000188",
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-09-16"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/upgrade \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"renewWithItem\": \"UPGRADE-12346\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-lifecycle.getExtendOptions": {
        "id": "endpoint_memberships/service-lifecycle.getExtendOptions",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-lifecycle"
        ],
        "description": "Retrieve a list of available extension options for a membership. Each option is represented by an `itemNumber`, which includes predefined configurations such as new duration and pricing. The `itemNumber` returned from this endpoint can be used as a parameter in the `extendMembership` endpoint to apply the extension.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/extend/options"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:GetExtendOptionsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/extend/options",
            "responseStatusCode": 200,
            "name": "ExampleGetExtendOptions",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "extendOptions": [
                  {
                    "itemNumber": "EXTEND-12346",
                    "lifecycleAction": "extend",
                    "description": "Extend GOLD Membership with 1 year from today",
                    "targetMembershipCode": "GOLD",
                    "periodStart": "2024-10-08",
                    "periodEnd": "2025-10-07",
                    "amount": 80,
                    "amountInclVat": 100,
                    "memberCardinality": 2,
                    "presentationOrder": 0
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/extend/options",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-lifecycle.extendMembership": {
        "id": "endpoint_memberships/service-lifecycle.extendMembership",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-lifecycle"
        ],
        "description": "Use this endpoint to extend the duration of an active membership. The extension will **terminate the current period** and create a **new period starting from today**, based on the provided extension configuration. The **overall membership duration will be greater** than the original duration. You must provide the `itemNumber` from the `getExtendOptions` endpoint to apply the extension.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/extend"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:ExtendMembershipRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-lifecycle:ConfirmMembershipExtendResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/extend",
            "responseStatusCode": 200,
            "name": "ExampleExtendMembership",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "extendWithItem": "EXTEND-12346"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "blocked": false,
                  "communityCode": "RIVERLAND",
                  "entries": [
                    {
                      "timeEntryId": 2332,
                      "validFromDate": "2024-09-17",
                      "validUntilDate": "2024-10-07",
                      "activateOnFirstUse": false,
                      "lifecycleAction": "new",
                      "itemNumber": "M12345",
                      "amount": 80,
                      "amountInclVat": 100,
                      "receiptNumber": "R123456789",
                      "receiptLine": 10,
                      "membershipCode": "GOLD"
                    },
                    {
                      "timeEntryId": 4554,
                      "validFromDate": "2024-10-08",
                      "validUntilDate": "2025-10-07",
                      "activateOnFirstUse": false,
                      "lifecycleAction": "extend",
                      "itemNumber": "EXTEND-12346",
                      "amount": 80,
                      "amountInclVat": 100,
                      "receiptNumber": "R987654321",
                      "receiptLine": 10,
                      "membershipCode": "GOLD"
                    }
                  ],
                  "issueDate": "2024-09-17",
                  "membershipCode": "GOLD",
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "customerNumber": "D000188",
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-10-07"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/extend \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"extendWithItem\": \"EXTEND-12346\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-member.addMember": {
        "id": "endpoint_memberships/service-member.addMember",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-member"
        ],
        "description": "Use this endpoint to add a new member to a membership. This is used when a new individual needs to be linked to an existing membership, either at the time of membership creation or later.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/member/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/add"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:AddMemberRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:AddMemberResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/1224/add",
            "responseStatusCode": 200,
            "name": "ExampleAddMember",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "membershipId": 1224,
                "member": {
                  "address": "123 Main Street",
                  "birthday": "1980-01-01",
                  "cards": [
                    {
                      "cardNumber": "MC1234567890",
                      "expiryDate": "2029-09-17",
                      "temporary": false
                    }
                  ],
                  "city": "New York",
                  "country": "USA",
                  "email": "john.doe@acme.com",
                  "firstName": "John",
                  "gender": "male",
                  "lastName": "Doe",
                  "middleName": "A.",
                  "newsletter": true,
                  "phoneNo": "+1234567890",
                  "postCode": "12345"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "member": {
                  "blocked": false,
                  "memberId": 4331,
                  "memberNumber": "M123456789",
                  "address": "123 Main Street",
                  "birthday": "1980-01-01",
                  "city": "New York",
                  "country": "USA",
                  "email": "john.doe@acme.com",
                  "firstName": "John",
                  "gender": "male",
                  "lastName": "Doe",
                  "memberships": [
                    {
                      "role": "membership_admin",
                      "contactNumber": "C1234567890",
                      "membership": {
                        "blocked": false,
                        "cards": [
                          {
                            "cardNumber": "MC1234567890",
                            "expiryDate": "2029-09-17",
                            "temporary": false,
                            "cardId": 123434
                          }
                        ],
                        "communityCode": "RIVERLAND",
                        "issueDate": "2024-09-17",
                        "membershipCode": "GOLD",
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "customerNumber": "D000188",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16"
                      }
                    }
                  ],
                  "middleName": "A.",
                  "newsletter": true,
                  "phoneNo": "+1234567890",
                  "postCode": "12345"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/1224/add \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"membershipId\": 1224,\n  \"member\": {\n    \"address\": \"123 Main Street\",\n    \"birthday\": \"1980-01-01\",\n    \"cards\": [\n      {\n        \"cardNumber\": \"MC1234567890\",\n        \"expiryDate\": \"2029-09-17\",\n        \"temporary\": false\n      }\n    ],\n    \"city\": \"New York\",\n    \"country\": \"USA\",\n    \"email\": \"john.doe@acme.com\",\n    \"firstName\": \"John\",\n    \"gender\": \"male\",\n    \"lastName\": \"Doe\",\n    \"middleName\": \"A.\",\n    \"newsletter\": true,\n    \"phoneNo\": \"+1234567890\",\n    \"postCode\": \"12345\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-member.getMemberId": {
        "id": "endpoint_memberships/service-member.getMemberId",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-member"
        ],
        "description": "Retrieve details of a specific member using their unique member ID.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/member/id/"
          },
          {
            "type": "pathParameter",
            "value": "memberId"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "memberId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MemberId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:GetMemberResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/id/4331",
            "responseStatusCode": 200,
            "name": "ExampleGetMember",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "memberId": 4331
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "member": {
                  "blocked": false,
                  "memberId": 4331,
                  "memberNumber": "M123456789",
                  "address": "123 Main Street",
                  "birthday": "1980-01-01",
                  "city": "New York",
                  "country": "USA",
                  "email": "john.doe@acme.com",
                  "firstName": "John",
                  "gender": "male",
                  "lastName": "Doe",
                  "memberships": [
                    {
                      "role": "membership_admin",
                      "contactNumber": "C1234567890",
                      "membership": {
                        "blocked": false,
                        "cards": [
                          {
                            "cardNumber": "MC1234567890",
                            "expiryDate": "2029-09-17",
                            "temporary": false,
                            "cardId": 123434
                          }
                        ],
                        "communityCode": "RIVERLAND",
                        "issueDate": "2024-09-17",
                        "membershipCode": "GOLD",
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "customerNumber": "D000188",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16"
                      }
                    }
                  ],
                  "middleName": "A.",
                  "newsletter": true,
                  "phoneNo": "+1234567890",
                  "postCode": "12345"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/id/4331",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-member.getMemberNumber": {
        "id": "endpoint_memberships/service-member.getMemberNumber",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-member"
        ],
        "description": "Use this endpoint to retrieve details of a member based on their member number. This is helpful when the member number is available but the member ID is not known.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/member/number/"
          },
          {
            "type": "pathParameter",
            "value": "memberNumber"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "memberNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MemberNumber"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:GetMemberResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/number/M123456789",
            "responseStatusCode": 200,
            "name": "ExampleGetMemberNumber",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "memberNumber": "M123456789"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "member": {
                  "blocked": false,
                  "memberId": 4331,
                  "memberNumber": "M123456789",
                  "address": "123 Main Street",
                  "birthday": "1980-01-01",
                  "city": "New York",
                  "country": "USA",
                  "email": "john.doe@acme.com",
                  "firstName": "John",
                  "gender": "male",
                  "lastName": "Doe",
                  "memberships": [
                    {
                      "role": "membership_admin",
                      "contactNumber": "C1234567890",
                      "membership": {
                        "blocked": false,
                        "cards": [
                          {
                            "cardNumber": "MC1234567890",
                            "expiryDate": "2029-09-17",
                            "temporary": false,
                            "cardId": 123434
                          }
                        ],
                        "communityCode": "RIVERLAND",
                        "issueDate": "2024-09-17",
                        "membershipCode": "GOLD",
                        "membershipId": 1224,
                        "membershipNumber": "MS-DEMO-00152",
                        "customerNumber": "D000188",
                        "validFromDate": "2024-09-17",
                        "validUntilDate": "2025-09-16"
                      }
                    }
                  ],
                  "middleName": "A.",
                  "newsletter": true,
                  "phoneNo": "+1234567890",
                  "postCode": "12345"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/number/M123456789",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-member.blockMember": {
        "id": "endpoint_memberships/service-member.blockMember",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-member"
        ],
        "description": "Block a specific member from further activity. This is typically used in scenarios where a member's access needs to be temporarily or permanently disabled. **Family Membership Downgrade** For family or group memberships, when the allowed number of valid members decreases (e.g., before a downgrade to a smaller membership plan), this endpoint can be used to block excess members to comply with the new membership limitations.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/member/"
          },
          {
            "type": "pathParameter",
            "value": "memberId"
          },
          {
            "type": "literal",
            "value": "/block"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "memberId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MemberId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:BlockMemberResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/block",
            "responseStatusCode": 200,
            "name": "ExampleBlockMember",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "memberId": 4331
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "member": {
                  "blocked": true,
                  "memberId": 4331,
                  "memberNumber": "M123456789",
                  "address": "123 Main Street",
                  "birthday": "1980-01-01",
                  "city": "New York",
                  "country": "USA",
                  "email": "john.doe@acme.com",
                  "firstName": "John",
                  "gender": "male",
                  "lastName": "Doe",
                  "middleName": "A.",
                  "newsletter": true,
                  "phoneNo": "+1234567890",
                  "postCode": "12345"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/block",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-member.unblockMember": {
        "id": "endpoint_memberships/service-member.unblockMember",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-member"
        ],
        "description": "Unblock a previously blocked member, allowing them to resume activities associated with their membership. This endpoint re-enables access that was previously restricted.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/member/"
          },
          {
            "type": "pathParameter",
            "value": "memberId"
          },
          {
            "type": "literal",
            "value": "/unblock"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "memberId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MemberId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:UnblockMemberResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/unblock",
            "responseStatusCode": 200,
            "name": "ExampleUnblockMember",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "memberId": 4331
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "member": {
                  "blocked": false,
                  "memberId": 4331,
                  "memberNumber": "M123456789",
                  "address": "123 Main Street",
                  "birthday": "1980-01-01",
                  "city": "New York",
                  "country": "USA",
                  "email": "john.doe@acme.com",
                  "firstName": "John",
                  "gender": "male",
                  "lastName": "Doe",
                  "middleName": "A.",
                  "newsletter": true,
                  "phoneNo": "+1234567890",
                  "postCode": "12345"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/unblock",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-member.updateMember": {
        "id": "endpoint_memberships/service-member.updateMember",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-member"
        ],
        "description": "Update the details of an existing member. This endpoint is used when a member's information needs to be changed, such as updating their contact details, name, or personal information.",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/member/"
          },
          {
            "type": "pathParameter",
            "value": "memberId"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "memberId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MemberId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:UpdateMemberRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:UpdateMemberResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331",
            "responseStatusCode": 200,
            "name": "ExampleUpdateMember",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "memberId": 4331
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "member": {
                  "firstName": "John",
                  "middleName": "A.",
                  "lastName": "Doe",
                  "address": "123 Main Street",
                  "postCode": "12345",
                  "city": "New York",
                  "country": "USA",
                  "birthday": "1980-01-01",
                  "gender": "male",
                  "newsletter": true,
                  "phoneNo": "+1234567890",
                  "email": "john.doe@acme.com"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "member": {
                  "blocked": false,
                  "memberId": 4331,
                  "memberNumber": "M123456789",
                  "address": "123 Main Street",
                  "birthday": "1980-01-01",
                  "city": "New York",
                  "country": "USA",
                  "email": "john.doe@acme.com",
                  "firstName": "John",
                  "gender": "male",
                  "lastName": "Doe",
                  "middleName": "A.",
                  "newsletter": true,
                  "phoneNo": "+1234567890",
                  "postCode": "12345"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331 \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"member\": {\n    \"firstName\": \"John\",\n    \"middleName\": \"A.\",\n    \"lastName\": \"Doe\",\n    \"address\": \"123 Main Street\",\n    \"postCode\": \"12345\",\n    \"city\": \"New York\",\n    \"country\": \"USA\",\n    \"birthday\": \"1980-01-01\",\n    \"gender\": \"male\",\n    \"newsletter\": true,\n    \"phoneNo\": \"+1234567890\",\n    \"email\": \"john.doe@acme.com\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-member.getMemberImage": {
        "id": "endpoint_memberships/service-member.getMemberImage",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-member"
        ],
        "description": "Retrieve the image associated with a specific member.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/member/"
          },
          {
            "type": "pathParameter",
            "value": "memberId"
          },
          {
            "type": "literal",
            "value": "/image"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "memberId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MemberId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:GetMemberImageResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/image",
            "responseStatusCode": 200,
            "name": "ExampleGetMemberImage",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "memberId": 4331
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "image": "SGVsbG8gV29ybGQ="
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/image",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-member.setMemberImage": {
        "id": "endpoint_memberships/service-member.setMemberImage",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-member"
        ],
        "description": "Create or update the image associated with a member. Use this endpoint to upload a new photo or update an existing one linked to the member’s profile.",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/member/"
          },
          {
            "type": "pathParameter",
            "value": "memberId"
          },
          {
            "type": "literal",
            "value": "/image"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "memberId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MemberId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:SetMemberImageRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:SetMemberImageResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/image",
            "responseStatusCode": 200,
            "name": "ExampleSetMemberImage",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "memberId": 4331
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "image": "SGVsbG8gV29ybGQ="
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "mediaId": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member/4331/image \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"image\": \"SGVsbG8gV29ybGQ=\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-member.findMembers": {
        "id": "endpoint_memberships/service-member.findMembers",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-member"
        ],
        "description": "Search for members based on various criteria such as name, birth date, email, phone number, or card number. This endpoint allows you to perform a flexible search and return a list of members that match the provided criteria.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/member"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "memberNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_memberships/types/types-simple:MemberNumber"
                  }
                }
              }
            }
          },
          {
            "key": "lastName",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_memberships/types/types-simple:LastName"
                  }
                }
              }
            }
          },
          {
            "key": "birthDate",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_memberships/types/types-simple:Birthday"
                  }
                }
              }
            }
          },
          {
            "key": "email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_memberships/types/types-simple:Email"
                  }
                }
              }
            }
          },
          {
            "key": "phone",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_memberships/types/types-simple:PhoneNo"
                  }
                }
              }
            }
          },
          {
            "key": "cardNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_memberships/types/types-simple:CardNumber"
                  }
                }
              }
            }
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_memberships/types/types-simple:Limit"
                  }
                }
              }
            }
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_memberships/types/types-simple:Offset"
                  }
                }
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-member:GetMemberListResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member",
            "responseStatusCode": 200,
            "name": "ExampleFindMembers",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd."
            },
            "queryParameters": {
              "memberNumber": "M123456789",
              "lastName": "Doe",
              "birthDate": "1980-01-01",
              "email": "john.doe@acme.com",
              "phone": "+1234567890",
              "cardNumber": "MC1234567890"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "members": [
                  {
                    "blocked": false,
                    "memberId": 4331,
                    "memberNumber": "M123456789",
                    "address": "123 Main Street",
                    "birthday": "1980-01-01",
                    "city": "New York",
                    "country": "USA",
                    "email": "john.doe@acme.com",
                    "firstName": "John",
                    "gender": "male",
                    "lastName": "Doe",
                    "memberships": [
                      {
                        "role": "membership_admin",
                        "contactNumber": "C1234567890",
                        "membership": {
                          "blocked": false,
                          "cards": [
                            {
                              "cardNumber": "MC1234567890",
                              "expiryDate": "2029-09-17",
                              "temporary": false,
                              "cardId": 123434
                            }
                          ],
                          "communityCode": "RIVERLAND",
                          "issueDate": "2024-09-17",
                          "membershipCode": "GOLD",
                          "membershipId": 1224,
                          "membershipNumber": "MS-DEMO-00152",
                          "customerNumber": "D000188",
                          "validFromDate": "2024-09-17",
                          "validUntilDate": "2025-09-16"
                        }
                      }
                    ],
                    "middleName": "A.",
                    "newsletter": true,
                    "phoneNo": "+1234567890",
                    "postCode": "12345"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/member \\\n     -d memberNumber=M123456789 \\\n     -d lastName=Doe \\\n     -d birthDate=1980-01-01 \\\n     --data-urlencode email=john.doe@acme.com \\\n     --data-urlencode phone=+1234567890 \\\n     -d cardNumber=MC1234567890",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-membership.createMembership": {
        "id": "endpoint_memberships/service-membership.createMembership",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-membership"
        ],
        "description": "Use this endpoint to create a new membership.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-membership:CreateMembershipRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-membership:CreateMembershipResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership",
            "responseStatusCode": 200,
            "name": "ExampleMembership1",
            "description": "Example response for the createMembership endpoint",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd."
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "itemNumber": "M12345"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "communityCode": "RIVERLAND",
                  "membershipCode": "GOLD",
                  "issueDate": "2024-09-17",
                  "blocked": false,
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-09-16",
                  "customerNumber": "D000188"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"itemNumber\": \"M12345\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-membership.getMembershipId": {
        "id": "endpoint_memberships/service-membership.getMembershipId",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-membership"
        ],
        "description": "This endpoint retrieves the details of a specific membership using its unique membership ID. It’s useful for checking the status, validity, and other details of an existing membership.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/id/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-membership:GetMembershipResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/id/1224",
            "responseStatusCode": 200,
            "name": "ExampleGetMembershipId",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "communityCode": "RIVERLAND",
                  "membershipCode": "GOLD",
                  "issueDate": "2024-09-17",
                  "blocked": false,
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-09-16",
                  "customerNumber": "D000188"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/id/1224",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-membership.getMembershipNumber": {
        "id": "endpoint_memberships/service-membership.getMembershipNumber",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-membership"
        ],
        "description": "Use this endpoint to retrieve membership details based on the membership number. This is helpful when the ID isn't available but the membership number is known.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/number/"
          },
          {
            "type": "pathParameter",
            "value": "membershipNumber"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipNumber"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-membership:GetMembershipResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/number/MS-DEMO-00152",
            "responseStatusCode": 200,
            "name": "ExampleGetMembershipNumber",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipNumber": "MS-DEMO-00152"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "communityCode": "RIVERLAND",
                  "membershipCode": "GOLD",
                  "issueDate": "2024-09-17",
                  "blocked": false,
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-09-16",
                  "customerNumber": "D000188"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/number/MS-DEMO-00152",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-membership.blockMembership": {
        "id": "endpoint_memberships/service-membership.blockMembership",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-membership"
        ],
        "description": "Use this endpoint to block a membership, preventing any further activity on it.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/block"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-membership:BlockMembershipResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/block",
            "responseStatusCode": 200,
            "name": "ExampleBlockMembership",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "communityCode": "RIVERLAND",
                  "membershipCode": "GOLD",
                  "issueDate": "2024-09-17",
                  "blocked": true,
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-09-16",
                  "customerNumber": "D000188"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/block",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-membership.unblockMembership": {
        "id": "endpoint_memberships/service-membership.unblockMembership",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-membership"
        ],
        "description": "Unblock a previously blocked membership using this endpoint. It reactivates the membership, allowing members to resume activity after a block period.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/unblock"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-membership:UnblockMembershipResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/unblock",
            "responseStatusCode": 200,
            "name": "ExampleUnblockMembership",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "communityCode": "RIVERLAND",
                  "membershipCode": "GOLD",
                  "issueDate": "2024-09-17",
                  "blocked": false,
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-09-16",
                  "customerNumber": "D000188"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/unblock",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-membership.getMembers": {
        "id": "endpoint_memberships/service-membership.getMembers",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-membership"
        ],
        "description": "This endpoint retrieves all members associated with a specific membership. It is useful you need to see a list of all participants or account holders under a single membership.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/membership/"
          },
          {
            "type": "pathParameter",
            "value": "membershipId"
          },
          {
            "type": "literal",
            "value": "/members"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "membershipId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/types/types-simple:MembershipId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-membership:GetMembersResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/members",
            "responseStatusCode": 200,
            "name": "GetMembershipMembers",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "membershipId": 1224
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "membership": {
                  "blocked": false,
                  "communityCode": "RIVERLAND",
                  "issueDate": "2024-09-17",
                  "membershipCode": "GOLD",
                  "membershipId": 1224,
                  "membershipNumber": "MS-DEMO-00152",
                  "customerNumber": "D000188",
                  "members": [
                    {
                      "role": "membership_admin",
                      "contactNumber": "C1234567890",
                      "member": {
                        "blocked": false,
                        "cards": [
                          {
                            "cardNumber": "MC1234567890",
                            "expiryDate": "2029-09-17",
                            "temporary": false,
                            "cardId": 123434
                          }
                        ],
                        "memberId": 4331,
                        "memberNumber": "M123456789",
                        "address": "123 Main Street",
                        "birthday": "1980-01-01",
                        "city": "New York",
                        "country": "USA",
                        "email": "john.doe@acme.com",
                        "firstName": "John",
                        "gender": "male",
                        "lastName": "Doe",
                        "middleName": "A.",
                        "newsletter": true,
                        "phoneNo": "+1234567890",
                        "postCode": "12345"
                      }
                    }
                  ],
                  "validFromDate": "2024-09-17",
                  "validUntilDate": "2025-09-16"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/membership/1224/members",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_memberships/service-misc.resolveIdentifier": {
        "id": "endpoint_memberships/service-misc.resolveIdentifier",
        "namespace": [
          "subpackage_memberships",
          "subpackage_memberships/service-misc"
        ],
        "description": "Resolves number as a specific membership, member, or card",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/memberships"
          },
          {
            "type": "literal",
            "value": "/misc/"
          },
          {
            "type": "pathParameter",
            "value": "identifier"
          },
          {
            "type": "literal",
            "value": "/resolve"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "identifier",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_memberships/service-misc:ResolveMemberIdentifierResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/misc/MS-DEMO-00152/resolve",
            "responseStatusCode": 200,
            "name": "ExampleResolveIdentifier",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "identifier": "MS-DEMO-00152"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "type": "membership",
                "membershipId": 1224,
                "memberId": 4331,
                "cardId": 123434,
                "membershipNumber": "MS-DEMO-00152",
                "memberNumber": "M123456789",
                "cardNumber": "MC1234567890"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./memberships/misc/MS-DEMO-00152/resolve",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_systemservices/companies.getCompanies": {
        "id": "endpoint_systemservices/companies.getCompanies",
        "namespace": [
          "subpackage_systemservices",
          "subpackage_systemservices/companies"
        ],
        "description": "Get list of all companies in the selected environment. More information how to work with companies can be found [here](/api-reference/system-services/companies).",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/companies"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_systemservices/companies:Companies"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/{company}/companies",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "value": [
                  {
                    "id": "17ff1351-d07d-4b85-8957-b4b585f47aad",
                    "systemVersion": "24.0.16410.18056",
                    "name": "CRONUS International Ltd.",
                    "displayName": ""
                  },
                  {
                    "id": "872336d7-5183-4c0b-9b47-755f3d6d77e7",
                    "systemVersion": "24.0.16410.18056",
                    "name": "TestCompany",
                    "displayName": "TestCompany"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/{company}/companies \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_systemservices/helloworld.getHelloWorld": {
        "id": "endpoint_systemservices/helloworld.getHelloWorld",
        "namespace": [
          "subpackage_systemservices",
          "subpackage_systemservices/helloworld"
        ],
        "description": "Hello World provides a simple, data-agnostic method to test the API connection, ensuring that your integration is set up correctly and functioning as expected.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/helloworld"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_systemservices/helloworld:HelloWorld"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./helloworld",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd."
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "message": "Hello World!"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./helloworld \\\n     -H \"Authorization: Bearer <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-capacity.getCapacity": {
        "id": "endpoint_ticketing/service-capacity.getCapacity",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-capacity"
        ],
        "description": "Retrieve the capacity and availability for a ticket item number.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/capacity/search"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "itemNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:ItemNumber"
              }
            }
          },
          {
            "key": "referenceDate",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/types-simple:ReferenceDate"
                  }
                }
              }
            }
          },
          {
            "key": "quantity",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/types-simple:NumberOfTickets"
                  }
                }
              }
            }
          },
          {
            "key": "admissionCode",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/types-simple:AdmissionCode"
                  }
                }
              }
            }
          },
          {
            "key": "customerNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/types-simple:CustomerNumber"
                  }
                }
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/service-capacity:AdmissionCapacity"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/capacity/search",
            "responseStatusCode": 200,
            "name": "ExampleCapacity1",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd."
            },
            "queryParameters": {
              "itemNumber": "31001",
              "referenceDate": "2024-10-15",
              "quantity": 2
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "code": "CASTLE",
                  "default": true,
                  "discountPct": 0,
                  "included": "mandatory",
                  "quantity": 2,
                  "referenceDate": "2024-10-15",
                  "schedules": [
                    {
                      "allocatable": true,
                      "allocationModel": "capacity",
                      "remainingCapacity": 10,
                      "explanation": "Schedule is allocatable",
                      "schedule": {
                        "id": 452,
                        "code": "MORNING",
                        "startDate": "2024-10-15",
                        "startTime": "09:00",
                        "endDate": "2024-10-15",
                        "endTime": "12:00",
                        "duration": "3 hours",
                        "description": "Morning schedule",
                        "arrivalFromTime": "08:30",
                        "arrivalUntilTime": "10:00"
                      },
                      "price": {
                        "pricingOption": "fixed",
                        "adjustmentAmount": 0,
                        "adjustmentPct": 0,
                        "adjustedUnitPrice": 100,
                        "adjustedTotalPrice": 200
                      },
                      "sales": {
                        "salesFromDate": "2024-10-11",
                        "salesFromTime": "00:00",
                        "salesUntilDate": "2024-10-17",
                        "salesUntilTime": "23:59"
                      }
                    },
                    {
                      "allocatable": true,
                      "allocationModel": "capacity",
                      "remainingCapacity": 12,
                      "explanation": "Schedule is allocatable",
                      "schedule": {
                        "id": 489,
                        "code": "EVENING",
                        "startDate": "2024-10-15",
                        "startTime": "17:00",
                        "endDate": "2024-10-15",
                        "endTime": "20:00",
                        "duration": "3 hours",
                        "description": "Evening schedule",
                        "arrivalFromTime": "16:30",
                        "arrivalUntilTime": "18:00"
                      },
                      "price": {
                        "pricingOption": "fixed",
                        "adjustmentAmount": 0,
                        "adjustmentPct": 0,
                        "adjustedUnitPrice": 100,
                        "adjustedTotalPrice": 200
                      },
                      "sales": {
                        "salesFromDate": "2024-10-11",
                        "salesFromTime": "00:00",
                        "salesUntilDate": "2024-10-17",
                        "salesUntilTime": "23:59"
                      }
                    }
                  ],
                  "unitPrice": 100,
                  "unitPriceIncludesVat": true,
                  "vatPct": 25
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/capacity/search \\\n     -d itemNumber=31001 \\\n     -d referenceDate=2024-10-15 \\\n     -d quantity=2",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-catalog.getCatalog": {
        "id": "endpoint_ticketing/service-catalog.getCatalog",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-catalog"
        ],
        "description": "Get the list of ticket items and their descriptions",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/catalog/"
          },
          {
            "type": "pathParameter",
            "value": "storeCode"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "storeCode",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:StoreCode"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-catalog:StoreCatalogResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/catalog/EN",
            "responseStatusCode": 200,
            "name": "ExampleCatalog1",
            "description": "Example response for the getCatalog endpoint",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "storeCode": "EN"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "storeCode": "EN",
                "items": [
                  {
                    "itemNumber": "31001",
                    "recommendedPrice": {
                      "unitPrice": 100,
                      "unitPriceIncludesVat": true,
                      "vatPct": 25,
                      "currencyCode": "SEK"
                    },
                    "ticketType": {
                      "code": "WEB",
                      "description": "Web sales",
                      "category": "Online"
                    },
                    "description": {
                      "title": "Castle Museum Entrance",
                      "subtitle": "Adult Castle Ticket",
                      "name": "Explore History",
                      "description": "<b>Access</b> to all castle exhibits",
                      "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                    },
                    "contents": [
                      {
                        "capacityControl": "sales",
                        "code": "CASTLE",
                        "default": true,
                        "included": "mandatory",
                        "scheduleSelection": "noScheduleSelection",
                        "description": {
                          "title": "Castle Museum Entrance",
                          "subtitle": "Adult Castle Ticket",
                          "name": "Explore the Castle",
                          "description": "<b>Access</b> to the castle exhibit",
                          "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                        },
                        "maxCapacity": 175
                      }
                    ]
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/catalog/EN",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-reservations.createReservation": {
        "id": "endpoint_ticketing/service-reservations.createReservation",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-reservations"
        ],
        "description": "Initiates a new reservation for tickets. Clients use this endpoint to provisionally hold tickets by specifying the desired items, quantities, and any specific admissions or schedules. Returns a token representing the reservation, along with its expiration time, allowing clients to manage or confirm the reservation before it expires.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/reservation"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-reservations:CreateReservationRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-reservations:GetReservationDetails"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation",
            "responseStatusCode": 200,
            "name": "ExampleCreateReservation1",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd."
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "reserve": [
                  {
                    "itemNumber": "31001",
                    "quantity": 2,
                    "content": [
                      {
                        "admissionCode": "CASTLE",
                        "scheduleId": 452
                      }
                    ]
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "token": "ABC123456DEF789GHI",
                "reservationStatus": "registered",
                "reservations": [
                  {
                    "itemNumber": "31001",
                    "quantity": 2,
                    "ticket": {
                      "validFrom": "2024-10-15T00:00:00Z",
                      "validUntil": "2024-10-15T23:59:59Z",
                      "unitPrice": 80,
                      "unitPriceInclVat": 100,
                      "currencyCode": "DKK"
                    },
                    "content": [
                      {
                        "admissionDetails": {
                          "code": "CASTLE",
                          "default": true,
                          "included": "mandatory",
                          "description": {
                            "title": "Castle Museum Entrance",
                            "subtitle": "Adult Castle Ticket",
                            "name": "Explore the Castle",
                            "description": "<b>Access</b> to the castle exhibit",
                            "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                          },
                          "scheduleDetails": {
                            "id": 452,
                            "code": "MORNING",
                            "startDate": "2024-10-15",
                            "startTime": "09:00",
                            "endDate": "2024-10-15",
                            "endTime": "12:00",
                            "duration": "3 hours",
                            "description": "Morning schedule",
                            "arrivalFromTime": "08:30",
                            "arrivalUntilTime": "10:00"
                          }
                        }
                      }
                    ]
                  }
                ],
                "expiresAt": "2024-10-11T12:13:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"reserve\": [\n    {\n      \"itemNumber\": \"31001\",\n      \"quantity\": 2,\n      \"content\": [\n        {\n          \"admissionCode\": \"CASTLE\",\n          \"scheduleId\": 452\n        }\n      ]\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-reservations.updateReservation": {
        "id": "endpoint_ticketing/service-reservations.updateReservation",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-reservations"
        ],
        "description": "Modifies an existing reservation identified by a token. This endpoint replaces the current reservation details with new ones provided in the request, such as changing quantities or items. Useful for adjusting reservations before confirmation, ensuring that held tickets are updated and previous allocations are released.",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/reservation/"
          },
          {
            "type": "pathParameter",
            "value": "token"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:Token"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-reservations:CreateReservationRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-reservations:GetReservationDetails"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "token": "ABC123456DEF789GHI"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "reserve": [
                  {
                    "itemNumber": "31001",
                    "quantity": 3,
                    "content": [
                      {
                        "admissionCode": "CASTLE",
                        "scheduleId": 452
                      }
                    ]
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "token": "ABC123456DEF789GHI",
                "reservationStatus": "registered",
                "reservations": [
                  {
                    "itemNumber": "31001",
                    "quantity": 3,
                    "ticket": {
                      "validFrom": "2024-10-15T00:00:00Z",
                      "validUntil": "2024-10-15T23:59:59Z",
                      "unitPrice": 80,
                      "unitPriceInclVat": 100,
                      "currencyCode": "DKK"
                    },
                    "content": [
                      {
                        "admissionDetails": {
                          "code": "CASTLE",
                          "default": true,
                          "included": "mandatory",
                          "description": {
                            "title": "Castle Museum Entrance",
                            "subtitle": "Adult Castle Ticket",
                            "name": "Explore the Castle",
                            "description": "<b>Access</b> to the castle exhibit",
                            "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                          },
                          "scheduleDetails": {
                            "id": 452,
                            "code": "MORNING",
                            "startDate": "2024-10-15",
                            "startTime": "09:00",
                            "endDate": "2024-10-15",
                            "endTime": "12:00",
                            "duration": "3 hours",
                            "description": "Morning schedule",
                            "arrivalFromTime": "08:30",
                            "arrivalUntilTime": "10:00"
                          }
                        }
                      }
                    ]
                  }
                ],
                "expiresAt": "2024-10-11T12:13:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"reserve\": [\n    {\n      \"itemNumber\": \"31001\",\n      \"quantity\": 3,\n      \"content\": [\n        {\n          \"admissionCode\": \"CASTLE\",\n          \"scheduleId\": 452\n        }\n      ]\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-reservations.cancelReservation": {
        "id": "endpoint_ticketing/service-reservations.cancelReservation",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-reservations"
        ],
        "description": "Cancels an existing registered reservation using its token. This endpoint releases the held tickets back into the system, making them available for other customers. Note that confirmed reservations cannot be canceled using this endpoint; they must be revoked through a different process.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/reservation/"
          },
          {
            "type": "pathParameter",
            "value": "token"
          },
          {
            "type": "literal",
            "value": "/cancel"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:Token"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-reservations:ReservationActionResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/cancel",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "token": "ABC123456DEF789GHI"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "reservationStatus": "cancelled"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/cancel",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-reservations.preConfirmReservation": {
        "id": "endpoint_ticketing/service-reservations.preConfirmReservation",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-reservations"
        ],
        "description": "Extends the lifespan of a provisional reservation identified by a token. Clients use this endpoint to keep the reservation active for a longer period before confirming it, preventing the tickets from expiring and being released back into the system. This action is typically taken when you want to extend the reservation's lifespan just before starting the payment process.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/reservation/"
          },
          {
            "type": "pathParameter",
            "value": "token"
          },
          {
            "type": "literal",
            "value": "/pre-confirm"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:Token"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-reservations:ReservationActionResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/pre-confirm",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "token": "ABC123456DEF789GHI"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "reservationStatus": "registered",
                "expiresAt": "2024-10-11T12:13:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/pre-confirm",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-reservations.confirmReservation": {
        "id": "endpoint_ticketing/service-reservations.confirmReservation",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-reservations"
        ],
        "description": "Finalizes a provisional reservation, turning it into a confirmed booking. This endpoint requires the reservation token and may include additional customer information such as ticket holder details and payment reference. Upon successful confirmation, the reservation status is updated, and ticket numbers are assigned.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/reservation/"
          },
          {
            "type": "pathParameter",
            "value": "token"
          },
          {
            "type": "literal",
            "value": "/confirm"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:Token"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-reservations:ConfirmReservationRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-reservations:GetReservationDetails"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/confirm",
            "responseStatusCode": 200,
            "name": "ExampleConfirmReservation1",
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "token": "ABC123456DEF789GHI"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "ticketHolder": "John Doe",
                "notificationAddress": "john.doe@acme.com",
                "paymentReference": "PAY123456"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "token": "ABC123456DEF789GHI",
                "reservationStatus": "confirmed",
                "reservations": [
                  {
                    "itemNumber": "31001",
                    "quantity": 2,
                    "ticket": {
                      "validFrom": "2024-10-15T00:00:00Z",
                      "validUntil": "2024-10-15T23:59:59Z",
                      "unitPrice": 80,
                      "unitPriceInclVat": 100,
                      "currencyCode": "DKK",
                      "ticketNumbers": [
                        "TICKET123",
                        "TICKET124"
                      ],
                      "pinCode": "12-34",
                      "ticketHolder": "John Doe"
                    },
                    "content": [
                      {
                        "admissionDetails": {
                          "code": "CASTLE",
                          "default": true,
                          "included": "mandatory",
                          "description": {
                            "title": "Castle Museum Entrance",
                            "subtitle": "Adult Castle Ticket",
                            "name": "Explore the Castle",
                            "description": "<b>Access</b> to the castle exhibit",
                            "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                          },
                          "scheduleDetails": {
                            "id": 452,
                            "code": "MORNING",
                            "startDate": "2024-10-15",
                            "startTime": "09:00",
                            "endDate": "2024-10-15",
                            "endTime": "12:00",
                            "duration": "3 hours",
                            "description": "Morning schedule",
                            "arrivalFromTime": "08:30",
                            "arrivalUntilTime": "10:00"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/confirm \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"ticketHolder\": \"John Doe\",\n  \"notificationAddress\": \"john.doe@acme.com\",\n  \"paymentReference\": \"PAY123456\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-reservations.getReservation": {
        "id": "endpoint_ticketing/service-reservations.getReservation",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-reservations"
        ],
        "description": "Retrieves the current details of an existing reservation using its token. This endpoint allows clients to check the status, contents, and expiration time of a reservation, whether it's registered or confirmed.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/reservation/"
          },
          {
            "type": "pathParameter",
            "value": "token"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:Token"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-reservations:GetReservationDetails"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "token": "ABC123456DEF789GHI"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "token": "ABC123456DEF789GHI",
                "reservationStatus": "registered",
                "reservations": [
                  {
                    "itemNumber": "31001",
                    "quantity": 2,
                    "ticket": {
                      "validFrom": "2024-10-15T00:00:00Z",
                      "validUntil": "2024-10-15T23:59:59Z",
                      "unitPrice": 80,
                      "unitPriceInclVat": 100,
                      "currencyCode": "DKK"
                    },
                    "content": [
                      {
                        "admissionDetails": {
                          "code": "CASTLE",
                          "default": true,
                          "included": "mandatory",
                          "description": {
                            "title": "Castle Museum Entrance",
                            "subtitle": "Adult Castle Ticket",
                            "name": "Explore the Castle",
                            "description": "<b>Access</b> to the castle exhibit",
                            "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                          },
                          "scheduleDetails": {
                            "id": 452,
                            "code": "MORNING",
                            "startDate": "2024-10-15",
                            "startTime": "09:00",
                            "endDate": "2024-10-15",
                            "endTime": "12:00",
                            "duration": "3 hours",
                            "description": "Morning schedule",
                            "arrivalFromTime": "08:30",
                            "arrivalUntilTime": "10:00"
                          }
                        }
                      }
                    ]
                  }
                ],
                "expiresAt": "2024-10-11T12:13:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "token": "ABC123456DEF789GHI"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "token": "ABC123456DEF789GHI",
                "reservationStatus": "confirmed",
                "reservations": [
                  {
                    "itemNumber": "31001",
                    "quantity": 2,
                    "ticket": {
                      "validFrom": "2024-10-15T00:00:00Z",
                      "validUntil": "2024-10-15T23:59:59Z",
                      "unitPrice": 80,
                      "unitPriceInclVat": 100,
                      "currencyCode": "DKK",
                      "ticketNumbers": [
                        "TICKET123",
                        "TICKET124"
                      ],
                      "pinCode": "12-34",
                      "ticketHolder": "John Doe"
                    },
                    "content": [
                      {
                        "admissionDetails": {
                          "code": "CASTLE",
                          "default": true,
                          "included": "mandatory",
                          "description": {
                            "title": "Castle Museum Entrance",
                            "subtitle": "Adult Castle Ticket",
                            "name": "Explore the Castle",
                            "description": "<b>Access</b> to the castle exhibit",
                            "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                          },
                          "scheduleDetails": {
                            "id": 452,
                            "code": "MORNING",
                            "startDate": "2024-10-15",
                            "startTime": "09:00",
                            "endDate": "2024-10-15",
                            "endTime": "12:00",
                            "duration": "3 hours",
                            "description": "Morning schedule",
                            "arrivalFromTime": "08:30",
                            "arrivalUntilTime": "10:00"
                          }
                        }
                      }
                    ]
                  }
                ],
                "expiresAt": "2024-10-11T12:13:00Z"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-reservations.getTickets": {
        "id": "endpoint_ticketing/service-reservations.getTickets",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-reservations"
        ],
        "description": "Obtains the detailed ticket information for a confirmed reservation identified by its token. Clients use this endpoint to retrieve ticket details such as ticket numbers, validity periods, and any other pertinent information needed for ticket delivery or display.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/reservation/"
          },
          {
            "type": "pathParameter",
            "value": "token"
          },
          {
            "type": "literal",
            "value": "/tickets"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:Token"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/types-composite:TicketDetails"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/tickets",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "token": "ABC123456DEF789GHI"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "ticketNumber": "TICKET123",
                  "reservationToken": "ABC123456DEF789GHI",
                  "validFrom": "2024-10-15T00:00:00Z",
                  "validUntil": "2024-10-15T23:59:59Z",
                  "admissionDetails": [
                    {
                      "code": "CASTLE",
                      "default": true,
                      "included": "mandatory",
                      "description": {
                        "title": "Castle Museum Entrance",
                        "subtitle": "Adult Castle Ticket",
                        "name": "Explore the Castle",
                        "description": "<b>Access</b> to the castle exhibit",
                        "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                      },
                      "scheduleDetails": {
                        "id": 452,
                        "code": "MORNING",
                        "startDate": "2024-10-15",
                        "startTime": "09:00",
                        "endDate": "2024-10-15",
                        "endTime": "12:00",
                        "duration": "3 hours",
                        "description": "Morning schedule",
                        "arrivalFromTime": "08:30",
                        "arrivalUntilTime": "10:00"
                      }
                    }
                  ],
                  "description": {
                    "title": "Castle Museum Entrance",
                    "subtitle": "Adult Castle Ticket",
                    "name": "Explore History",
                    "description": "<b>Access</b> to all castle exhibits",
                    "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                  },
                  "pinCode": "12-34",
                  "unitPrice": 80,
                  "unitPriceInclVat": 100,
                  "currencyCode": "DKK",
                  "ticketHolder": "John Doe"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/reservation/ABC123456DEF789GHI/tickets",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-ticket.getTicket": {
        "id": "endpoint_ticketing/service-ticket.getTicket",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-ticket"
        ],
        "description": "Retrieves detailed information about a specific ticket using its unique ticketNumber. Clients use this endpoint to obtain ticket details such as validity periods, admissions, and any associated information after a reservation has been confirmed.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/ticket/"
          },
          {
            "type": "pathParameter",
            "value": "ticketNumber"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "ticketNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:TicketId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-composite:TicketDetails"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "ticketNumber": "TICKET123"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "ticketNumber": "TICKET123",
                "reservationToken": "ABC123456DEF789GHI",
                "validFrom": "2024-10-15T00:00:00Z",
                "validUntil": "2024-10-15T23:59:59Z",
                "admissionDetails": [
                  {
                    "code": "CASTLE",
                    "default": true,
                    "included": "mandatory",
                    "description": {
                      "title": "Castle Museum Entrance",
                      "subtitle": "Adult Castle Ticket",
                      "name": "Explore the Castle",
                      "description": "<b>Access</b> to the castle exhibit",
                      "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                    },
                    "scheduleDetails": {
                      "id": 452,
                      "code": "MORNING",
                      "startDate": "2024-10-15",
                      "startTime": "09:00",
                      "endDate": "2024-10-15",
                      "endTime": "12:00",
                      "duration": "3 hours",
                      "description": "Morning schedule",
                      "arrivalFromTime": "08:30",
                      "arrivalUntilTime": "10:00"
                    }
                  }
                ],
                "description": {
                  "title": "Castle Museum Entrance",
                  "subtitle": "Adult Castle Ticket",
                  "name": "Explore History",
                  "description": "<b>Access</b> to all castle exhibits",
                  "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                },
                "pinCode": "12-34",
                "unitPrice": 80,
                "unitPriceInclVat": 100,
                "currencyCode": "DKK",
                "ticketHolder": "John Doe"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-ticket.revokeTicket": {
        "id": "endpoint_ticketing/service-ticket.revokeTicket",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-ticket"
        ],
        "description": "Revokes a ticket identified by its ticketNumber, effectively canceling it after it has been confirmed. This action makes the ticket invalid for entry or use and releases any held resources. Useful for handling refunds or cancellations initiated by the customer or the system.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/ticket/"
          },
          {
            "type": "pathParameter",
            "value": "ticketNumber"
          },
          {
            "type": "literal",
            "value": "/revoke"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "ticketNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:TicketId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-ticket:RevokedResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/revoke",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "ticketNumber": "TICKET123"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "ticketNumber": "TICKET123",
                "revoked": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/revoke",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-ticket.validateArrival": {
        "id": "endpoint_ticketing/service-ticket.validateArrival",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-ticket"
        ],
        "description": "Validates a ticket for arrival at a specific admission point, marking the ticket as admitted. This endpoint is typically used at entry points (e.g., gates or doors) to verify the ticket's validity and record the customer's arrival. Optional parameters like admissionCode and scannerStation provide context for the validation.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/ticket/"
          },
          {
            "type": "pathParameter",
            "value": "ticketNumber"
          },
          {
            "type": "literal",
            "value": "/validateArrival"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "ticketNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:TicketId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/service-ticket:ValidateTicketsRequest"
                  }
                }
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/service-ticket:AdmittedResponse"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/validateArrival",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "ticketNumber": "TICKET123"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "admissionCode": "CASTLE",
                "scannerStation": "Entrance"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "ticketNumber": "TICKET123",
                "admitted": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/validateArrival \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"admissionCode\": \"CASTLE\",\n  \"scannerStation\": \"Entrance\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-ticket.validateDeparture": {
        "id": "endpoint_ticketing/service-ticket.validateDeparture",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-ticket"
        ],
        "description": "Validates a ticket for departure from an admission, marking the ticket as departed. Used when tracking both entry and exit of customers, this endpoint helps manage capacities and ensures that the ticket is correctly processed upon leaving. Similar to arrival validation, it can include admissionCode and scannerStation.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/ticket/"
          },
          {
            "type": "pathParameter",
            "value": "ticketNumber"
          },
          {
            "type": "literal",
            "value": "/validateDeparture"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "ticketNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:TicketId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/service-ticket:ValidateTicketsRequest"
                  }
                }
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-ticket:DepartedResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/validateDeparture",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "ticketNumber": "TICKET123"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "admissionCode": "CASTLE",
                "scannerStation": "Exit"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "ticketNumber": "TICKET123",
                "departed": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/validateDeparture \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"admissionCode\": \"CASTLE\",\n  \"scannerStation\": \"Exit\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-ticket.validateMemberArrival": {
        "id": "endpoint_ticketing/service-ticket.validateMemberArrival",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-ticket"
        ],
        "description": "Validates the arrival of a member using their member card number, possibly creating a reservation on-the-fly if necessary. This endpoint is used when members, such as season pass holders or VIPs, arrive at an admission point without a prior reservation. It ensures that their access is recorded and any tickets are generated accordingly.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/ticket/"
          },
          {
            "type": "pathParameter",
            "value": "memberNumber"
          },
          {
            "type": "literal",
            "value": "/validateMemberArrival"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "memberNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:MemberNumber"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-ticket:CreateMemberReservationRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "list",
                "itemShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_ticketing/types-composite:TicketDetails"
                  }
                }
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/MEMBER123/validateMemberArrival",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "memberNumber": "MEMBER123"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "reserve": [
                  {
                    "itemNumber": "31001",
                    "quantity": 1
                  }
                ]
              }
            },
            "responseBody": {
              "type": "json",
              "value": [
                {
                  "ticketNumber": "TICKET123",
                  "reservationToken": "ABC123456DEF789GHI",
                  "validFrom": "2024-10-15T00:00:00Z",
                  "validUntil": "2024-10-15T23:59:59Z",
                  "admissionDetails": [
                    {
                      "code": "CASTLE",
                      "default": true,
                      "included": "mandatory",
                      "description": {
                        "title": "Castle Museum Entrance",
                        "subtitle": "Adult Castle Ticket",
                        "name": "Explore the Castle",
                        "description": "<b>Access</b> to the castle exhibit",
                        "fullDescription": "<p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p>"
                      },
                      "scheduleDetails": {
                        "id": 452,
                        "code": "MORNING",
                        "startDate": "2024-10-15",
                        "startTime": "09:00",
                        "endDate": "2024-10-15",
                        "endTime": "12:00",
                        "duration": "3 hours",
                        "description": "Morning schedule",
                        "arrivalFromTime": "08:30",
                        "arrivalUntilTime": "10:00"
                      }
                    }
                  ],
                  "description": {
                    "title": "Castle Museum Entrance",
                    "subtitle": "Adult Castle Ticket",
                    "name": "Explore History",
                    "description": "<b>Access</b> to all castle exhibits",
                    "fullDescription": "<p>Step back in time and immerse yourself in the rich history of our castle museum.  Discover fascinating artifacts, explore grand halls, and learn about the lives of the people who once lived within these walls.</p> <p>Experience the grandeur of the castle's architecture and marvel at its intricate details.  Walk through beautifully decorated rooms and admire the stunning artwork and furniture on display.</p> <p>Join a guided tour to gain deeper insights into the castle's history and hear captivating stories  about its past. Learn about the battles fought, the royal inhabitants, and the secrets that lie hidden within these ancient walls.</p>"
                  },
                  "pinCode": "12-34",
                  "ticketHolder": "John Doe"
                }
              ]
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/MEMBER123/validateMemberArrival \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"reserve\": [\n    {\n      \"itemNumber\": \"31001\",\n      \"quantity\": 1\n    }\n  ]\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-ticket.sendToWallet": {
        "id": "endpoint_ticketing/service-ticket.sendToWallet",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-ticket"
        ],
        "description": "Sends a confirmed ticket as an e-ticket (\"apple\" wallet) to the customer's email address or phone number specified in the request. This endpoint facilitates electronic delivery of tickets, allowing customers to receive and present their tickets digitally. Useful for post-purchase communications and ensuring customers have access to their tickets.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/ticket/"
          },
          {
            "type": "pathParameter",
            "value": "ticketNumber"
          },
          {
            "type": "literal",
            "value": "/sendToWallet"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "ticketNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:TicketId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-ticket:SendTicketRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-ticket:TicketSentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/sendToWallet",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "ticketNumber": "TICKET123"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "notificationAddress": "john@acme.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "ticketNumber": "TICKET123",
                "ticketSent": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/sendToWallet \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"notificationAddress\": \"john@acme.com\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_ticketing/service-ticket.exchangeForCoupon": {
        "id": "endpoint_ticketing/service-ticket.exchangeForCoupon",
        "namespace": [
          "subpackage_ticketing",
          "subpackage_ticketing/service-ticket"
        ],
        "description": "Exchanges a ticket for a coupon, which can be used for discounts on future purchases. This endpoint is used when a customer opts to convert their ticket into a coupon, providing multiple value retention options. The ticket is validated, and a coupon is issued, providing value retention for the customer.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasguid"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "saasenv"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "company"
          },
          {
            "type": "literal",
            "value": "/ticketing"
          },
          {
            "type": "literal",
            "value": "/ticket/"
          },
          {
            "type": "pathParameter",
            "value": "ticketNumber"
          },
          {
            "type": "literal",
            "value": "/exchangeForCoupon"
          }
        ],
        "defaultEnvironment": "Production",
        "environments": [
          {
            "id": "Production",
            "baseUrl": "https://api.npretail.app"
          }
        ],
        "pathParameters": [
          {
            "key": "saasguid",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasGuid"
              }
            }
          },
          {
            "key": "saasenv",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:SaasEnv"
              }
            }
          },
          {
            "key": "company",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:Company"
              }
            }
          },
          {
            "key": "ticketNumber",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/types-simple:TicketId"
              }
            }
          }
        ],
        "requestHeaders": [
          {
            "key": "x-api-version",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_global-api-types:ApiVersionDate"
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-ticket:GetTicketCouponRequest"
              }
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_ticketing/service-ticket:TicketCouponResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/exchangeForCoupon",
            "responseStatusCode": 200,
            "pathParameters": {
              "saasguid": "01234567-89ab-cdef-0123-456789abcdef",
              "saasenv": "production",
              "company": "CRONUS%20International%20Ltd.",
              "ticketNumber": "TICKET123"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "ticketNumber": "TICKET123",
                "couponCode": "DISCOUNT10"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "couponId": "COUPON123"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.npretail.app/01234567-89ab-cdef-0123-456789abcdef/production/CRONUS%20International%20Ltd./ticketing/ticket/TICKET123/exchangeForCoupon \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"ticketNumber\": \"TICKET123\",\n  \"couponCode\": \"DISCOUNT10\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_global-api-types:ApiVersionDate": {
        "name": "ApiVersionDate",
        "description": "The x-api-version header is to specify which version of the API a client wants to interact with. This allows the server to provide different responses or behaviors based on the version provided. Version is a date in the format \"YYYY-MM-DD\". When not specified, the latest version is assumed.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_global-api-types:SaasGuid": {
        "name": "SaasGuid",
        "description": "A unique identifier (GUID) for the Business Central tenant in the Software as a Service (SaaS) environment. [More details.](/url-paths#1-saasguid-saas-guid)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_global-api-types:SaasEnv": {
        "name": "SaasEnv",
        "description": "Specifies which environment of the Business Central tenant you want to access. [More details.](/url-paths#2-saasenv-saas-environment)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_global-api-types:Company": {
        "name": "Company",
        "description": "The name of the specific company within the chosen Business Central environment. [More details.](/url-paths#3-company)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/service-card:AddCardRequest": {
        "name": "AddCardRequest",
        "description": "Request to add an additional member card",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cardNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:CardNumber"
                }
              }
            },
            {
              "key": "expiryDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ExpiryDate"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-card:AddCardResponse": {
        "name": "AddCardResponse",
        "description": "Response to adding an additional member card",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "card",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberCardEntity"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-card:ReplaceCardRequest": {
        "name": "ReplaceCardRequest",
        "description": "Request to add an additional member card",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cardNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CardNumber"
                    }
                  }
                }
              }
            },
            {
              "key": "expiryDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:ExpiryDate"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-card:ReplaceCardResponse": {
        "name": "ReplaceCardResponse",
        "description": "Response to adding an additional member card",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "card",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-composite:MemberCardEntity"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-card:GetCardResponse": {
        "name": "GetCardResponse",
        "description": "Response to getting a card",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "card",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberCardDTOResponse"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-card:AdmissionCode": {
        "name": "AdmissionCode",
        "description": "A unique code that identifies a specific admission.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/service-card:TicketId": {
        "name": "TicketId",
        "description": "The unique identifier of a ticket",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/service-card:RegisterArrivalRequest": {
        "name": "RegisterArrivalRequest",
        "description": "Request to register a member's arrival",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "admissionCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/service-card:AdmissionCode"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-card:RegisterArrivalResponse": {
        "name": "RegisterArrivalResponse",
        "description": "Response to registering a member's arrival",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cardNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:CardNumber"
                }
              }
            },
            {
              "key": "ticketNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/service-card:TicketId"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-card:SendWalletRequest": {
        "name": "SendWalletRequest",
        "description": "Request to send a card to the wallet",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "notificationAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:NotificationAddress"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-card:WalletSentResponse": {
        "name": "WalletSentResponse",
        "description": "Response to sending a card to the wallet",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cardNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:CardNumber"
                }
              }
            },
            {
              "key": "cardSent",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-catalog:StoreCatalogResponse": {
        "name": "StoreCatalogResponse",
        "description": "Represents the catalog of membership items available at a specific store. Includes the store code and a list of items that customers can browse and purchase.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "storeCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:StoreCode"
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_memberships/types/types-composite:MembershipItemCatalogDTO"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:GetMembershipHistoryResponse": {
        "name": "GetMembershipHistoryResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:ConfirmMembershipActivateResponse": {
        "name": "ConfirmMembershipActivateResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:CancelMembershipRequest": {
        "name": "CancelMembershipRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cancelDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:LifecycleDate"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:ConfirmMembershipCancelResponse": {
        "name": "ConfirmMembershipCancelResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:RenewMembershipRequest": {
        "name": "RenewMembershipRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "renewWithItem",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ItemNumber"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:ConfirmMembershipRenewResponse": {
        "name": "ConfirmMembershipRenewResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:GetRenewOptionsResponse": {
        "name": "GetRenewOptionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "renewalOptions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-composite:LifecycleOptionDTO"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:UpgradeMembershipRequest": {
        "name": "UpgradeMembershipRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "renewWithItem",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ItemNumber"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:ConfirmMembershipUpgradeResponse": {
        "name": "ConfirmMembershipUpgradeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:GetUpgradeOptionsResponse": {
        "name": "GetUpgradeOptionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "renewalOptions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-composite:LifecycleOptionDTO"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:ExtendMembershipRequest": {
        "name": "ExtendMembershipRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "extendWithItem",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ItemNumber"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:ConfirmMembershipExtendResponse": {
        "name": "ConfirmMembershipExtendResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipLifecycleDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-lifecycle:GetExtendOptionsResponse": {
        "name": "GetExtendOptionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "extendOptions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-composite:LifecycleOptionDTO"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:AddMemberRequest": {
        "name": "AddMemberRequest",
        "description": "Request to add a member to a membership",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "membershipId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MembershipId"
                }
              }
            },
            {
              "key": "member",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberWithCardDTORequest"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:AddMemberResponse": {
        "name": "AddMemberResponse",
        "description": "Response to adding a member to a membership",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "member",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:GetMemberResponse": {
        "name": "GetMemberResponse",
        "description": "Response to retrieving a member",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "member",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:GetMemberListResponse": {
        "name": "GetMemberListResponse",
        "description": "Response to retrieving a member",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "members",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-composite:MemberDTO"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:GetMemberImageResponse": {
        "name": "GetMemberImageResponse",
        "description": "Response to retrieving a member image",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "image",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Base64Image"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:SetMemberImageRequest": {
        "name": "SetMemberImageRequest",
        "description": "Request to set a member image",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "image",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Base64Image"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:SetMemberImageResponse": {
        "name": "SetMemberImageResponse",
        "description": "Response to setting a member image",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mediaId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MediaId"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:BlockMemberResponse": {
        "name": "BlockMemberResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "member",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberEntityResponse"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:UnblockMemberResponse": {
        "name": "UnblockMemberResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "member",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberEntityResponse"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:UpdateMemberRequest": {
        "name": "UpdateMemberRequest",
        "description": "Request to update a member",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "member",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberEntityRequest"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-member:UpdateMemberResponse": {
        "name": "UpdateMemberResponse",
        "description": "Response to updating a member",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "member",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberEntityResponse"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-membership:CreateMembershipRequest": {
        "name": "CreateMembershipRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "itemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ItemNumber"
                }
              }
            },
            {
              "key": "activationDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:ActivationDate"
                    }
                  }
                }
              }
            },
            {
              "key": "companyName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CompanyName"
                    }
                  }
                }
              }
            },
            {
              "key": "preassignedCustomerNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:PreassignedCustomerNumber"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-membership:CreateMembershipResponse": {
        "name": "CreateMembershipResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipEntity"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-membership:GetMembershipResponse": {
        "name": "GetMembershipResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipEntity"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-membership:BlockMembershipResponse": {
        "name": "BlockMembershipResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipEntity"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-membership:UnblockMembershipResponse": {
        "name": "UnblockMembershipResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipEntity"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-membership:GetMembersResponse": {
        "name": "GetMembersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cacheInstanceId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CacheInstanceId"
                    }
                  }
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/service-misc:ResolveMemberIdentifierResponse": {
        "name": "ResolveMemberIdentifierResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:IdentifierType"
                }
              }
            },
            {
              "key": "membershipId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MembershipId"
                }
              }
            },
            {
              "key": "memberId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MemberId"
                }
              }
            },
            {
              "key": "cardId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:CardId"
                }
              }
            },
            {
              "key": "membershipNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MembershipNumber"
                }
              }
            },
            {
              "key": "memberNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MemberNumber"
                }
              }
            },
            {
              "key": "cardNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:CardNumber"
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MembershipDTO": {
        "name": "MembershipDTO",
        "description": "This is a composite type representing a Membership and its associated Members. It extends the MembershipEntity and includes a list of members linked to the membership.",
        "shape": {
          "type": "object",
          "extends": [
            "type_memberships/types/types-composite:MembershipEntity"
          ],
          "properties": [
            {
              "key": "members",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_memberships/types/types-composite:MemberDTOWithinMembership"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MemberDTOWithinMembership": {
        "name": "MemberDTOWithinMembership",
        "description": "This composite type describes the relationship between a Member and a Membership. It includes details about the member's role within the membership and the membership details.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Role"
                }
              }
            },
            {
              "key": "contactNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ContactNumber"
                }
              }
            },
            {
              "key": "member",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberWithCardDTOResponse"
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MemberDTO": {
        "name": "MemberDTO",
        "description": "This is a composite type representing a Member and the Memberships they are associated with. It extends the MemberEntity and includes a list of memberships to which the member belongs.",
        "shape": {
          "type": "object",
          "extends": [
            "type_memberships/types/types-composite:MemberEntityResponse"
          ],
          "properties": [
            {
              "key": "memberships",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_memberships/types/types-composite:MembershipDTOWithinMember"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MembershipDTOWithinMember": {
        "name": "MembershipDTOWithinMember",
        "description": "This object is a composite type that describes the relationship between the MembershipEntity and the MemberEntity.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Role"
                }
              }
            },
            {
              "key": "contactNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ContactNumber"
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipToCardDTO"
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MemberCardDTOResponse": {
        "name": "MemberCardDTOResponse",
        "description": "This is a composite type representing a MemberCard along with the associated Member and Membership. It includes information about the member who holds the card and the membership the card is tied to.",
        "shape": {
          "type": "object",
          "extends": [
            "type_memberships/types/types-composite:MemberCardEntity"
          ],
          "properties": [
            {
              "key": "member",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MemberEntityResponse"
                }
              }
            },
            {
              "key": "membership",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-composite:MembershipEntity"
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MemberWithCardDTORequest": {
        "name": "MemberWithCardDTORequest",
        "description": "This is a request DTO used to create or update a Member along with their associated cards. It extends the MemberEntityRequest and optionally includes a list of cards for the member.",
        "shape": {
          "type": "object",
          "extends": [
            "type_memberships/types/types-composite:MemberEntityRequest"
          ],
          "properties": [
            {
              "key": "cards",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_memberships/types/types-composite:MemberCardEntity"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MemberWithCardDTOResponse": {
        "name": "MemberWithCardDTOResponse",
        "description": "This is a response DTO representing a Member and their associated cards. It extends the MemberEntityResponse and includes a list of cards tied to the member.",
        "shape": {
          "type": "object",
          "extends": [
            "type_memberships/types/types-composite:MemberEntityResponse"
          ],
          "properties": [
            {
              "key": "cards",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-composite:MemberCardEntity"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MembershipToCardDTO": {
        "name": "MembershipToCardDTO",
        "description": "This composite type represents a Membership along with its associated Cards. It extends the MembershipEntity and includes a list of cards linked to members of the membership.",
        "shape": {
          "type": "object",
          "extends": [
            "type_memberships/types/types-composite:MembershipEntity"
          ],
          "properties": [
            {
              "key": "cards",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-composite:MemberCardEntity"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MembershipEntity": {
        "name": "MembershipEntity",
        "description": "The MembershipEntity describes the basic attributes of a Membership.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "membershipId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MembershipId"
                }
              }
            },
            {
              "key": "membershipNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MembershipNumber"
                }
              }
            },
            {
              "key": "communityCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:CommunityCode"
                }
              }
            },
            {
              "key": "membershipCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MembershipCode"
                }
              }
            },
            {
              "key": "issueDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:IssueDate"
                }
              }
            },
            {
              "key": "validFromDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:ValidFromDate"
                    }
                  }
                }
              }
            },
            {
              "key": "validUntilDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:ValidUntilDate"
                    }
                  }
                }
              }
            },
            {
              "key": "customerNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CustomerNumber"
                    }
                  }
                }
              }
            },
            {
              "key": "documentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:DocumentId"
                    }
                  }
                }
              }
            },
            {
              "key": "blocked",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Blocked"
                }
              }
            },
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Active"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MemberEntityRequest": {
        "name": "MemberEntityRequest",
        "description": "The MemberEntityRequest defines the basic properties required to create or update a Member.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:FirstName"
                    }
                  }
                }
              }
            },
            {
              "key": "middleName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:MiddleName"
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:LastName"
                    }
                  }
                }
              }
            },
            {
              "key": "address",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Address"
                    }
                  }
                }
              }
            },
            {
              "key": "postCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:PostCode"
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:City"
                    }
                  }
                }
              }
            },
            {
              "key": "country",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Country"
                    }
                  }
                }
              }
            },
            {
              "key": "birthday",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Birthday"
                    }
                  }
                }
              }
            },
            {
              "key": "gender",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Gender"
                    }
                  }
                }
              }
            },
            {
              "key": "newsletter",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Newsletter"
                    }
                  }
                }
              }
            },
            {
              "key": "phoneNo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:PhoneNo"
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Email"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MemberEntityResponse": {
        "name": "MemberEntityResponse",
        "description": "The MemberEntityResponse extends the MemberEntityRequest and includes additional properties such as the member's ID, membership number, and blocked status. This DTO is used when returning a member's details.",
        "shape": {
          "type": "object",
          "extends": [
            "type_memberships/types/types-composite:MemberEntityRequest"
          ],
          "properties": [
            {
              "key": "memberId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MemberId"
                }
              }
            },
            {
              "key": "memberNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MemberNumber"
                }
              }
            },
            {
              "key": "blocked",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Blocked"
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MemberCardEntity": {
        "name": "MemberCardEntity",
        "description": "The MemberCardEntity describes the attributes of a card linked to a Member. It is used within other composite DTOs to represent the cards associated with a member or membership.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cardId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:CardId"
                    }
                  }
                }
              }
            },
            {
              "key": "cardNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:CardNumber"
                }
              }
            },
            {
              "key": "expiryDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ExpiryDate"
                }
              }
            },
            {
              "key": "temporary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:TemporaryCard"
                }
              }
            },
            {
              "key": "blocked",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Blocked"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MembershipLifecycleDTO": {
        "name": "MembershipLifecycleDTO",
        "description": "The MembershipLifecycleDTO is a composite type representing the timeline of a membership. It includes details when the membership was activated, renewed, upgraded, or extended.",
        "shape": {
          "type": "object",
          "extends": [
            "type_memberships/types/types-composite:MembershipEntity"
          ],
          "properties": [
            {
              "key": "entries",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-composite:MembershipTimeEntryEntity"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MembershipTimeEntryEntity": {
        "name": "MembershipTimeEntryEntity",
        "description": "The MembershipTimeEntryEntity describes the attributes of a time entry linked to a Membership. It is used within other composite DTOs to represent the validity associated with a membership.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "timeEntryId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:TimeEntryId"
                }
              }
            },
            {
              "key": "validFromDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ValidFromDate"
                }
              }
            },
            {
              "key": "validUntilDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ValidUntilDate"
                }
              }
            },
            {
              "key": "activateOnFirstUse",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ActivateOnFirstUse"
                }
              }
            },
            {
              "key": "lifecycleAction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:LifecycleAction"
                }
              }
            },
            {
              "key": "itemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ItemNumber"
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Amount"
                }
              }
            },
            {
              "key": "amountInclVat",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:AmountInclVat"
                }
              }
            },
            {
              "key": "receiptNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ReceiptNumber"
                }
              }
            },
            {
              "key": "receiptLine",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ReceiptLine"
                }
              }
            },
            {
              "key": "membershipCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MembershipCode"
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:LifecycleOptionDTO": {
        "name": "LifecycleOptionDTO",
        "description": "This composite type represents an item used to facilitate the renewal of a membership. It includes details such as the item number, renewal period, and pricing.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ItemNumber"
                }
              }
            },
            {
              "key": "lifecycleAction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:LifecycleAction"
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "targetMembershipCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MembershipCode"
                }
              }
            },
            {
              "key": "periodStart",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:PeriodStart"
                }
              }
            },
            {
              "key": "periodEnd",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:PeriodEnd"
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Amount"
                }
              }
            },
            {
              "key": "amountInclVat",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:AmountInclVat"
                }
              }
            },
            {
              "key": "memberCardinality",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "presentationOrder",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-composite:MembershipItemCatalogDTO": {
        "name": "MembershipItemCatalogDTO",
        "description": "Describes a membership item available for sale, including its unique identifier, pricing, type, and descriptions, Used to present detailed membership options to customers.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ItemNumber"
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:ItemMemberType"
                }
              }
            },
            {
              "key": "recommendedPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:AmountInclVat"
                }
              }
            },
            {
              "key": "membershipCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:MembershipCode"
                }
              }
            },
            {
              "key": "itemDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Description"
                }
              }
            },
            {
              "key": "shortDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Description"
                }
              }
            },
            {
              "key": "fullDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:Description"
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-simple:CommunityCode": {
        "name": "CommunityCode",
        "description": "Code representing the community associated with the membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:MembershipCode": {
        "name": "MembershipCode",
        "description": "Code representing the type of membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Description": {
        "name": "Description",
        "description": "Description of the membership item.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:CacheInstanceId": {
        "name": "CacheInstanceId",
        "description": "Identifier for the NST instance. Providing this value will increase the performance of the API when the NST is load-balanced.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ItemNumber": {
        "name": "ItemNumber",
        "description": "Unique identifier for an item.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:MembershipId": {
        "name": "MembershipId",
        "description": "Unique identifier for a membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_memberships/types/types-simple:MembershipNumber": {
        "name": "MembershipNumber",
        "description": "Unique membership number.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:CustomerNumber": {
        "name": "CustomerNumber",
        "description": "Customer number associated with the membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ActivationDate": {
        "name": "ActivationDate",
        "description": "The date from which the membership should be active. Setup can dictated and override this date.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_memberships/types/types-simple:CompanyName": {
        "name": "CompanyName",
        "description": "The name of the company associated with the membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:PreassignedCustomerNumber": {
        "name": "PreassignedCustomerNumber",
        "description": "A preassigned customer number for the membership. When there is no customer number, the system will generate one.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:IssueDate": {
        "name": "IssueDate",
        "description": "The date the membership was issued.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ValidFromDate": {
        "name": "ValidFromDate",
        "description": "The date the membership starts being valid.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ValidUntilDate": {
        "name": "ValidUntilDate",
        "description": "The date the membership expires.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_memberships/types/types-simple:TimeEntryId": {
        "name": "TimeEntryId",
        "description": "Unique identifier for a time entry.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_memberships/types/types-simple:LifecycleActionEnum": {
        "name": "LifecycleActionEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "new"
            },
            {
              "value": "renew"
            },
            {
              "value": "upgrade"
            },
            {
              "value": "extend"
            },
            {
              "value": "auto_renew"
            }
          ]
        }
      },
      "type_memberships/types/types-simple:LifecycleAction": {
        "name": "LifecycleAction",
        "description": "The lifecycle action for the membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_memberships/types/types-simple:LifecycleActionEnum"
          }
        }
      },
      "type_memberships/types/types-simple:LifecycleDate": {
        "name": "LifecycleDate",
        "description": "The lifecycle dates for the membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_memberships/types/types-simple:PeriodStart": {
        "name": "PeriodStart",
        "description": "The start date for option.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_memberships/types/types-simple:PeriodEnd": {
        "name": "PeriodEnd",
        "description": "The end date for the option.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Amount": {
        "name": "Amount",
        "description": "The amount associated with the membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      },
      "type_memberships/types/types-simple:AmountInclVat": {
        "name": "AmountInclVat",
        "description": "The amount including VAT associated with the membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ReceiptNumber": {
        "name": "ReceiptNumber",
        "description": "The receipt number associated with the sale.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ReceiptLine": {
        "name": "ReceiptLine",
        "description": "The receipt line number associated with the sale.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_memberships/types/types-simple:MemberId": {
        "name": "MemberId",
        "description": "Unique identifier for a member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ContactNumber": {
        "name": "ContactNumber",
        "description": "The contact number for the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:MemberNumber": {
        "name": "MemberNumber",
        "description": "Unique number identifying the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:FirstName": {
        "name": "FirstName",
        "description": "The first name of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:MiddleName": {
        "name": "MiddleName",
        "description": "The middle name of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:LastName": {
        "name": "LastName",
        "description": "The last name of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Address": {
        "name": "Address",
        "description": "The address of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:PostCode": {
        "name": "PostCode",
        "description": "The postal code of the member's address.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:City": {
        "name": "City",
        "description": "The city where the member resides.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Country": {
        "name": "Country",
        "description": "The country where the member resides.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Birthday": {
        "name": "Birthday",
        "description": "The birth date of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_memberships/types/types-simple:GenderEnum": {
        "name": "GenderEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "not_specified"
            },
            {
              "value": "female"
            },
            {
              "value": "male"
            },
            {
              "value": "other"
            }
          ]
        }
      },
      "type_memberships/types/types-simple:Gender": {
        "name": "Gender",
        "description": "The gender of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_memberships/types/types-simple:GenderEnum"
          }
        }
      },
      "type_memberships/types/types-simple:Newsletter": {
        "name": "Newsletter",
        "description": "Indicates whether the member is subscribed to the newsletter.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_memberships/types/types-simple:PhoneNo": {
        "name": "PhoneNo",
        "description": "The phone number of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Email": {
        "name": "Email",
        "description": "The email address of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Base64Image": {
        "name": "Base64Image",
        "description": "Base64 encoded image of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "base64"
            }
          }
        }
      },
      "type_memberships/types/types-simple:GDPRApprovalEnum": {
        "name": "GDPRApprovalEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "pending"
            },
            {
              "value": "accepted"
            },
            {
              "value": "rejected"
            },
            {
              "value": "delegated"
            }
          ]
        }
      },
      "type_memberships/types/types-simple:GDPRApproval": {
        "name": "GDPRApproval",
        "description": "Indicates if the member has given GDPR approval.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_memberships/types/types-simple:NotificationMethod": {
        "name": "NotificationMethod",
        "description": "The preferred notification method for the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:NotificationAddress": {
        "name": "NotificationAddress",
        "description": "The email address or mobile phone number to send cards and notifications to",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:CardId": {
        "name": "CardId",
        "description": "Unique identifier for a card.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_memberships/types/types-simple:CardNumber": {
        "name": "CardNumber",
        "description": "Unique identifier for a card.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ExpiryDate": {
        "name": "ExpiryDate",
        "description": "The expiry date of the card.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_memberships/types/types-simple:TemporaryCard": {
        "name": "TemporaryCard",
        "description": "Indicates whether the card is temporary.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_memberships/types/types-simple:RoleEnum": {
        "name": "RoleEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "membership_admin"
            },
            {
              "value": "member"
            },
            {
              "value": "guardian"
            },
            {
              "value": "dependant"
            }
          ]
        }
      },
      "type_memberships/types/types-simple:Role": {
        "name": "Role",
        "description": "The role of the member.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_memberships/types/types-simple:RoleEnum"
          }
        }
      },
      "type_memberships/types/types-simple:DocumentId": {
        "name": "DocumentId",
        "description": "Unique identifier for the membership document.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:MediaId": {
        "name": "MediaId",
        "description": "Unique identifier for the media.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "uuid"
            }
          }
        }
      },
      "type_memberships/types/types-simple:CreatedAt": {
        "name": "CreatedAt",
        "description": "Date and time when the membership period was created.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "datetime"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Context": {
        "name": "Context",
        "description": "Context name associated with the membership period.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Blocked": {
        "name": "Blocked",
        "description": "Indicates whether the membership period is blocked.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Active": {
        "name": "Active",
        "description": "Indicates whether the membership period is active.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ActivateOnFirstUse": {
        "name": "ActivateOnFirstUse",
        "description": "Specifies if the membership will activate upon first use.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ProductId": {
        "name": "ProductId",
        "description": "Identifier for the product associated with the membership period.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:LoyaltyProgram": {
        "name": "LoyaltyProgram",
        "description": "Name of the loyalty program associated with the membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:MemberCardinality": {
        "name": "MemberCardinality",
        "description": "Cardinality of the member in the membership.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_memberships/types/types-simple:MemberCount": {
        "name": "MemberCount",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "named",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "key": "anonymous",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-simple:AttributeCode": {
        "name": "AttributeCode",
        "description": "Code representing the specific attribute.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:AttributeName": {
        "name": "AttributeName",
        "description": "Name of the attribute.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:AttributeValue": {
        "name": "AttributeValue",
        "description": "Value assigned to the attribute.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Attribute": {
        "name": "Attribute",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:AttributeCode"
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:AttributeName"
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:AttributeValue"
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-simple:Attributes": {
        "name": "Attributes",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "attribute",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Attribute"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-simple:RequestFieldUpdate": {
        "name": "RequestFieldUpdate",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_memberships/types/types-simple:Field"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-simple:Field": {
        "name": "Field",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "entryNo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_memberships/types/types-simple:FieldEntryNo"
                }
              }
            }
          ]
        }
      },
      "type_memberships/types/types-simple:FieldEntryNo": {
        "name": "FieldEntryNo",
        "description": "Number representing the specific field id to update.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Limit": {
        "name": "Limit",
        "description": "The maximum number of results to return.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_memberships/types/types-simple:Offset": {
        "name": "Offset",
        "description": "The starting point for results, used for pagination.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_memberships/types/types-simple:IdentifierTypeEnum": {
        "name": "IdentifierTypeEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "membership"
            },
            {
              "value": "member"
            },
            {
              "value": "card"
            }
          ]
        }
      },
      "type_memberships/types/types-simple:IdentifierType": {
        "name": "IdentifierType",
        "description": "The type of identifier",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_memberships/types/types-simple:IdentifierTypeEnum"
          }
        }
      },
      "type_memberships/types/types-simple:StoreCode": {
        "name": "StoreCode",
        "description": "A unique identifier for a store - a logical grouping defining a subset of membership items. This is used to filter the list of membership related items returned by the API.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_memberships/types/types-simple:ItemMemberTypeEnum": {
        "name": "ItemMemberTypeEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "new_membership"
            },
            {
              "value": "add_member"
            },
            {
              "value": "add_card"
            },
            {
              "value": "replace_card"
            }
          ]
        }
      },
      "type_memberships/types/types-simple:ItemMemberType": {
        "name": "ItemMemberType",
        "description": "Type of membership item.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_systemservices/companies:CompanyResponse": {
        "name": "CompanyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "uuid"
                  }
                }
              }
            },
            {
              "key": "systemVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "displayName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_systemservices/companies:Companies": {
        "name": "Companies",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_systemservices/companies:CompanyResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_systemservices/helloworld:HelloWorld": {
        "name": "HelloWorld",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-capacity:AdmissionCapacity": {
        "name": "AdmissionCapacity",
        "description": "Provides detailed capacity and availability information for a specific admission associated with a ticket item. Includes pricing, quantity, and schedule details to help determine if the desired number of tickets can be reserved on a particular date.",
        "shape": {
          "type": "object",
          "extends": [
            "type_ticketing/types-composite:AdmissionBase"
          ],
          "properties": [
            {
              "key": "customerNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:CustomerNumber"
                    }
                  }
                }
              }
            },
            {
              "key": "referenceDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ReferenceDate"
                }
              }
            },
            {
              "key": "quantity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:NumberOfTickets"
                }
              }
            },
            {
              "key": "unitPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:UnitPrice"
                }
              }
            },
            {
              "key": "discountPct",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:DiscountPct"
                }
              }
            },
            {
              "key": "unitPriceIncludesVat",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:UnitPriceIncludesVat"
                }
              }
            },
            {
              "key": "vatPct",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:VatPct"
                }
              }
            },
            {
              "key": "schedules",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-capacity:Schedule"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-capacity:AdmissionSearch": {
        "name": "AdmissionSearch",
        "description": "Represents the criteria used to search for capacity information for an admission. Used in requests to specify the ticket item, date, quantity, and optionally filter by admission code or customer number.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ItemNumber"
                }
              }
            },
            {
              "key": "referenceDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:ReferenceDate"
                    }
                  }
                }
              }
            },
            {
              "key": "quantity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:NumberOfTickets"
                    }
                  }
                }
              }
            },
            {
              "key": "admissionCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:AdmissionCode"
                    }
                  }
                }
              }
            },
            {
              "key": "customerNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:CustomerNumber"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-capacity:Schedule": {
        "name": "Schedule",
        "description": "Contains information about a specific schedule or time slot for an admission, including whether it can be allocated (reserved), remaining capacity, pricing adjustments, and sales periods. Helps clients identify available schedules and understand any limitations or special pricing.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "allocatable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:Allocatable"
                }
              }
            },
            {
              "key": "allocationModel",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:AllocationModel"
                }
              }
            },
            {
              "key": "remainingCapacity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:RemainingCapacity"
                }
              }
            },
            {
              "key": "explanation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:AllocationExplanation"
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-composite:ScheduleDetails"
                }
              }
            },
            {
              "key": "price",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/service-capacity:SchedulePrice"
                }
              }
            },
            {
              "key": "sales",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/service-capacity:ScheduleSales"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-capacity:SchedulePrice": {
        "name": "SchedulePrice",
        "description": "Details pricing adjustments applied to an admission's base price for a specific schedule. Includes information on dynamic pricing options, adjustment amounts or percentages, and calculates the adjusted unit and total prices for the reservation.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "pricingOption",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:PricingOption"
                }
              }
            },
            {
              "key": "adjustmentAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:AdjustedAmount"
                }
              }
            },
            {
              "key": "adjustmentPct",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:AdjustedDiscountPct"
                }
              }
            },
            {
              "key": "adjustedUnitPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:AdjustedUnitPrice"
                }
              }
            },
            {
              "key": "adjustedTotalPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:AdjustedTotalPrice"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-capacity:ScheduleSales": {
        "name": "ScheduleSales",
        "description": "Specifies the sales period for a schedule, indicating when ticket sales start and end for that schedule. Informs clients about the booking window, enabling them to display availability and enforce booking rules accordingly.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "salesFromDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "salesFromTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "salesUntilDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "salesUntilTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-catalog:StoreCatalogResponse": {
        "name": "StoreCatalogResponse",
        "description": "Represents the catalog of ticket items available at a specific store. Includes the store code and a list of items that customers can browse and purchase.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "storeCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:StoreCode"
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-catalog:Item"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-catalog:Item": {
        "name": "Item",
        "description": "Describes a ticket item available for sale, including its unique identifier, pricing, type, descriptions, and associated admissions. Used to present detailed ticket options to customers.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ItemNumber"
                }
              }
            },
            {
              "key": "variants",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_ticketing/service-catalog:ItemVariant"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "recommendedPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/service-catalog:RecommendedPrice"
                }
              }
            },
            {
              "key": "ticketType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/service-catalog:TicketType"
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-composite:Descriptions"
                }
              }
            },
            {
              "key": "contents",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-catalog:AdmissionCatalog"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-catalog:ItemVariant": {
        "name": "ItemVariant",
        "description": "Additional details for an item number. If the item number is a variant, this will contain the variant code, description and the specific item number for that combination .",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "variantCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "eanItemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-catalog:RecommendedPrice": {
        "name": "RecommendedPrice",
        "description": "Suggests a base price for a ticket item before any adjustments like discounts or dynamic pricing. Assists in displaying price information to customers during their purchasing decision.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "unitPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:UnitPrice"
                }
              }
            },
            {
              "key": "unitPriceIncludesVat",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:UnitPriceIncludesVat"
                }
              }
            },
            {
              "key": "vatPct",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-catalog:TicketType": {
        "name": "TicketType",
        "description": "Categorizes the ticket item based on sales channels or functional groupings, such as \"WEB\" or \"POS\". Influences how the ticket is sold and processed within the system.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "category",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-catalog:AdmissionCatalog": {
        "name": "AdmissionCatalog",
        "description": "Details the admissions included with a ticket item, specifying access rights like entry to events or exhibits. Informs customers about what experiences are included with their purchase.",
        "shape": {
          "type": "object",
          "extends": [
            "type_ticketing/types-composite:AdmissionBase"
          ],
          "properties": [
            {
              "key": "capacityControl",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:CapacityControl"
                }
              }
            },
            {
              "key": "maxCapacity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "scheduleSelection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ScheduleSelection"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-reservations:CreateReservationRequest": {
        "name": "CreateReservationRequest",
        "description": "Used when initiating a new reservation for tickets. Contains a list of items (reserve) that the customer wants to reserve, specifying the ticket item numbers, quantities, and any additional content like admissions and schedules.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "reserve",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-reservations:CreateReservationItemRequest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-reservations:ConfirmReservationRequest": {
        "name": "ConfirmReservationRequest",
        "description": "Submitted when confirming a reservation, finalizing the ticket purchase. May include customer details such as ticketHolder name, notificationAddress for sending tickets or notifications, and a paymentReference to link the reservation to a payment transaction.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ticketHolder",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:TicketHolder"
                    }
                  }
                }
              }
            },
            {
              "key": "notificationAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:NotificationAddress"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentReference",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:PaymentReference"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-reservations:CreateReservationItemRequest": {
        "name": "CreateReservationItemRequest",
        "description": "Represents an individual ticket item within a reservation request. Includes the itemNumber, the desired quantity of tickets, and optional content detailing specific admissions or schedules associated with the ticket.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ItemNumber"
                }
              }
            },
            {
              "key": "quantity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:NumberOfTickets"
                }
              }
            },
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_ticketing/types-composite:TicketContentRequest"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-reservations:GetReservationDetails": {
        "name": "GetReservationDetails",
        "description": "Returned in response to reservation-related operations to provide the current state of the reservation. Includes the token identifying the reservation, its expiresAt timestamp, reservationStatus, and a list of reserved items (reservations) with their details.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:Token"
                }
              }
            },
            {
              "key": "expiresAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:ExpiresAt"
                    }
                  }
                }
              }
            },
            {
              "key": "reservationStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ReservationStatus"
                }
              }
            },
            {
              "key": "reservations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-reservations:ReservationItemDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-reservations:ReservationActionResponse": {
        "name": "ReservationActionResponse",
        "description": "Provides a simplified response after performing actions like canceling or pre-confirming a reservation. Includes the updated reservationStatus and optionally the new expiresAt time if the reservation's lifespan was extended.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "expiresAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:ExpiresAt"
                    }
                  }
                }
              }
            },
            {
              "key": "reservationStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ReservationStatus"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-reservations:ReservationItemDetails": {
        "name": "ReservationItemDetails",
        "description": "Contains detailed information about a specific item in a reservation. Includes the itemNumber, quantity reserved, associated ticket details, and a list of content items specifying admissions or other components included with the ticket.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ItemNumber"
                }
              }
            },
            {
              "key": "quantity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:NumberOfTickets"
                }
              }
            },
            {
              "key": "ticket",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/service-reservations:ReservationTicketDetails"
                }
              }
            },
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-reservations:TicketContentDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-reservations:TicketContentDetails": {
        "name": "TicketContentDetails",
        "description": "Provides details about the admissions or content associated with a reserved ticket item. Contains admissionDetails that specify the particular admissions, schedules, and any relevant information for each component of the ticket.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "admissionDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-composite:AdmissionDetails"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-reservations:AdmissionDetailsFull": {
        "name": "AdmissionDetailsFull",
        "description": "Extends AdmissionDetails with additional information specific to reservations, such as the reschedulePolicy. Offers comprehensive details about an admission, including policies affecting changes after reservation.",
        "shape": {
          "type": "object",
          "extends": [
            "type_ticketing/types-composite:AdmissionDetails"
          ],
          "properties": [
            {
              "key": "reschedulePolicy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-reservations:ReservationTicketDetails": {
        "name": "ReservationTicketDetails",
        "description": "Offers detailed ticket information within a reservation, including ticketNumbers if confirmed, validity periods (validFrom, validUntil), pricing details, and optional customer information like pinCode and ticketHolder name. Used to inform customers about their tickets and any actions they can perform.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ticketNumbers",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_ticketing/types-simple:TicketId"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "validFrom",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "validUntil",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "pinCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:PinCode"
                    }
                  }
                }
              }
            },
            {
              "key": "unitPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "unitPriceInclVat",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "ticketHolder",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:GetTicketsRequest": {
        "name": "GetTicketsRequest",
        "description": "Request to get ticket details",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ticketNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:TicketId"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:ValidateTicketsRequest": {
        "name": "ValidateTicketsRequest",
        "description": "Request to validate a ticket",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "admissionCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:AdmissionCode"
                    }
                  }
                }
              }
            },
            {
              "key": "scannerStation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:SendTicketRequest": {
        "name": "SendTicketRequest",
        "description": "Request to send a ticket as an e-ticket",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "notificationAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:NotificationAddress"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:CreateMemberReservationRequest": {
        "name": "CreateMemberReservationRequest",
        "description": "Request to validate a member arrival",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "reserve",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-ticket:CreateMemberReservationItemRequest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:GetTicketCouponRequest": {
        "name": "GetTicketCouponRequest",
        "description": "Request to exchange a ticket for a coupon",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ticketNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:TicketId"
                }
              }
            },
            {
              "key": "couponCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:CouponCode"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:TicketCouponResponse": {
        "name": "TicketCouponResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "couponId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:CouponId"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:CreateMemberReservationItemRequest": {
        "name": "CreateMemberReservationItemRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ItemNumber"
                }
              }
            },
            {
              "key": "quantity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:NumberOfTickets"
                }
              }
            },
            {
              "key": "content",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_ticketing/types-composite:TicketContentRequest"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:ActionResponseSuccess": {
        "name": "ActionResponseSuccess",
        "description": "Indicates whether the action was successful",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_ticketing/service-ticket:ActionResponseCode": {
        "name": "ActionResponseCode",
        "description": "A code that identifies the reason of the action result",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/service-ticket:ActionResponseMessage": {
        "name": "ActionResponseMessage",
        "description": "A message that describes the result of the action",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/service-ticket:RevokedResponse": {
        "name": "RevokedResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ticketNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:TicketId"
                }
              }
            },
            {
              "key": "revoked",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/service-ticket:ActionResponseSuccess"
                }
              }
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-ticket:ActionResponseCode"
                    }
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-ticket:ActionResponseMessage"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:AdmittedResponse": {
        "name": "AdmittedResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ticketNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:TicketId"
                }
              }
            },
            {
              "key": "admitted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:Admitted"
                }
              }
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-ticket:ActionResponseCode"
                    }
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-ticket:ActionResponseMessage"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:DepartedResponse": {
        "name": "DepartedResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ticketNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:TicketId"
                }
              }
            },
            {
              "key": "departed",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:Departed"
                }
              }
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-ticket:ActionResponseCode"
                    }
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-ticket:ActionResponseMessage"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/service-ticket:TicketSentResponse": {
        "name": "TicketSentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ticketNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:TicketId"
                }
              }
            },
            {
              "key": "ticketSent",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:TicketSent"
                }
              }
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-ticket:ActionResponseCode"
                    }
                  }
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/service-ticket:ActionResponseMessage"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/types-composite:TicketContentRequest": {
        "name": "TicketContentRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "admissionCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:AdmissionCode"
                }
              }
            },
            {
              "key": "scheduleId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:ScheduleId"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/types-composite:AdmissionBase": {
        "name": "AdmissionBase",
        "description": "An admission component for a specific item number.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:AdmissionCode"
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-composite:Descriptions"
                    }
                  }
                }
              }
            },
            {
              "key": "default",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:DefaultAdmission"
                }
              }
            },
            {
              "key": "included",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:AdmissionIsIncluded"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/types-composite:AdmissionDetails": {
        "name": "AdmissionDetails",
        "description": "Details of the admission for a specific reservation",
        "shape": {
          "type": "object",
          "extends": [
            "type_ticketing/types-composite:AdmissionBase"
          ],
          "properties": [
            {
              "key": "scheduleDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-composite:ScheduleDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/types-composite:ScheduleDetails": {
        "name": "ScheduleDetails",
        "description": "Details of the schedule for a specific time slot.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:ScheduleId"
                }
              }
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "startDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "startTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "endDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "date"
                  }
                }
              }
            },
            {
              "key": "endTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "duration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "arrivalFromTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:ArrivalFromTime"
                    }
                  }
                }
              }
            },
            {
              "key": "arrivalUntilTime",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:ArrivalUntilTime"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/types-composite:Descriptions": {
        "name": "Descriptions",
        "description": "Descriptive information about a ticket item. The source of these fields are configurable.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "subtitle",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "fullDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_ticketing/types-composite:TicketDetails": {
        "name": "TicketDetails",
        "description": "Details of the ticket",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "ticketNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:TicketId"
                }
              }
            },
            {
              "key": "reservationToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-simple:Token"
                }
              }
            },
            {
              "key": "validFrom",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "validUntil",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              }
            },
            {
              "key": "pinCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-simple:PinCode"
                    }
                  }
                }
              }
            },
            {
              "key": "unitPrice",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unitPriceInclVat",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "ticketHolder",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "admissionDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_ticketing/types-composite:AdmissionDetails"
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-composite:Descriptions"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/types-errors:ErrorMessageResponse": {
        "name": "ErrorMessageResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-errors:ErrorCode"
                }
              }
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_ticketing/types-errors:ErrorDescription"
                }
              }
            }
          ]
        }
      },
      "type_ticketing/types-errors:ErrorCode": {
        "name": "ErrorCode",
        "description": "A unique identifier for an error",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-errors:ErrorDescription": {
        "name": "ErrorDescription",
        "description": "A description of the error",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:Token": {
        "name": "Token",
        "description": "A unique token that identifies a ticket reservation",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:ItemNumber": {
        "name": "ItemNumber",
        "description": "An item or product number defined in the ticketing system",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:AdmissionCode": {
        "name": "AdmissionCode",
        "description": "A unique code that identifies a specific admission.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:ScheduleId": {
        "name": "ScheduleId",
        "description": "The ID of a specific time slot for a specific admission",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_ticketing/types-simple:NumberOfTickets": {
        "name": "NumberOfTickets",
        "description": "The number of tickets to reserved",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_ticketing/types-simple:ExpiresAt": {
        "name": "ExpiresAt",
        "description": "The date and time when the token expires and reservation is no longer valid",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "datetime"
            }
          }
        }
      },
      "type_ticketing/types-simple:TicketHolder": {
        "name": "TicketHolder",
        "description": "The name of the person holding the ticket(s)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:NotificationAddress": {
        "name": "NotificationAddress",
        "description": "The email address or mobile phone number to send tickets and notifications to",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:PaymentReference": {
        "name": "PaymentReference",
        "description": "A reference to the payment transaction. Unless provided, the reservation is not considered paid. A confirmed unpaid reservation must be paid on site before the tickets are valid for usage.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:ReservationStatusEnum": {
        "name": "ReservationStatusEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "registered"
            },
            {
              "value": "confirmed"
            },
            {
              "value": "cancelled"
            },
            {
              "value": "expired"
            }
          ]
        }
      },
      "type_ticketing/types-simple:ReservationStatus": {
        "name": "ReservationStatus",
        "description": "The status of the reservation",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_ticketing/types-simple:ReservationStatusEnum"
          }
        }
      },
      "type_ticketing/types-simple:TicketId": {
        "name": "TicketId",
        "description": "The unique identifier of a ticket",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:PinCode": {
        "name": "PinCode",
        "description": "A pin code for the ticket, used for validation when rescheduling or revoking a confirmed ticket",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:UnitPrice": {
        "name": "UnitPrice",
        "description": "The unit price of the ticket.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      },
      "type_ticketing/types-simple:UnitPriceIncludesVat": {
        "name": "UnitPriceIncludesVat",
        "description": "Indicates if the unit price includes VAT.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_ticketing/types-simple:DiscountPct": {
        "name": "DiscountPct",
        "description": "The discount percentage for the admission based either on the customer or the quantity of tickets.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      },
      "type_ticketing/types-simple:VatPct": {
        "name": "VatPct",
        "description": "The VAT percentage for the admission.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      },
      "type_ticketing/types-simple:StoreCode": {
        "name": "StoreCode",
        "description": "A unique identifier for a store - a logical grouping defining a subset of ticket items. This is used to filter the list of ticket items returned by the API.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:CustomerNumber": {
        "name": "CustomerNumber",
        "description": "The customer number of the user making the request. The customer number affects pricing.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:ReferenceDate": {
        "name": "ReferenceDate",
        "description": "A date to use as a reference for the capacity search. If not specified, the current date will be used.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "date"
            }
          }
        }
      },
      "type_ticketing/types-simple:ReferenceDateTime": {
        "name": "ReferenceDateTime",
        "description": "A date and time to use as a reference for the capacity search. If not specified, the current date and time will be used.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "datetime"
            }
          }
        }
      },
      "type_ticketing/types-simple:DefaultAdmission": {
        "name": "DefaultAdmission",
        "description": "Indicates if this admission is the default admission when there are multiple admission defined.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_ticketing/types-simple:AdmissionIsIncludedEnum": {
        "name": "AdmissionIsIncludedEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "mandatory"
            },
            {
              "value": "optional"
            },
            {
              "value": "optionalSelected"
            }
          ]
        }
      },
      "type_ticketing/types-simple:AdmissionIsIncluded": {
        "name": "AdmissionIsIncluded",
        "description": "Indicates if the admission is mandatory or optional. Mandatory implies that the admission can not be deselected. Optional implies that you must opt-in to include the admission, while optionalSelected implies that the admission is optional but selected by default.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_ticketing/types-simple:AdmissionIsIncludedEnum"
          }
        }
      },
      "type_ticketing/types-simple:CapacityControlEnum": {
        "name": "CapacityControlEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "none"
            },
            {
              "value": "sales"
            },
            {
              "value": "admitted"
            },
            {
              "value": "full"
            }
          ]
        }
      },
      "type_ticketing/types-simple:CapacityControl": {
        "name": "CapacityControl",
        "description": "Indicates the type of capacity control for the admission. None implies that there is no capacity control. Sales implies that the capacity is controlled by the number of tickets sold. Admitted implies that the capacity is controlled by the number of tickets admitted. Full implies that the capacity is admitted and departed.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_ticketing/types-simple:CapacityControlEnum"
          }
        }
      },
      "type_ticketing/types-simple:ScheduleSelectionEnum": {
        "name": "ScheduleSelectionEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "noScheduleSelection"
            },
            {
              "value": "currentSchedule"
            },
            {
              "value": "nextAvailableSchedule"
            }
          ]
        }
      },
      "type_ticketing/types-simple:ScheduleSelection": {
        "name": "ScheduleSelection",
        "description": "All reservations require a schedule id. However, this field indicates the type of automation you get when performing a reservation without providing schedule id for the admission. _ NoScheduleSelection implies that there is no *automatic* schedule selection when no schedule id provided (reservation will fail). _ CurrentSchedule implies that the current schedule (aka \"today\") is selected. \\* NextAvailableSchedule implies that the next available schedule is selected. The current and Next-available select rules work well in a POS sales scenario.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_ticketing/types-simple:ScheduleSelectionEnum"
          }
        }
      },
      "type_ticketing/types-simple:PricingOptionEnum": {
        "name": "PricingOptionEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "fixed"
            },
            {
              "value": "dynamic_fixed_amount"
            },
            {
              "value": "dynamic_relative_amount"
            },
            {
              "value": "dynamic_percentage"
            }
          ]
        }
      },
      "type_ticketing/types-simple:PricingOption": {
        "name": "PricingOption",
        "description": "The pricing option for the schedule. Fixed implies that the price is fixed - calculated by the ERP module only. Dynamic_fixed_amount implies that the price is fixed but set by the schedule rather than the ERP module. Dynamic_relative_amount implies that the base price is from the ERP module and offset by a relative amount defined by the schedule. Dynamic_percentage implies that the base price is from the ERP module and offset by a percentage defined by the schedule.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_ticketing/types-simple:PricingOptionEnum"
          }
        }
      },
      "type_ticketing/types-simple:AdjustedAmount": {
        "name": "AdjustedAmount",
        "description": "The amount used to adjust admission unit price.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      },
      "type_ticketing/types-simple:AdjustedDiscountPct": {
        "name": "AdjustedDiscountPct",
        "description": "The percentage used to adjust admission unit price.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      },
      "type_ticketing/types-simple:AdjustedUnitPrice": {
        "name": "AdjustedUnitPrice",
        "description": "The calculated adjusted unit price for the admission.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      },
      "type_ticketing/types-simple:AdjustedTotalPrice": {
        "name": "AdjustedTotalPrice",
        "description": "The calculated adjusted total price for the admission. (Adjusted unit price \\* quantity).",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      },
      "type_ticketing/types-simple:ArrivalFromTime": {
        "name": "ArrivalFromTime",
        "description": "The earliest time a customer can arrive for the time slot.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:ArrivalUntilTime": {
        "name": "ArrivalUntilTime",
        "description": "The latest time a customer can arrive for the time slot.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:Allocatable": {
        "name": "Allocatable",
        "description": "Indicates if the schedule is allocatable. This boolean is used to determine if the schedule can be booked and considers arrival times and capacity.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_ticketing/types-simple:AllocationModelEnum": {
        "name": "AllocationModelEnum",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "capacity"
            },
            {
              "value": "waiting_list"
            }
          ]
        }
      },
      "type_ticketing/types-simple:AllocationModel": {
        "name": "AllocationModel",
        "description": "Whether the schedule is allocated based on capacity or waiting list. When the allocation model is waiting list, the reservation requires a waiting list ID.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_ticketing/types-simple:AllocationModelEnum"
          }
        }
      },
      "type_ticketing/types-simple:RemainingCapacity": {
        "name": "RemainingCapacity",
        "description": "The remaining capacity for the schedule. Note that this number can be positive even when the schedule is not allocatable.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      },
      "type_ticketing/types-simple:AllocationExplanation": {
        "name": "AllocationExplanation",
        "description": "An explanation why the schedule is allocatable or not allocatable.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:MemberNumber": {
        "name": "MemberNumber",
        "description": "The unique identifier of a member",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:ScannerStation": {
        "name": "ScannerStation",
        "description": "The name of the scanner station",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:CouponCode": {
        "name": "CouponCode",
        "description": "The alias of the coupon type. This is used to identify the coupon type in the system.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:CouponId": {
        "name": "CouponId",
        "description": "The unique identifier of a coupon",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_ticketing/types-simple:Admitted": {
        "name": "Admitted",
        "description": "Indicates whether the ticket has been registered as admitted to the admission",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_ticketing/types-simple:Departed": {
        "name": "Departed",
        "description": "Indicates whether the ticket has been registered as departed from the admission",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      },
      "type_ticketing/types-simple:TicketSent": {
        "name": "TicketSent",
        "description": "Indicates whether the ticket has been sent as an e-ticket",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "subpackages": {
      "subpackage_errors": {
        "id": "subpackage_errors",
        "name": "errors"
      },
      "subpackage_global-api-types": {
        "id": "subpackage_global-api-types",
        "name": "global-api-types"
      },
      "subpackage_memberships": {
        "id": "subpackage_memberships",
        "name": "memberships"
      },
      "subpackage_memberships/service-card": {
        "id": "subpackage_memberships/service-card",
        "name": "service-card",
        "displayName": "Card"
      },
      "subpackage_memberships/service-catalog": {
        "id": "subpackage_memberships/service-catalog",
        "name": "service-catalog",
        "displayName": "Catalog"
      },
      "subpackage_memberships/service-lifecycle": {
        "id": "subpackage_memberships/service-lifecycle",
        "name": "service-lifecycle",
        "displayName": "Lifecycle"
      },
      "subpackage_memberships/service-member": {
        "id": "subpackage_memberships/service-member",
        "name": "service-member",
        "displayName": "Lifecycle"
      },
      "subpackage_memberships/service-membership": {
        "id": "subpackage_memberships/service-membership",
        "name": "service-membership",
        "displayName": "Memberships"
      },
      "subpackage_memberships/service-misc": {
        "id": "subpackage_memberships/service-misc",
        "name": "service-misc",
        "displayName": "Miscellaneous"
      },
      "subpackage_memberships/types": {
        "id": "subpackage_memberships/types",
        "name": "types"
      },
      "subpackage_memberships/types/types-composite": {
        "id": "subpackage_memberships/types/types-composite",
        "name": "types-composite"
      },
      "subpackage_memberships/types/types-simple": {
        "id": "subpackage_memberships/types/types-simple",
        "name": "types-simple"
      },
      "subpackage_systemservices": {
        "id": "subpackage_systemservices",
        "name": "systemservices"
      },
      "subpackage_systemservices/companies": {
        "id": "subpackage_systemservices/companies",
        "name": "companies"
      },
      "subpackage_systemservices/helloworld": {
        "id": "subpackage_systemservices/helloworld",
        "name": "helloworld"
      },
      "subpackage_ticketing": {
        "id": "subpackage_ticketing",
        "name": "ticketing"
      },
      "subpackage_ticketing/service-capacity": {
        "id": "subpackage_ticketing/service-capacity",
        "name": "service-capacity",
        "displayName": "Capacity"
      },
      "subpackage_ticketing/service-catalog": {
        "id": "subpackage_ticketing/service-catalog",
        "name": "service-catalog",
        "displayName": "Catalog"
      },
      "subpackage_ticketing/service-reservations": {
        "id": "subpackage_ticketing/service-reservations",
        "name": "service-reservations",
        "displayName": "Reservations"
      },
      "subpackage_ticketing/service-ticket": {
        "id": "subpackage_ticketing/service-ticket",
        "name": "service-ticket",
        "displayName": "Tickets"
      },
      "subpackage_ticketing/types-composite": {
        "id": "subpackage_ticketing/types-composite",
        "name": "types-composite"
      },
      "subpackage_ticketing/types-errors": {
        "id": "subpackage_ticketing/types-errors",
        "name": "types-errors"
      },
      "subpackage_ticketing/types-simple": {
        "id": "subpackage_ticketing/types-simple",
        "name": "types-simple"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "apiKey"
      }
    },
    "globalHeaders": [
      {
        "key": "x-api-version",
        "valueShape": {
          "type": "alias",
          "value": {
            "type": "optional",
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_global-api-types:ApiVersionDate"
              }
            }
          }
        }
      }
    ]
  }
]