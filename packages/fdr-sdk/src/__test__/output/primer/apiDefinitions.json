[
  {
    "id": "3e1141df-b4bc-4dab-9542-53cf91851645",
    "endpoints": {
      "subpackage_paymentWebhooks.payment_status_webhook_event": {
        "id": "subpackage_paymentWebhooks.payment_status_webhook_event",
        "namespace": [
          "subpackage_paymentWebhooks"
        ],
        "description": "Primer notifies you with a `PAYMENT.STATUS` webhook when a payment's status has been updated. This is especially useful for asynchronous processor Connections, which do not respond with an upfront authorization.\nThe webhook body contains the full payment object.\n\nExample payment status notification:\n\n```JSON\n{\n  \"eventType\":\"PAYMENT.STATUS\",\n  \"date\":\"2021-02-21T15:36:16.367687\",\n  \"notificationConfig\":{\n    \"id\":\"cc51f9f0-7e1c-492b-9d37-f83a818f6070\",\n    \"description\":\"Payment webhook\"\n  },\n  \"signedAt\": \"1689221338\",\n  \"version\":\"2.1\",\n  \"payment\":{\n    \"id\":\"DdRZ6YY0\",\n    \"date\":\"2022-01-01T12:12:12.000000\",\n    \"amount\":3000,\n    \"currencyCode\":\"GBP\",\n    \"customerId\":\"cust-123\",\n    \"orderId\":\"order-123\",\n    \"status\":\"SETTLED\",\n    \"paymentMethod\":{\n      \"paymentType\":\"FIRST_PAYMENT\",\n      \"paymentMethodToken\":\"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy\",\n      \"analyticsId\":\"LUi5pETUaVsdSEamK25L\",\n      \"paymentMethodType\":\"PAYMENT_CARD\",\n      \"paymentMethodData\":{\n        \"last4Digits\":\"1111\",\n        \"expirationMonth\":\"03\",\n        \"expirationYear\":\"2030\",\n        \"cardholderName\":\"ADYEN\",\n        \"network\":\"Visa\",\n        \"isNetworkTokenized\":false,\n        \"binData\":{\n          \"network\":\"VISA\",\n          \"issuerCountryCode\":\"US\",\n          \"issuerName\":\"JPMORGAN CHASE BANK, N.A.\",\n          \"regionalRestriction\":\"UNKNOWN\",\n          \"accountNumberType\":\"UNKNOWN\",\n          \"accountFundingType\":\"UNKNOWN\",\n          \"prepaidReloadableIndicator\":\"NOT_APPLICABLE\",\n          \"productUsageType\":\"UNKNOWN\",\n          \"productCode\":\"UNKNOWN\",\n          \"productName\":\"UNKNOWN\"\n        }\n      },\n      \"threeDSecureAuthentication\":{\n        \"responseCode\":\"NOT_PERFORMED\"\n      }\n    },\n    \"processor\":{\n      \"name\":\"STRIPE\",\n      \"processorMerchantId\":\"acct_1GORasdasqNWFwi8c\",\n      \"amountCaptured\":3000,\n      \"amountRefunded\":0\n    },\n    \"transactions\":[\n      {\n        \"date\":\"2022-05-26T11:14:11.946300\",\n        \"amount\":3000,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"SALE\",\n        \"processorTransactionId\":\"pi_3L3edsGZasdasdc1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORasvasdNWFwi8c\",\n        \"processorStatus\":\"SETTLED\"\n      }\n    ]\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "eventType",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The type of the webhook raised. `PAYMENT.STATUS` in this case."
              },
              {
                "key": "date",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  }
                },
                "description": "The date-time that the webhook was sent."
              },
              {
                "key": "notificationConfig",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_paymentWebhooks:PaymentStatusWebhookPayloadNotificationConfig"
                      }
                    }
                  }
                },
                "description": "The notification configuration details."
              },
              {
                "key": "version",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The payload version"
              },
              {
                "key": "signedAt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Timestamp when the webhook content was signed"
              },
              {
                "key": "payment",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_paymentWebhooks:PaymentStatusWebhookPayloadPayment"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "examples": [
          {
            "path": "/payment-status",
            "responseStatusCode": 204,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "notificationConfig": {},
                "version": "2.1",
                "signedAt": "1689221338",
                "payment": {
                  "status": "PENDING",
                  "paymentMethod": {
                    "paymentType": "FIRST_PAYMENT",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "binData": {
                        "network": "string",
                        "issuerCountryCode": "AW",
                        "issuerCurrencyCode": "AED",
                        "regionalRestriction": "DOMESTIC_USE_ONLY",
                        "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                        "accountFundingType": "CREDIT",
                        "prepaidReloadableIndicator": "RELOADABLE",
                        "productUsageType": "CONSUMER",
                        "productCode": "string",
                        "productName": "string"
                      }
                    },
                    "threeDSecureAuthentication": {
                      "responseCode": "NOT_PERFORMED",
                      "reasonCode": "GATEWAY_UNAVAILABLE"
                    }
                  },
                  "processor": {},
                  "statusReason": {
                    "type": "APPLICATION_ERROR",
                    "declineType": "SOFT_DECLINE",
                    "code": "ERROR"
                  },
                  "transactions": [
                    {
                      "date": "2024-01-15T09:30:00Z",
                      "amount": 1,
                      "currencyCode": "string",
                      "processorMerchantId": "string",
                      "transactionType": "SALE",
                      "processorStatus": "PENDING",
                      "processorStatusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      }
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-status \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"notificationConfig\": {},\n  \"version\": \"2.1\",\n  \"signedAt\": \"1689221338\",\n  \"payment\": {\n    \"status\": \"PENDING\",\n    \"paymentMethod\": {\n      \"paymentType\": \"FIRST_PAYMENT\",\n      \"paymentMethodData\": {\n        \"last4Digits\": \"string\",\n        \"expirationMonth\": \"string\",\n        \"expirationYear\": \"string\",\n        \"binData\": {\n          \"network\": \"string\",\n          \"issuerCountryCode\": \"AW\",\n          \"issuerCurrencyCode\": \"AED\",\n          \"regionalRestriction\": \"DOMESTIC_USE_ONLY\",\n          \"accountNumberType\": \"PRIMARY_ACCOUNT_NUMBER\",\n          \"accountFundingType\": \"CREDIT\",\n          \"prepaidReloadableIndicator\": \"RELOADABLE\",\n          \"productUsageType\": \"CONSUMER\",\n          \"productCode\": \"string\",\n          \"productName\": \"string\"\n        }\n      },\n      \"threeDSecureAuthentication\": {\n        \"responseCode\": \"NOT_PERFORMED\",\n        \"reasonCode\": \"GATEWAY_UNAVAILABLE\"\n      }\n    },\n    \"processor\": {},\n    \"statusReason\": {\n      \"type\": \"APPLICATION_ERROR\",\n      \"declineType\": \"SOFT_DECLINE\",\n      \"code\": \"ERROR\"\n    },\n    \"transactions\": [\n      {\n        \"date\": \"2024-01-15T09:30:00Z\",\n        \"amount\": 1,\n        \"currencyCode\": \"string\",\n        \"processorMerchantId\": \"string\",\n        \"transactionType\": \"SALE\",\n        \"processorStatus\": \"PENDING\",\n        \"processorStatusReason\": {\n          \"type\": \"APPLICATION_ERROR\",\n          \"declineType\": \"SOFT_DECLINE\",\n          \"code\": \"ERROR\"\n        }\n      }\n    ]\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentWebhooks.payment_refund_webhook_event": {
        "id": "subpackage_paymentWebhooks.payment_refund_webhook_event",
        "namespace": [
          "subpackage_paymentWebhooks"
        ],
        "description": "Primer notifies you with a `PAYMENT.REFUND` Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.\n\nCheck the transaction with the most recent `transactionType: \"REFUND\"` in the `transactions` array:\n\n- if `processorStatus` is `SETTLED`, the refund was successful and the funds have been returned to the customer\n- if `processorStatus` is `FAILED`, the refund was unsuccessful\n\nExample refund notification:\n\n```JSON\n{\n  \"eventType\":\"PAYMENT.REFUND\",\n  \"date\":\"2021-02-21T15:36:16.367687\",\n  \"notificationConfig\":{\n    \"id\":\"cc51f9f0-7e1c-492b-9d37-f83a818f6070\",\n    \"description\":\"Refund webhook\"\n  },\n  \"signedAt\": \"1689221338\",\n  \"version\":\"2.1\",\n  \"payment\":{\n    \"id\":\"DdRZ6YY0\",\n    \"date\":\"2022-01-01T12:12:12.000000\",\n    \"amount\":3000,\n    \"currencyCode\":\"GBP\",\n    \"customerId\":\"cust-123\",\n    \"orderId\":\"order-123\",\n    \"status\":\"SETTLED\",\n    \"paymentMethod\":{\n      \"paymentMethodToken\":\"-lcWjvBASh2EpYaHgVwxNjUzNTYzNjIy\",\n      \"analyticsId\":\"LUi5pETUV2EpYaHgV77SEamK25L\",\n      \"paymentMethodType\":\"PAYMENT_CARD\",\n      \"paymentMethodData\":{\n        \"paymentType\":\"FIRST_PAYMENT\",\n        \"last4Digits\":\"1111\",\n        \"expirationMonth\":\"03\",\n        \"expirationYear\":\"2030\",\n        \"cardholderName\":\"ADYEN\",\n        \"network\":\"Visa\",\n        \"isNetworkTokenized\":false,\n        \"binData\":{\n          \"network\":\"VISA\",\n          \"issuerCountryCode\":\"US\",\n          \"issuerName\":\"JPMORGAN CHASE BANK, N.A.\",\n          \"regionalRestriction\":\"UNKNOWN\",\n          \"accountNumberType\":\"UNKNOWN\",\n          \"accountFundingType\":\"UNKNOWN\",\n          \"prepaidReloadableIndicator\":\"NOT_APPLICABLE\",\n          \"productUsageType\":\"UNKNOWN\",\n          \"productCode\":\"UNKNOWN\",\n          \"productName\":\"UNKNOWN\"\n        }\n      },\n      \"threeDSecureAuthentication\":{\n        \"responseCode\":\"NOT_PERFORMED\"\n      }\n    },\n    \"processor\":{\n      \"name\":\"STRIPE\",\n      \"processorMerchantId\":\"acct_1G2EpYaHgVZqNWFwi8c\",\n      \"amountCaptured\":3000,\n      \"amountRefunded\":3000\n    },\n    \"transactions\":[\n      {\n        \"date\":\"2022-05-26T11:14:11.946300\",\n        \"amount\":3000,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"SALE\",\n        \"processorTransactionId\":\"pi_3L3ed23NWFwiNWFwi8c1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORcaGv23NWFwi8c\",\n        \"processorStatus\":\"SETTLED\"\n      },\n      {\n        \"date\":\"2022-05-26T11:14:11.946300\",\n        \"amount\":3001,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"REFUND\",\n        \"processorTransactionId\":\"pi_3L3ed23NWFwiNWFwi8c1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORcaGv23NWFwi8c\",\n        \"processorStatus\":\"FAILED\",\n        \"processorStatusReason\":{\n          \"type\":\"APPLICATION_ERROR\",\n          \"declineType\":\"SOFT_DECLINE\",\n          \"code\":\"UNKNOWN\",\n          \"message\":\"Refund amount too large\"\n        }\n      }\n    ]\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-refund"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "eventType",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The type of the webhook raised. `PAYMENT.REFUND` in this case."
              },
              {
                "key": "date",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  }
                },
                "description": "The date-time that the webhook was sent."
              },
              {
                "key": "notificationConfig",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_paymentWebhooks:PaymentRefundWebhookPayloadNotificationConfig"
                      }
                    }
                  }
                },
                "description": "The notification configuration details."
              },
              {
                "key": "version",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The payload version"
              },
              {
                "key": "signedAt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Timestamp when the webhook content was signed"
              },
              {
                "key": "payment",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_paymentWebhooks:PaymentRefundWebhookPayloadPayment"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "examples": [
          {
            "path": "/payment-refund",
            "responseStatusCode": 204,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "notificationConfig": {},
                "version": "2.1",
                "signedAt": "1689221338",
                "payment": {
                  "status": "PENDING",
                  "paymentMethod": {
                    "paymentType": "FIRST_PAYMENT",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "binData": {
                        "network": "string",
                        "issuerCountryCode": "AW",
                        "issuerCurrencyCode": "AED",
                        "regionalRestriction": "DOMESTIC_USE_ONLY",
                        "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                        "accountFundingType": "CREDIT",
                        "prepaidReloadableIndicator": "RELOADABLE",
                        "productUsageType": "CONSUMER",
                        "productCode": "string",
                        "productName": "string"
                      }
                    },
                    "threeDSecureAuthentication": {
                      "responseCode": "NOT_PERFORMED",
                      "reasonCode": "GATEWAY_UNAVAILABLE"
                    }
                  },
                  "processor": {},
                  "statusReason": {
                    "type": "APPLICATION_ERROR",
                    "declineType": "SOFT_DECLINE",
                    "code": "ERROR"
                  },
                  "transactions": [
                    {
                      "date": "2024-01-15T09:30:00Z",
                      "amount": 1,
                      "currencyCode": "string",
                      "processorMerchantId": "string",
                      "transactionType": "SALE",
                      "processorStatus": "PENDING",
                      "processorStatusReason": {
                        "type": "APPLICATION_ERROR",
                        "declineType": "SOFT_DECLINE",
                        "code": "ERROR"
                      }
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-refund \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"notificationConfig\": {},\n  \"version\": \"2.1\",\n  \"signedAt\": \"1689221338\",\n  \"payment\": {\n    \"status\": \"PENDING\",\n    \"paymentMethod\": {\n      \"paymentType\": \"FIRST_PAYMENT\",\n      \"paymentMethodData\": {\n        \"last4Digits\": \"string\",\n        \"expirationMonth\": \"string\",\n        \"expirationYear\": \"string\",\n        \"binData\": {\n          \"network\": \"string\",\n          \"issuerCountryCode\": \"AW\",\n          \"issuerCurrencyCode\": \"AED\",\n          \"regionalRestriction\": \"DOMESTIC_USE_ONLY\",\n          \"accountNumberType\": \"PRIMARY_ACCOUNT_NUMBER\",\n          \"accountFundingType\": \"CREDIT\",\n          \"prepaidReloadableIndicator\": \"RELOADABLE\",\n          \"productUsageType\": \"CONSUMER\",\n          \"productCode\": \"string\",\n          \"productName\": \"string\"\n        }\n      },\n      \"threeDSecureAuthentication\": {\n        \"responseCode\": \"NOT_PERFORMED\",\n        \"reasonCode\": \"GATEWAY_UNAVAILABLE\"\n      }\n    },\n    \"processor\": {},\n    \"statusReason\": {\n      \"type\": \"APPLICATION_ERROR\",\n      \"declineType\": \"SOFT_DECLINE\",\n      \"code\": \"ERROR\"\n    },\n    \"transactions\": [\n      {\n        \"date\": \"2024-01-15T09:30:00Z\",\n        \"amount\": 1,\n        \"currencyCode\": \"string\",\n        \"processorMerchantId\": \"string\",\n        \"transactionType\": \"SALE\",\n        \"processorStatus\": \"PENDING\",\n        \"processorStatusReason\": {\n          \"type\": \"APPLICATION_ERROR\",\n          \"declineType\": \"SOFT_DECLINE\",\n          \"code\": \"ERROR\"\n        }\n      }\n    ]\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event": {
        "id": "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
        "namespace": [
          "subpackage_disputeChargebacksWebhooks"
        ],
        "description": "Primer notifies you with a `DISPUTE.OPEN` webhook on newly opened disputes or chargebacks. This notification is unified across all processors.\n\nExample of dispute event:\n\n```JSON\n{\n  \"eventType\":\"DISPUTE.OPENED\",\n  \"version\":\"2.1\",\n  \"primerAccountId\":\"7fcd50f1-99f2-416e-8013-6ecd1c1285c3\",\n  \"transactionId\":\"c3f662ad-d197-492e-b78b-63eefa64a31d\",\n  \"orderId\":\"order-123\",\n  \"processorId\":\"Adyen\",\n  \"processorDisputeId\":\"adyen_ref_123\",\n  \"paymentId\":\"ecb8d3bc-805d-4d97-826e-ef8d4cc3d2a2\",\n  \"raw_processor_callback\":{\n      \"example\":{\n        \"raw_callback\":\"request\",\n        \"from\":\"Adyen\"\n      }\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/dispute-opened"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "eventType",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The type of the webhook raised. `DISPUTE.OPEN` in this case."
              },
              {
                "key": "processorId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The name of the processor that generated the dispute."
              },
              {
                "key": "processorDisputeId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for the corresponding connection dispute."
              },
              {
                "key": "paymentId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for the Primer payment corresponding to this dispute."
              },
              {
                "key": "transactionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for the Primer transaction corresponding to this dispute."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the sale transaction that the dispute relates to."
              },
              {
                "key": "primerAccountId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your Primer merchant account."
              }
            ]
          }
        },
        "examples": [
          {
            "path": "/dispute-opened",
            "responseStatusCode": 204,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/dispute-opened \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_paymentWebhooks:PaymentStatusWebhookPayloadNotificationConfig": {
        "name": "PaymentStatusWebhookPayloadNotificationConfig",
        "description": "The notification configuration details.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration ID."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration description."
            }
          ]
        }
      },
      "type_paymentWebhooks:PaymentStatusWebhookPayloadPayment": {
        "name": "PaymentStatusWebhookPayloadPayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            }
          ]
        }
      },
      "type_paymentWebhooks:PaymentRefundWebhookPayloadNotificationConfig": {
        "name": "PaymentRefundWebhookPayloadNotificationConfig",
        "description": "The notification configuration details.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration ID."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration description."
            }
          ]
        }
      },
      "type_paymentWebhooks:PaymentRefundWebhookPayloadPayment": {
        "name": "PaymentRefundWebhookPayloadPayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            }
          ]
        }
      },
      "type_:AccountFundingTypeEnum": {
        "name": "AccountFundingTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREDIT"
            },
            {
              "value": "DEBIT"
            },
            {
              "value": "PREPAID"
            },
            {
              "value": "CHARGE"
            },
            {
              "value": "DEFERRED_DEBIT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ApayaCustomerTokenApiSchema": {
        "name": "ApayaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mnc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mcc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BinDataApiSchema": {
        "name": "BinDataApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardNetworkEnum"
                }
              }
            },
            {
              "key": "issuerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "issuerName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuerCurrencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              }
            },
            {
              "key": "regionalRestriction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardRegionRestrictionEnum"
                }
              }
            },
            {
              "key": "accountNumberType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardAccountNumberTypeEnum"
                }
              }
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AccountFundingTypeEnum"
                }
              }
            },
            {
              "key": "prepaidReloadableIndicator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PrepaidReloadableEnum"
                }
              }
            },
            {
              "key": "productUsageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardProductTypeEnum"
                }
              }
            },
            {
              "key": "productCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "productName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CardAccountNumberTypeEnum": {
        "name": "CardAccountNumberTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PRIMARY_ACCOUNT_NUMBER"
            },
            {
              "value": "NETWORK_TOKEN"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardNetworkEnum": {
        "name": "CardNetworkEnum",
        "description": "[The list of available card networks and their `CARD_NETWORK_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_:CardProductTypeEnum": {
        "name": "CardProductTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CONSUMER"
            },
            {
              "value": "BUSINESS"
            },
            {
              "value": "GOVERNMENT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardRegionRestrictionEnum": {
        "name": "CardRegionRestrictionEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DOMESTIC_USE_ONLY"
            },
            {
              "value": "NONE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Order Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalOrderTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Payment Session Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaPaymentSessionApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Ideal Pay Nl Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:IdealPayNlTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment method token used to authorize the transaction."
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type"
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "threeDSecureAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CountryCodeEnum": {
        "name": "CountryCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:Currency": {
        "name": "Currency",
        "description": "Enumerates all supported currencies",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_:PaymentResponseProcessorApiSchema": {
        "name": "PaymentResponseProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            },
            {
              "key": "amountCaptured",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts."
            },
            {
              "key": "amountRefunded",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts."
            }
          ]
        }
      },
      "type_:GoCardlessMandateApiSchema": {
        "name": "GoCardlessMandateApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "gocardlessMandateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Unique identifier of a GoCardless mandate agreement"
            }
          ]
        }
      },
      "type_:IdealPayNlTokenApiSchema": {
        "name": "IdealPayNlTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodConfigId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaAddressApiSchema": {
        "name": "KlarnaAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine3",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaCustomerTokenApiSchema": {
        "name": "KlarnaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaCustomerToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaPaymentSessionApiSchema": {
        "name": "KlarnaPaymentSessionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaAuthorizationToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaSessionDetailsApiSchema": {
        "name": "KlarnaSessionDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "recurringDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaAddressApiSchema"
                }
              }
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaAddressApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "purchaseCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "purchaseCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "locale",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "orderLines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "tokenDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaTokenDetails": {
        "name": "KlarnaTokenDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "masked_number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "expiry_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalBillingAgreementApiSchema": {
        "name": "PayPalBillingAgreementApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalBillingAgreementId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AddressApiSchema"
                    }
                  }
                }
              },
              "description": "The PayPal customer's shipping address"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalExternalPayerInfoApiSchema": {
        "name": "PayPalExternalPayerInfoApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalPayerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalOrderTokenApiSchema": {
        "name": "PayPalOrderTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalOrderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentCardTokenApiSchema": {
        "name": "PaymentCardTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "first6Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last4Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cardholderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isNetworkTokenized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "binData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BinDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StatusReasonApiSchema": {
        "name": "StatusReasonApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatusTypeEnum"
                }
              },
              "description": "Type of the status."
            },
            {
              "key": "declineType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeclineTypeEnum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried."
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED`, this will be returned."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error."
            }
          ]
        }
      },
      "type_:PaymentMethodTypeEnum": {
        "name": "PaymentMethodTypeEnum",
        "description": "[The list of available payment methods and their `PAYMENT_METHOD_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_:PrepaidReloadableEnum": {
        "name": "PrepaidReloadableEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "RELOADABLE"
            },
            {
              "value": "NON_RELOADABLE"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthResponseCodeEnum": {
        "name": "ThreeDSecureAuthResponseCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_PERFORMED"
            },
            {
              "value": "SKIPPED"
            },
            {
              "value": "AUTH_SUCCESS"
            },
            {
              "value": "AUTH_FAILED"
            },
            {
              "value": "CHALLENGE"
            },
            {
              "value": "METHOD"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
        "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Three D Secure Skipped Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureSkippedReasonCodeEnum"
                }
              }
            },
            {
              "displayName": "Three D Secure Failed Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureFailedReasonCodeEnum"
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchema": {
        "name": "ThreeDSecureAuthenticationApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "responseCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureAuthResponseCodeEnum"
                }
              }
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                }
              }
            },
            {
              "key": "reasonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "protocolVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "challengeIssued",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureFailedReasonCodeEnum": {
        "name": "ThreeDSecureFailedReasonCodeEnum",
        "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "UNKNOWN"
            },
            {
              "value": "REJECTED_BY_ISSUER"
            },
            {
              "value": "CARD_AUTHENTICATION_FAILED"
            },
            {
              "value": "UNKNOWN_DEVICE"
            },
            {
              "value": "UNSUPPORTED_DEVICE"
            },
            {
              "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "INVALID_TRANSACTION"
            },
            {
              "value": "NO_CARD_RECORD"
            },
            {
              "value": "SECURITY_FAILURE"
            },
            {
              "value": "STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
            },
            {
              "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
            },
            {
              "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
            },
            {
              "value": "LOW_CONFIDENCE"
            },
            {
              "value": "MEDIUM_CONFIDENCE"
            },
            {
              "value": "HIGH_CONFIDENCE"
            },
            {
              "value": "VERY_HIGH_CONFIDENCE"
            },
            {
              "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
            },
            {
              "value": "NON_PAYMENT_NOT_SUPPORTED"
            },
            {
              "value": "THREE_RI_NOT_SUPPORTED"
            },
            {
              "value": "ACS_TECHNICAL_ISSUE"
            },
            {
              "value": "DECOUPLED_REQUIRED_BY_ACS"
            },
            {
              "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
            },
            {
              "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
            },
            {
              "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
            },
            {
              "value": "ACS_TIMED_OUT"
            },
            {
              "value": "INVALID_ACS_RESPONSE"
            },
            {
              "value": "ACS_SYSTEM_ERROR_RESPONSE"
            },
            {
              "value": "ERROR_GENERATING_CAVV"
            },
            {
              "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
            },
            {
              "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
            },
            {
              "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
            }
          ]
        }
      },
      "type_:ThreeDSecureSkippedReasonCodeEnum": {
        "name": "ThreeDSecureSkippedReasonCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "GATEWAY_UNAVAILABLE"
            },
            {
              "value": "DISABLED_BY_MERCHANT"
            },
            {
              "value": "NOT_SUPPORTED_BY_ISSUER"
            },
            {
              "value": "FAILED_TO_NEGOTIATE"
            },
            {
              "value": "UNKNOWN_ACS_RESPONSE"
            },
            {
              "value": "3DS_SERVER_ERROR"
            },
            {
              "value": "ACQUIRER_NOT_CONFIGURED"
            },
            {
              "value": "ACQUIRER_NOT_PARTICIPATING"
            }
          ]
        }
      },
      "type_:DeclineTypeEnum": {
        "name": "DeclineTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SOFT_DECLINE"
            },
            {
              "value": "HARD_DECLINE"
            }
          ]
        }
      },
      "type_:TransactionDeclineReasonV2Enum": {
        "name": "TransactionDeclineReasonV2Enum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ERROR"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "LOST_OR_STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REFER_TO_CARD_ISSUER"
            },
            {
              "value": "DO_NOT_HONOR"
            },
            {
              "value": "INSUFFICIENT_FUNDS"
            },
            {
              "value": "WITHDRAWAL_LIMIT_EXCEEDED"
            },
            {
              "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
            },
            {
              "value": "AUTHENTICATION_REQUIRED"
            }
          ]
        }
      },
      "type_:TransactionOverviewApiSchema": {
        "name": "TransactionOverviewApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The date-time that the transaction was created."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The amount of the transaction, in minor units."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "transactionType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "processorTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Processor's unique identifier for the transaction"
            },
            {
              "key": "processorName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An identifier of a processor."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\""
            },
            {
              "key": "processorStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information"
            },
            {
              "key": "processorStatusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`."
            }
          ]
        }
      },
      "type_:PaymentStatus": {
        "name": "PaymentStatus",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            }
          ]
        }
      },
      "type_:PaymentStatusTypeEnum": {
        "name": "PaymentStatusTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPLICATION_ERROR"
            },
            {
              "value": "GATEWAY_REJECTED"
            },
            {
              "value": "ISSUER_DECLINED"
            }
          ]
        }
      },
      "type_:TransactionTypeEnum": {
        "name": "TransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SALE"
            },
            {
              "value": "REFUND"
            }
          ]
        }
      },
      "type_:AddressApiSchema": {
        "name": "AddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CountryCodeEnum"
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:RecurringTransactionTypeEnum": {
        "name": "RecurringTransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            }
          ]
        }
      },
      "type_:RecurringPaymentTypeSchema": {
        "name": "RecurringPaymentTypeSchema",
        "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:RecurringTransactionTypeEnum"
          }
        }
      }
    },
    "subpackages": {
      "subpackage_paymentWebhooks": {
        "id": "subpackage_paymentWebhooks",
        "name": "paymentWebhooks"
      },
      "subpackage_disputeChargebacksWebhooks": {
        "id": "subpackage_disputeChargebacksWebhooks",
        "name": "disputeChargebacksWebhooks"
      }
    },
    "auths": {
      "default": {
        "type": "header",
        "headerWireValue": "X-API-KEY",
        "nameOverride": "apiKey"
      }
    }
  },
  {
    "id": "ca56f687-5be3-4661-aeed-674a0f1f7193",
    "endpoints": {},
    "websockets": {},
    "webhooks": {
      "subpackage_paymentWebhooks.payment_status_webhook_event": {
        "id": "subpackage_paymentWebhooks.payment_status_webhook_event",
        "namespace": [
          "subpackage_paymentWebhooks"
        ],
        "description": "Primer notifies you with a `PAYMENT.STATUS` webhook when a payment's status has been updated. This is especially useful for asyncronous processor Connections, which do not respond with an upfront authorization.\nThe webhook events will arrive in the order that the payment status changes, for example you should expect a status of `PENDING`, then `AUTHORIZED`, then `SETTLED` (depending on how your workflow is set up).\nThe webhook body contains the full payment object.\n\nExample payment status notification:\n\n```JSON\n{\n  \"eventType\":\"PAYMENT.STATUS\",\n  \"date\":\"2021-02-21T15:36:16.367687\",\n  \"notificationConfig\":{\n    \"id\":\"cc51f9f0-7e1c-492b-9d37-f83a818f6070\",\n    \"description\":\"Payment webhook\"\n  },\n  \"version\":\"2.3\",\n  \"signedAt\": \"1689221338\",\n  \"payment\":{\n    \"id\":\"DdRZ6YY0\",\n    \"date\":\"2021-02-21T15:34:16.367687\",\n    \"dateUpdated\":\"2021-02-21T15:35:16.133701\",\n    \"amount\":3000,\n    \"currencyCode\":\"GBP\",\n    \"customerId\":\"cust-123\",\n    \"orderId\":\"order-123\",\n    \"status\":\"SETTLED\",\n    \"cardTokenType\":\"CARD_PAN\",\n    \"customer\": {\n      \"emailAddress\": \"test@primer.io\",\n      \"mobileNumber\": \"0123456789\",\n      \"billingAddress\": {\n        \"firstName\": \"John\",\n        \"postalCode\": \"CB94BQ\",\n        \"addressLine1\": \"10001 Alpha St\",\n        \"countryCode\": \"GB\",\n        \"city\": \"Cambridge\",\n        \"state\": \"Cambridgeshire\"\n      }\n    },\n    \"paymentMethod\":{\n      \"paymentType\":\"FIRST_PAYMENT\",\n      \"paymentMethodToken\":\"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy\",\n      \"isVaulted\": \"false\",\n      \"analyticsId\":\"LUi5pETUaVsdSEamK25L\",\n      \"paymentMethodType\":\"PAYMENT_CARD\",\n      \"paymentMethodData\":{\n        \"last4Digits\":\"1111\",\n        \"first6Digits\": \"411111\",\n        \"expirationMonth\":\"03\",\n        \"expirationYear\":\"2030\",\n        \"cardholderName\":\"ADYEN\",\n        \"network\":\"Visa\",\n        \"isNetworkTokenized\":false,\n        \"binData\":{\n          \"network\":\"VISA\",\n          \"issuerCountryCode\":\"US\",\n          \"issuerName\":\"JPMORGAN CHASE BANK, N.A.\",\n          \"regionalRestriction\":\"UNKNOWN\",\n          \"accountNumberType\":\"UNKNOWN\",\n          \"accountFundingType\":\"UNKNOWN\",\n          \"prepaidReloadableIndicator\":\"NOT_APPLICABLE\",\n          \"productUsageType\":\"UNKNOWN\",\n          \"productCode\":\"UNKNOWN\",\n          \"productName\":\"UNKNOWN\"\n        }\n      },\n      \"authorizationType\": \"FINAL\",\n      \"threeDSecureAuthentication\":{\n        \"responseCode\":\"NOT_PERFORMED\"\n      }\n    },\n    \"processor\":{\n      \"name\":\"STRIPE\",\n      \"processorMerchantId\":\"acct_1GORasdasqNWFwi8c\",\n      \"amountCaptured\":3000,\n      \"amountRefunded\":0\n    },\n    \"transactions\":[\n      {\n        \"date\":\"2021-02-21T15:34:16.367687\",\n        \"amount\":3000,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"SALE\",\n        \"orderId\":\"order-123\",\n        \"processorTransactionId\":\"pi_3L3edsGZasdasdc1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORasvasdNWFwi8c\",\n        \"processorStatus\":\"SETTLED\",\n        \"cardTokenType\":\"CARD_PAN\"\n      }\n    ],\n    \"riskData\":{\n      \"fraudChecks\":{\n        \"source\":\"riskified\",\n        \"preAuthorizationResult\":\"THREE_DS\",\n        \"postAuthorizationResult\":\"ACCEPT\"\n      },\n      \"cvvCheck\": {\n        \"source\": \"processor\",\n        \"result\": \"MATCHED\"\n      },\n      \"avsCheck\": {\n        \"source\": \"processor\",\n        \"result\": {\n          \"streetAddress\": \"NOT_MATCHED\",\n          \"postalCode\": \"NOT_VERIFIED\"\n        }\n      }\n    }\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
        "method": "POST",
        "path": [],
        "headers": [
          {
            "key": "X-Signature-Primary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
          },
          {
            "key": "X-Signature-Secondary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
          }
        ],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentStatusWebhookPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "eventType": "string",
              "date": "2023-01-01T00:00:00Z",
              "notificationConfig": {
                "id": "string",
                "description": "string"
              },
              "version": "string",
              "payment": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "customerId": "string",
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "vaultedPaymentMethodToken": "string",
                  "analyticsId": "string",
                  "paymentMethodType": "string",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "string",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "processorMerchantId": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "string",
                    "preAuthorizationResult": "ACCEPT",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "string",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "string",
                    "result": {
                      "streetAddress": "MATCHED",
                      "postalCode": "MATCHED"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "subpackage_paymentWebhooks.payment_refund_webhook_event": {
        "id": "subpackage_paymentWebhooks.payment_refund_webhook_event",
        "namespace": [
          "subpackage_paymentWebhooks"
        ],
        "description": "Primer notifies you with a `PAYMENT.REFUND` Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.\n\nCheck the transaction with the most recent `transactionType: \"REFUND\"` in the `transactions` array:\n- if `processorStatus` is `SETTLED`, the refund was successful and the funds have been returned to the customer\n- if `processorStatus` is `FAILED`, the refund was unsuccessful\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
        "method": "POST",
        "path": [],
        "headers": [
          {
            "key": "X-Signature-Primary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
          },
          {
            "key": "X-Signature-Secondary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
          }
        ],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentRefundWebhookPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "eventType": "string",
              "date": "2023-01-01T00:00:00Z",
              "notificationConfig": {
                "id": "string",
                "description": "string"
              },
              "version": "string",
              "payment": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "customerId": "string",
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "vaultedPaymentMethodToken": "string",
                  "analyticsId": "string",
                  "paymentMethodType": "string",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "string",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "processorMerchantId": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "string",
                    "preAuthorizationResult": "ACCEPT",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "string",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "string",
                    "result": {
                      "streetAddress": "MATCHED",
                      "postalCode": "MATCHED"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event": {
        "id": "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
        "namespace": [
          "subpackage_disputeChargebacksWebhooks"
        ],
        "description": "Primer notifies you with a `DISPUTE.OPEN` webhook on newly opened disputes or chargebacks. This notification is unified across all processors.\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
        "method": "POST",
        "path": [],
        "headers": [
          {
            "key": "X-Signature-Primary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
          },
          {
            "key": "X-Signature-Secondary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
          }
        ],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:DisputeOpenWebhookPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "eventType": "string",
              "processorId": "string",
              "processorDisputeId": "string",
              "paymentId": "string",
              "transactionId": "string",
              "orderId": "string",
              "primerAccountId": "string"
            }
          }
        ]
      },
      "subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event": {
        "id": "subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event",
        "namespace": [
          "subpackage_disputeChargebacksWebhooks"
        ],
        "description": "Primer notifies you with a `DISPUTE.STATUS` webhook that will provide information on retrievals, disputes (also known as chargebacks), and preabritration filings.\n\nThis notification is supported for processors Adyen, Braintree, Checkout.com & PayPal.\n\nThe `DISPUTE.STATUS` event can be used to proactively communicate with customers, issue refunds, send disputes to risk tools, or to proactively defend disputes.\n\nThe `DISPUTE.STATUS` event is currently in an open beta stage, as we continue to add more processors.\n\nLearn more about [managing disputes at Primer](https://primer.io/docs/accept-payments/manage-disputes).\n",
        "method": "POST",
        "path": [],
        "headers": [
          {
            "key": "X-Signature-Primary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
          },
          {
            "key": "X-Signature-Secondary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
          }
        ],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:DisputeStatusWebhookPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "eventType": "string",
              "version": "string",
              "type": "RETRIEVAL",
              "status": "OPEN",
              "primerAccountId": "string",
              "transactionId": "string",
              "orderId": "string",
              "paymentId": "string",
              "paymentMethod": {
                "paymentMethodType": "string",
                "paymentMethodData": {
                  "network": "string"
                }
              },
              "processor": "ADYEN",
              "processorDisputeId": "string",
              "receivedAt": "2023-01-01T00:00:00Z",
              "challengeRequiredBy": "2023-01-01T00:00:00Z",
              "reason": "string",
              "reasonCode": "string",
              "processorReason": "string",
              "amount": 0,
              "currency": "string",
              "merchantId": "string"
            }
          }
        ]
      }
    },
    "types": {
      "type_:AccountFundingTypeEnum": {
        "name": "AccountFundingTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREDIT"
            },
            {
              "value": "DEBIT"
            },
            {
              "value": "PREPAID"
            },
            {
              "value": "CHARGE"
            },
            {
              "value": "DEFERRED_DEBIT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ApayaCustomerTokenApiSchema": {
        "name": "ApayaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mnc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mcc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BinDataApiSchema": {
        "name": "BinDataApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardNetworkEnum"
                }
              }
            },
            {
              "key": "issuerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "issuerName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuerCurrencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              }
            },
            {
              "key": "regionalRestriction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardRegionRestrictionEnum"
                }
              }
            },
            {
              "key": "accountNumberType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardAccountNumberTypeEnum"
                }
              }
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AccountFundingTypeEnum"
                }
              }
            },
            {
              "key": "prepaidReloadableIndicator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PrepaidReloadableEnum"
                }
              }
            },
            {
              "key": "productUsageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardProductTypeEnum"
                }
              }
            },
            {
              "key": "productCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "productName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CardAccountNumberTypeEnum": {
        "name": "CardAccountNumberTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PRIMARY_ACCOUNT_NUMBER"
            },
            {
              "value": "NETWORK_TOKEN"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardNetworkEnum": {
        "name": "CardNetworkEnum",
        "description": "[The list of available card networks and their `CARD_NETWORK_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_:CardProductTypeEnum": {
        "name": "CardProductTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CONSUMER"
            },
            {
              "value": "BUSINESS"
            },
            {
              "value": "GOVERNMENT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardRegionRestrictionEnum": {
        "name": "CardRegionRestrictionEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DOMESTIC_USE_ONLY"
            },
            {
              "value": "NONE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Order Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalOrderTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Payment Session Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaPaymentSessionApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Ideal Pay Nl Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:IdealPayNlTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment method token used to authorize the transaction."
            },
            {
              "key": "vaultedPaymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If the payment method token was vaulted, this is the new token. Use this token for recurring payments."
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type"
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "threeDSecureAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CountryCodeEnum": {
        "name": "CountryCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:Currency": {
        "name": "Currency",
        "description": "Enumerates all supported currencies",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_:PaymentResponseProcessorApiSchema": {
        "name": "PaymentResponseProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            },
            {
              "key": "amountCaptured",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts."
            },
            {
              "key": "amountRefunded",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts."
            }
          ]
        }
      },
      "type_:GoCardlessMandateApiSchema": {
        "name": "GoCardlessMandateApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "gocardlessMandateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Unique identifier of a GoCardless mandate agreement"
            }
          ]
        }
      },
      "type_:IdealPayNlTokenApiSchema": {
        "name": "IdealPayNlTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodConfigId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaAddressApiSchema": {
        "name": "KlarnaAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine3",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaCustomerTokenApiSchema": {
        "name": "KlarnaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaCustomerToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaPaymentSessionApiSchema": {
        "name": "KlarnaPaymentSessionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaAuthorizationToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaSessionDetailsApiSchema": {
        "name": "KlarnaSessionDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "recurringDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaAddressApiSchema"
                }
              }
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaAddressApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "purchaseCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "purchaseCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "locale",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "orderLines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "tokenDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaTokenDetails": {
        "name": "KlarnaTokenDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "masked_number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "expiry_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalBillingAgreementApiSchema": {
        "name": "PayPalBillingAgreementApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalBillingAgreementId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AddressApiSchema"
                    }
                  }
                }
              },
              "description": "The PayPal customer's shipping address"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalExternalPayerInfoApiSchema": {
        "name": "PayPalExternalPayerInfoApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalPayerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalOrderTokenApiSchema": {
        "name": "PayPalOrderTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalOrderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentStatusWebhookPayloadNotificationConfig": {
        "name": "PaymentStatusWebhookPayloadNotificationConfig",
        "description": "The notification configuration details.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration ID."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration description."
            }
          ]
        }
      },
      "type_:PaymentStatusWebhookPayloadPayment": {
        "name": "PaymentStatusWebhookPayloadPayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            },
            {
              "key": "riskData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentStatusWebhookPayload": {
        "name": "PaymentStatusWebhookPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the webhook raised. `PAYMENT.STATUS` in this case."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date-time that the webhook was sent."
            },
            {
              "key": "notificationConfig",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatusWebhookPayloadNotificationConfig"
                    }
                  }
                }
              },
              "description": "The notification configuration details."
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payload version"
            },
            {
              "key": "payment",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatusWebhookPayloadPayment"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentRefundWebhookPayloadNotificationConfig": {
        "name": "PaymentRefundWebhookPayloadNotificationConfig",
        "description": "The notification configuration details.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration ID."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration description."
            }
          ]
        }
      },
      "type_:PaymentRefundWebhookPayloadPayment": {
        "name": "PaymentRefundWebhookPayloadPayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            },
            {
              "key": "riskData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentRefundWebhookPayload": {
        "name": "PaymentRefundWebhookPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the webhook raised. `PAYMENT.REFUND` in this case."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date-time that the webhook was sent."
            },
            {
              "key": "notificationConfig",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentRefundWebhookPayloadNotificationConfig"
                    }
                  }
                }
              },
              "description": "The notification configuration details."
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payload version"
            },
            {
              "key": "payment",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentRefundWebhookPayloadPayment"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DisputeOpenWebhookPayload": {
        "name": "DisputeOpenWebhookPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the webhook raised. `DISPUTE.OPEN` in this case."
            },
            {
              "key": "processorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the processor that generated the dispute."
            },
            {
              "key": "processorDisputeId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the corresponding connection dispute."
            },
            {
              "key": "paymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the Primer payment corresponding to this dispute."
            },
            {
              "key": "transactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the Primer transaction corresponding to this dispute."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the sale transaction that the dispute relates to."
            },
            {
              "key": "primerAccountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your Primer merchant account."
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadType": {
        "name": "DisputeStatusWebhookPayloadType",
        "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "RETRIEVAL"
            },
            {
              "value": "DISPUTE"
            },
            {
              "value": "PREARBITRATION"
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadStatus": {
        "name": "DisputeStatusWebhookPayloadStatus",
        "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes).",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "OPEN"
            },
            {
              "value": "ACCEPTED"
            },
            {
              "value": "CHALLENGED"
            },
            {
              "value": "EXPIRED"
            },
            {
              "value": "CANCELLED"
            },
            {
              "value": "WON"
            },
            {
              "value": "LOST"
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData": {
        "name": "DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardNetworkEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadPaymentMethod": {
        "name": "DisputeStatusWebhookPayloadPaymentMethod",
        "description": "The payment method information for the payment that is now disputed.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadProcessor": {
        "name": "DisputeStatusWebhookPayloadProcessor",
        "description": "The payment processor that you submitted a payment to, and received a dispute notification from.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ADYEN"
            },
            {
              "value": "BRAINTREE"
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayload": {
        "name": "DisputeStatusWebhookPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of event that triggered the webhook. This will have the value `DISPUTE.STATUS`. This indicates that a dispute notification was issued through a configured connection.\n\nUse these notifications to proactively communicate with your customer, issue refunds, or submit evidence to challenge disputes."
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payload version"
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadType"
                    }
                  }
                }
              },
              "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadStatus"
                    }
                  }
                }
              },
              "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)."
            },
            {
              "key": "primerAccountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your Primer merchant account."
            },
            {
              "key": "transactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the Primer transaction corresponding to this dispute."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the sale transaction that the dispute relates to."
            },
            {
              "key": "paymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the Primer payment corresponding to this dispute."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadPaymentMethod"
                    }
                  }
                }
              },
              "description": "The payment method information for the payment that is now disputed."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadProcessor"
                    }
                  }
                }
              },
              "description": "The payment processor that you submitted a payment to, and received a dispute notification from."
            },
            {
              "key": "processorDisputeId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An identifier for this dispute provided by the processor. This is shared across multiple dispute `type` and `status` relating to the same payment.\n\ne.g. as an `open` dispute that is later challenged will share a `proccessorDisputeId`."
            },
            {
              "key": "receivedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date and time at which Primer received the processor's dispute event. Provided as an ISO timestamp in UTC."
            },
            {
              "key": "challengeRequiredBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Time by which the merchant must challenge a dispute. This is provided by the processor, where available."
            },
            {
              "key": "reason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primer’s unified reason that explains why the dispute was raised. This should not vary across processors for the same dispute `reasonCode`, unlike the `processorReason`."
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The dispute reason code for a dispute. This will be the same code provided by the card schemes."
            },
            {
              "key": "processorReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The dispute reason provided by the processor. This can vary across processors for the same dispute `reasonCode`, which is why we provide a unified field - `reason`."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The disputed amount. Note: this is not always the same as the payment amount.\n\nThis will be displayed in minor units.\n\ne.g. for $7, use `700`. Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`."
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "merchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this dispute."
            }
          ]
        }
      },
      "type_:PaymentCardTokenApiSchema": {
        "name": "PaymentCardTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "first6Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last4Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cardholderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isNetworkTokenized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "binData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BinDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StatusReasonApiSchema": {
        "name": "StatusReasonApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatusTypeEnum"
                }
              },
              "description": "Type of the status."
            },
            {
              "key": "declineType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeclineTypeEnum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried."
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED`, this will be returned."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error."
            }
          ]
        }
      },
      "type_:RiskDataApiSchema": {
        "name": "RiskDataApiSchema",
        "description": "Risk data associated with this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fraudChecks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudCheckApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "cvvCheck",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CvvCheckApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "avsCheck",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AvsCheckApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:FraudCheckApiSchema": {
        "name": "FraudCheckApiSchema",
        "description": "Results of the pre-authorization and post-authorization fraud checks.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "preAuthorizationResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postAuthorizationResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:FraudDecisionTypeEnum": {
        "name": "FraudDecisionTypeEnum",
        "description": "Possible fraud check outcomes.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ACCEPT"
            },
            {
              "value": "REFUSE"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "THREE_DS"
            }
          ]
        }
      },
      "type_:CvvCheckApiSchema": {
        "name": "CvvCheckApiSchema",
        "description": "Results of any external CVV check performed on this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AvsCheckApiSchema": {
        "name": "AvsCheckApiSchema",
        "description": "Results of any external AVS check performed on this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AvsRiskAssessmentValues"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AvsRiskAssessmentValues": {
        "name": "AvsRiskAssessmentValues",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "streetAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RiskAssessmentStatusEnum": {
        "name": "RiskAssessmentStatusEnum",
        "description": "Possible risk assessment values for CVV and AVS checks.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MATCHED"
            },
            {
              "value": "NOT_MATCHED"
            },
            {
              "value": "NOT_VERIFIED"
            },
            {
              "value": "NOT_PROVIDED"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "SKIPPED"
            }
          ]
        }
      },
      "type_:PaymentMethodTypeEnum": {
        "name": "PaymentMethodTypeEnum",
        "description": "[The list of available payment methods and their `PAYMENT_METHOD_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_:PrepaidReloadableEnum": {
        "name": "PrepaidReloadableEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "RELOADABLE"
            },
            {
              "value": "NON_RELOADABLE"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthResponseCodeEnum": {
        "name": "ThreeDSecureAuthResponseCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_PERFORMED"
            },
            {
              "value": "SKIPPED"
            },
            {
              "value": "AUTH_SUCCESS"
            },
            {
              "value": "AUTH_FAILED"
            },
            {
              "value": "CHALLENGE"
            },
            {
              "value": "METHOD"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
        "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Three D Secure Skipped Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureSkippedReasonCodeEnum"
                }
              }
            },
            {
              "displayName": "Three D Secure Failed Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureFailedReasonCodeEnum"
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchema": {
        "name": "ThreeDSecureAuthenticationApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "responseCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureAuthResponseCodeEnum"
                }
              }
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                }
              }
            },
            {
              "key": "reasonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "protocolVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "challengeIssued",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureFailedReasonCodeEnum": {
        "name": "ThreeDSecureFailedReasonCodeEnum",
        "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "UNKNOWN"
            },
            {
              "value": "REJECTED_BY_ISSUER"
            },
            {
              "value": "CARD_AUTHENTICATION_FAILED"
            },
            {
              "value": "UNKNOWN_DEVICE"
            },
            {
              "value": "UNSUPPORTED_DEVICE"
            },
            {
              "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "INVALID_TRANSACTION"
            },
            {
              "value": "NO_CARD_RECORD"
            },
            {
              "value": "SECURITY_FAILURE"
            },
            {
              "value": "STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
            },
            {
              "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
            },
            {
              "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
            },
            {
              "value": "LOW_CONFIDENCE"
            },
            {
              "value": "MEDIUM_CONFIDENCE"
            },
            {
              "value": "HIGH_CONFIDENCE"
            },
            {
              "value": "VERY_HIGH_CONFIDENCE"
            },
            {
              "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
            },
            {
              "value": "NON_PAYMENT_NOT_SUPPORTED"
            },
            {
              "value": "THREE_RI_NOT_SUPPORTED"
            },
            {
              "value": "ACS_TECHNICAL_ISSUE"
            },
            {
              "value": "DECOUPLED_REQUIRED_BY_ACS"
            },
            {
              "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
            },
            {
              "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
            },
            {
              "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
            },
            {
              "value": "ACS_TIMED_OUT"
            },
            {
              "value": "INVALID_ACS_RESPONSE"
            },
            {
              "value": "ACS_SYSTEM_ERROR_RESPONSE"
            },
            {
              "value": "ERROR_GENERATING_CAVV"
            },
            {
              "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
            },
            {
              "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
            },
            {
              "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
            }
          ]
        }
      },
      "type_:ThreeDSecureSkippedReasonCodeEnum": {
        "name": "ThreeDSecureSkippedReasonCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "GATEWAY_UNAVAILABLE"
            },
            {
              "value": "DISABLED_BY_MERCHANT"
            },
            {
              "value": "NOT_SUPPORTED_BY_ISSUER"
            },
            {
              "value": "FAILED_TO_NEGOTIATE"
            },
            {
              "value": "UNKNOWN_ACS_RESPONSE"
            },
            {
              "value": "3DS_SERVER_ERROR"
            },
            {
              "value": "ACQUIRER_NOT_CONFIGURED"
            },
            {
              "value": "ACQUIRER_NOT_PARTICIPATING"
            }
          ]
        }
      },
      "type_:DeclineTypeEnum": {
        "name": "DeclineTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SOFT_DECLINE"
            },
            {
              "value": "HARD_DECLINE"
            }
          ]
        }
      },
      "type_:TransactionDeclineReasonV2Enum": {
        "name": "TransactionDeclineReasonV2Enum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ERROR"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "LOST_OR_STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REFER_TO_CARD_ISSUER"
            },
            {
              "value": "DO_NOT_HONOR"
            },
            {
              "value": "INSUFFICIENT_FUNDS"
            },
            {
              "value": "WITHDRAWAL_LIMIT_EXCEEDED"
            },
            {
              "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
            },
            {
              "value": "AUTHENTICATION_REQUIRED"
            }
          ]
        }
      },
      "type_:TransactionOverviewApiSchema": {
        "name": "TransactionOverviewApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "transactionType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "processorTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Processor's unique identifier for the transaction"
            },
            {
              "key": "processorName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An identifier of a processor."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\""
            },
            {
              "key": "processorStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information"
            },
            {
              "key": "processorStatusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`."
            }
          ]
        }
      },
      "type_:PaymentStatus": {
        "name": "PaymentStatus",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            }
          ]
        }
      },
      "type_:PaymentStatusTypeEnum": {
        "name": "PaymentStatusTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPLICATION_ERROR"
            },
            {
              "value": "GATEWAY_REJECTED"
            },
            {
              "value": "ISSUER_DECLINED"
            }
          ]
        }
      },
      "type_:TransactionTypeEnum": {
        "name": "TransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SALE"
            },
            {
              "value": "REFUND"
            }
          ]
        }
      },
      "type_:AddressApiSchema": {
        "name": "AddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CountryCodeEnum"
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:RecurringTransactionTypeEnum": {
        "name": "RecurringTransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            }
          ]
        }
      },
      "type_:RecurringPaymentTypeSchema": {
        "name": "RecurringPaymentTypeSchema",
        "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:RecurringTransactionTypeEnum"
          }
        }
      },
      "type_:AuthorizationTypeEnum": {
        "name": "AuthorizationTypeEnum",
        "description": "Type of authorization for the payment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ESTIMATED"
            },
            {
              "value": "FINAL"
            }
          ]
        }
      },
      "type_:OptionalAddressApiSchema": {
        "name": "OptionalAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:CheckoutCustomerDetailsApiSchema": {
        "name": "CheckoutCustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses."
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address."
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_paymentWebhooks": {
        "id": "subpackage_paymentWebhooks",
        "name": "paymentWebhooks"
      },
      "subpackage_disputeChargebacksWebhooks": {
        "id": "subpackage_disputeChargebacksWebhooks",
        "name": "disputeChargebacksWebhooks"
      }
    },
    "auths": {}
  },
  {
    "id": "090e0b31-c453-4f41-8269-845a6e8a461f",
    "endpoints": {
      "subpackage_clientSessionApi.retrieveClientSideToken": {
        "id": "subpackage_clientSessionApi.retrieveClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "clientToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Client token corresponding to the client session to retrieve"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "currencyCode": "AED",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "clientToken": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d clientToken=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "clientToken": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d clientToken=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_clientSessionApi.createClientSideToken": {
        "id": "subpackage_clientSessionApi.createClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`.\nIf any of these are not yet available, you can provide them w\nhen making the payment request.\n\n<code>POST /client-session</code> does not have required fields as all fields are not always known when a client session is created.\nUse <code>PATCH /client-session</code> to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the payment."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Currency"
                      }
                    }
                  }
                },
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id."
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutCustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionWithTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "currencyCode": "AED",
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                },
                "warnings": {
                  "type": "TAXJAR",
                  "code": "MISSING_DATA"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"currencyCode\": \"AED\",\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"amount\": 1,\n        \"productType\": \"PHYSICAL\",\n        \"productData\": {}\n      }\n    ],\n    \"countryCode\": \"AW\",\n    \"retailerCountryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\",\n    \"orderedAllowedCardNetworks\": [\n      \"AMEX\"\n    ],\n    \"options\": {\n      \"<PAYMENT_METHOD_TYPE>\": {\n        \"surcharge\": {}\n      },\n      \"PAYMENT_CARD\": {\n        \"networks\": {\n          \"AMEX\": {\n            \"surcharge\": {}\n          },\n          \"DANKORT\": {\n            \"surcharge\": {}\n          },\n          \"DINERS_CLUB\": {\n            \"surcharge\": {}\n          },\n          \"DISCOVER\": {\n            \"surcharge\": {}\n          },\n          \"ENROUTE\": {\n            \"surcharge\": {}\n          },\n          \"ELO\": {\n            \"surcharge\": {}\n          },\n          \"HIPER\": {\n            \"surcharge\": {}\n          },\n          \"INTERAC\": {\n            \"surcharge\": {}\n          },\n          \"JCB\": {\n            \"surcharge\": {}\n          },\n          \"MAESTRO\": {\n            \"surcharge\": {}\n          },\n          \"MASTERCARD\": {\n            \"surcharge\": {}\n          },\n          \"MIR\": {\n            \"surcharge\": {}\n          },\n          \"PRIVATE_LABEL\": {\n            \"surcharge\": {}\n          },\n          \"UNIONPAY\": {\n            \"surcharge\": {}\n          },\n          \"VISA\": {\n            \"surcharge\": {}\n          },\n          \"OTHER\": {\n            \"surcharge\": {}\n          }\n        }\n      }\n    },\n    \"authorizationType\": \"ESTIMATED\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_clientSessionApi.updateClientSideToken": {
        "id": "subpackage_clientSessionApi.updateClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "clientToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call."
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the order."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n"
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutCustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n"
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "currencyCode": "AED",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"amount\": 1,\n        \"productType\": \"PHYSICAL\",\n        \"productData\": {}\n      }\n    ],\n    \"countryCode\": \"AW\",\n    \"retailerCountryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\",\n    \"orderedAllowedCardNetworks\": [\n      \"AMEX\"\n    ],\n    \"options\": {\n      \"<PAYMENT_METHOD_TYPE>\": {\n        \"surcharge\": {}\n      },\n      \"PAYMENT_CARD\": {\n        \"networks\": {\n          \"AMEX\": {\n            \"surcharge\": {}\n          },\n          \"DANKORT\": {\n            \"surcharge\": {}\n          },\n          \"DINERS_CLUB\": {\n            \"surcharge\": {}\n          },\n          \"DISCOVER\": {\n            \"surcharge\": {}\n          },\n          \"ENROUTE\": {\n            \"surcharge\": {}\n          },\n          \"ELO\": {\n            \"surcharge\": {}\n          },\n          \"HIPER\": {\n            \"surcharge\": {}\n          },\n          \"INTERAC\": {\n            \"surcharge\": {}\n          },\n          \"JCB\": {\n            \"surcharge\": {}\n          },\n          \"MAESTRO\": {\n            \"surcharge\": {}\n          },\n          \"MASTERCARD\": {\n            \"surcharge\": {}\n          },\n          \"MIR\": {\n            \"surcharge\": {}\n          },\n          \"PRIVATE_LABEL\": {\n            \"surcharge\": {}\n          },\n          \"UNIONPAY\": {\n            \"surcharge\": {}\n          },\n          \"VISA\": {\n            \"surcharge\": {}\n          },\n          \"OTHER\": {\n            \"surcharge\": {}\n          }\n        }\n      }\n    },\n    \"authorizationType\": \"ESTIMATED\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.listPayments": {
        "id": "subpackage_paymentsApi.listPayments",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\nFor example, if you wanted to get both `FAILED` and `CANCELLED` payments, for customer `john-123`, you would use:\n\n```bash\ncurl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \\\n--header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\nYou can alternatively specify a list by repeating the parameter multiple times.\n\n**Note:** payments will be available within a minute from being created.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentStatus"
                  }
                }
              }
            },
            "description": "Filter payments by their status."
          },
          {
            "key": "payment_method_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentMethodTypeEnum"
                  }
                }
              }
            },
            "description": "Filter payments by their payment method type."
          },
          {
            "key": "processor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter payments by their payment processor."
          },
          {
            "key": "currency_code",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars."
          },
          {
            "key": "from_date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Return only payments from this date (inclusive)."
          },
          {
            "key": "to_date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Return only payments up to this date (inclusive)."
          },
          {
            "key": "order_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Return payments related to this order ID."
          },
          {
            "key": "min_amount",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Return payments of this amount minimum (inclusive)."
          },
          {
            "key": "max_amount",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Return payments of this amount max (inclusive)."
          },
          {
            "key": "customer_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "ID of the customer that has made the payment."
          },
          {
            "key": "merchant_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "ID of the merchant involved in the payment."
          },
          {
            "key": "customer_email_address",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Email of the customer that has made the payment."
          },
          {
            "key": "last_4_digits",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Last 4 digits of the card used for the payment."
          },
          {
            "key": "paypal_email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Paypal email address associated with the payment."
          },
          {
            "key": "klarna_email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Klarna email address associated with the payment."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Maximum number of payments to return per page."
          },
          {
            "key": "cursor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "If results are paginated, pass the `nextCursor` to access next page."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentListApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "status": "PENDING",
              "payment_method_type": "PAYMENT_CARD"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "date": "2024-01-15T09:30:00Z",
                    "dateUpdated": "2024-01-15T09:30:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 1,
                    "processor": {
                      "name": "string"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d status=PENDING \\\n     -d payment_method_type=PAYMENT_CARD",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "status": "PENDING",
              "payment_method_type": "PAYMENT_CARD"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d status=PENDING \\\n     -d payment_method_type=PAYMENT_CARD",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.createPayment": {
        "id": "subpackage_paymentsApi.createPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.\nParameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify `customer.billingAddress` in Client Session and then pass `customer.emailAddress` data with this request, it will automatically merge the `customer` fields and use both `billingAddress` and `emailAddress` for later calculations.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the payment."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Currency"
                      }
                    }
                  }
                },
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "paymentMethodToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The payment method token used to authorize the payment.\n"
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`."
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer.\n"
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string",
                "currencyCode": "AED",
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\",\n  \"currencyCode\": \"AED\",\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"amount\": 1,\n        \"productType\": \"PHYSICAL\",\n        \"productData\": {}\n      }\n    ],\n    \"countryCode\": \"AW\",\n    \"retailerCountryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\",\n    \"authorizationType\": \"ESTIMATED\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.authorizePayment": {
        "id": "subpackage_paymentsApi.authorizePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nManually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.\nThe processor merchant ID must be provided which can be found on the [Integrations page](https://dashboard.primer.io/integrations).\nThe processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/authorize"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the payment to authorize."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "processor",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentAuthorizationRequestProcessorApiSchema"
                  }
                },
                "description": "The payment processor to use for this payment."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_four_ErrorResponse"
              }
            }
          },
          {
            "name": "Conflict",
            "statusCode": 409,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_nine_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/authorize",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "acct_myprocessor_1234"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "MYPROCESSOR",
                  "processorMerchantId": "acct_myprocessor_1234",
                  "amountCaptured": 42,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_myprocessor_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "MYPROCESSOR",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/authorize \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"acct_myprocessor_1234\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/authorize",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/authorize \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/authorize",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/authorize \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/authorize",
            "responseStatusCode": 409,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/authorize \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/authorize",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/authorize \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.capturePayment": {
        "id": "subpackage_paymentsApi.capturePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/capture"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the payment to capture."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount."
              },
              {
                "key": "final",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_paymentsApi:PaymentCaptureApiRequestOrder"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows ([read more here](https://primer.io/docs/changelog/migration-guides/new-workflows)).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/capture",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "order": {
                  "retailerCountryCode": "AW"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "SETTLED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 42,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "SETTLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/capture \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"order\": {\n    \"retailerCountryCode\": \"AW\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/capture",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/capture \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/capture",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/capture \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.cancelPayment": {
        "id": "subpackage_paymentsApi.cancelPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/cancel"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to cancel."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "reason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "You can optionally specify a reason for the cancellation. This is for your own records."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/cancel",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "CANCELLED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "CANCELLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/cancel \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/cancel",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/cancel \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.refundPayment": {
        "id": "subpackage_paymentsApi.refundPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/refund"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to refund."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation."
              },
              {
                "key": "reason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "You can optionally specify a reason for the refund. This is for your own records."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/refund",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "SETTLED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 42,
                  "amountRefunded": 42
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "SETTLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/refund \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/refund",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/refund \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/refund",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/refund \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.resumePayment": {
        "id": "subpackage_paymentsApi.resumePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/resume"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to resume."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "resumeToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/resume",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resumeToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/resume \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resumeToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/resume",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resumeToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/resume \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resumeToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.adjustAuthorization": {
        "id": "subpackage_paymentsApi.adjustAuthorization",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nAdjust authorized amount. This is only possible if `authorizationType` was set to\n`ESTIMATED` when the payment was created, and the mechanism is supported by the payment method.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/adjust-authorization"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment for adjusting authorization."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The **final** amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_four_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/adjust-authorization",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 1
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "ESTIMATED"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/adjust-authorization \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 1\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/adjust-authorization",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/adjust-authorization \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 0\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/adjust-authorization",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/adjust-authorization \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 0\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/adjust-authorization",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/adjust-authorization \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 0\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.getPaymentById": {
        "id": "subpackage_paymentsApi.getPaymentById",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nRetrieve a payment by its ID.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to retrieve."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "ACCEPT",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "MATCHED",
                      "postalCode": "MATCHED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/payments/string \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/payments/:id \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post": {
        "id": "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodToken"
          },
          {
            "type": "literal",
            "value": "/vault"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentMethodToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Payment method token to store."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The ID representing the customer"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string/vault",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentMethodToken": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "binData": {
                    "network": "AMEX",
                    "issuerCountryCode": "AW",
                    "issuerCurrencyCode": "AED",
                    "regionalRestriction": "DOMESTIC_USE_ONLY",
                    "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                    "accountFundingType": "CREDIT",
                    "prepaidReloadableIndicator": "RELOADABLE",
                    "productUsageType": "CONSUMER",
                    "productCode": "string",
                    "productName": "string"
                  }
                },
                "paymentMethodType": "PAYMENT_CARD"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/string/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken/vault",
            "responseStatusCode": 400,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken/vault",
            "responseStatusCode": 422,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get": {
        "id": "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Retrieve a list of stored payment methods for a customer.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "customer_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Return payment methods for this customer ID."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/payment-instruments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "customer_id": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "binData": {
                        "network": "AMEX",
                        "issuerCountryCode": "AW",
                        "issuerCurrencyCode": "AED",
                        "regionalRestriction": "DOMESTIC_USE_ONLY",
                        "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                        "accountFundingType": "CREDIT",
                        "prepaidReloadableIndicator": "RELOADABLE",
                        "productUsageType": "CONSUMER",
                        "productCode": "string",
                        "productName": "string"
                      }
                    },
                    "paymentMethodType": "PAYMENT_CARD"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payment-instruments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d customer_id=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete": {
        "id": "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Delete a saved payment method.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodToken"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentMethodToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Saved payment method token to delete."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentMethodToken": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "binData": {
                    "network": "AMEX",
                    "issuerCountryCode": "AW",
                    "issuerCurrencyCode": "AED",
                    "regionalRestriction": "DOMESTIC_USE_ONLY",
                    "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                    "accountFundingType": "CREDIT",
                    "prepaidReloadableIndicator": "RELOADABLE",
                    "productUsageType": "CONSUMER",
                    "productCode": "string",
                    "productName": "string"
                  }
                },
                "paymentMethodType": "PAYMENT_CARD"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.sandbox.primer.io/payment-instruments/string \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken",
            "responseStatusCode": 400,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post": {
        "id": "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Update a saved payment method to be the default stored payment method for a customer.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodToken"
          },
          {
            "type": "literal",
            "value": "/default"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentMethodToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Saved payment method token to set to default."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:MerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string/default",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentMethodToken": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodType": "PAYMENT_CARD",
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "binData": {
                    "network": "AMEX",
                    "issuerCountryCode": "AW",
                    "issuerCurrencyCode": "AED",
                    "regionalRestriction": "DOMESTIC_USE_ONLY",
                    "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                    "accountFundingType": "CREDIT",
                    "prepaidReloadableIndicator": "RELOADABLE",
                    "productUsageType": "CONSUMER",
                    "productCode": "string",
                    "productName": "string"
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/string/default \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken/default",
            "responseStatusCode": 400,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/default \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_observabilityApiBeta.external_payment": {
        "id": "subpackage_observabilityApiBeta.external_payment",
        "namespace": [
          "subpackage_observabilityApiBeta"
        ],
        "description": "The Observability API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreating a payment with the Observability API sends external payments data to Primer to populate [Observability Payment Insights dashboards](https://primer.io/observability). Payments created through the [Payments API](/reference/create_payment_payments_post) will be automatically populated and do not need to be sent in the Observability API.\n\nCreate an API key with the `observability-payments:write` scope.\n\nEach record must be created with a unique `paymentId`. To update a payment record with new data use the `PATCH` endpoint.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/observability/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentsInsightsPayment"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentsInsightsPayment"
            }
          }
        },
        "examples": [
          {
            "path": "/observability/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "paymentId": "string",
                "currencyCode": "AED",
                "processor": {
                  "name": "APAYA"
                },
                "amount": 1,
                "createdAt": "2024-01-15T09:30:00Z",
                "order": {
                  "id": "string",
                  "countryCode": "AW"
                },
                "paymentMethod": {
                  "paymentMethodType": "PAYMENT_CARD",
                  "data": {
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED"
                  }
                },
                "status": "DECLINED",
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "paymentType": "FIRST_PAYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "paymentId": "string",
                "currencyCode": "AED",
                "processor": {
                  "name": "APAYA"
                },
                "amount": 1,
                "createdAt": "2024-01-15T09:30:00Z",
                "order": {
                  "id": "string",
                  "countryCode": "AW"
                },
                "paymentMethod": {
                  "paymentMethodType": "PAYMENT_CARD",
                  "data": {
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED"
                  }
                },
                "status": "DECLINED",
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "paymentType": "FIRST_PAYMENT"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/observability/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentId\": \"string\",\n  \"currencyCode\": \"AED\",\n  \"processor\": {\n    \"name\": \"APAYA\"\n  },\n  \"amount\": 1,\n  \"createdAt\": \"2024-01-15T09:30:00Z\",\n  \"order\": {\n    \"id\": \"string\",\n    \"countryCode\": \"AW\"\n  },\n  \"paymentMethod\": {\n    \"paymentMethodType\": \"PAYMENT_CARD\",\n    \"data\": {\n      \"binData\": {\n        \"network\": \"AMEX\",\n        \"issuerCountryCode\": \"AW\"\n      }\n    },\n    \"threeDSecureAuthentication\": {\n      \"responseCode\": \"NOT_PERFORMED\"\n    }\n  },\n  \"status\": \"DECLINED\",\n  \"statusReason\": {\n    \"type\": \"APPLICATION_ERROR\",\n    \"declineType\": \"SOFT_DECLINE\",\n    \"code\": \"ERROR\"\n  },\n  \"paymentType\": \"FIRST_PAYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_observabilityApiBeta.external_payment_update": {
        "id": "subpackage_observabilityApiBeta.external_payment_update",
        "namespace": [
          "subpackage_observabilityApiBeta"
        ],
        "description": "The Observability API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nYou can update payments created earlier through the Observability API with this endpoint. The only required field for the request is `paymentId`. Other supported request fields are the same as for the [create an external payment](/reference/external_payment) API call.\n\nIf you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in `processor.name` only.\n\nThe response will contain all the fields of the payment including the ones that were changed.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/observability/payments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "paymentId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode"
                      }
                    }
                  }
                },
                "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars."
              },
              {
                "key": "processor",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentsInsightsProcessor"
                      }
                    }
                  }
                }
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0."
              },
              {
                "key": "createdAt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  }
                },
                "description": "The payment creation date and time (UTC) in [ISO 8601 format](\nhttps://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentsInsightsOrder"
                      }
                    }
                  }
                }
              },
              {
                "key": "status",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus"
                      }
                    }
                  }
                },
                "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information."
              },
              {
                "key": "statusReason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentsInsightsStatusReason"
                      }
                    }
                  }
                },
                "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`."
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentsInsightsPaymentMethod"
                      }
                    }
                  }
                }
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`"
              },
              {
                "key": "paymentType",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType"
                      }
                    }
                  }
                },
                "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |"
              },
              {
                "key": "descriptor",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A description of the payment,\nas it would typically appear on a bank statement."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentsInsightsPayment"
            }
          }
        },
        "examples": [
          {
            "path": "/observability/payments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentId": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "currencyCode": "AED",
                "processor": {
                  "name": "APAYA"
                },
                "order": {
                  "id": "string",
                  "countryCode": "AW"
                },
                "status": "DECLINED",
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "paymentMethod": {
                  "paymentMethodType": "PAYMENT_CARD",
                  "data": {
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED"
                  }
                },
                "paymentType": "FIRST_PAYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "paymentId": "string",
                "currencyCode": "AED",
                "processor": {
                  "name": "APAYA"
                },
                "amount": 1,
                "createdAt": "2024-01-15T09:30:00Z",
                "order": {
                  "id": "string",
                  "countryCode": "AW"
                },
                "paymentMethod": {
                  "paymentMethodType": "PAYMENT_CARD",
                  "data": {
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED"
                  }
                },
                "status": "DECLINED",
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "paymentType": "FIRST_PAYMENT"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/observability/payments/string \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"currencyCode\": \"AED\",\n  \"processor\": {\n    \"name\": \"APAYA\"\n  },\n  \"order\": {\n    \"id\": \"string\",\n    \"countryCode\": \"AW\"\n  },\n  \"status\": \"DECLINED\",\n  \"statusReason\": {\n    \"type\": \"APPLICATION_ERROR\",\n    \"declineType\": \"SOFT_DECLINE\",\n    \"code\": \"ERROR\"\n  },\n  \"paymentMethod\": {\n    \"paymentMethodType\": \"PAYMENT_CARD\",\n    \"data\": {\n      \"binData\": {\n        \"network\": \"AMEX\",\n        \"issuerCountryCode\": \"AW\"\n      }\n    },\n    \"threeDSecureAuthentication\": {\n      \"responseCode\": \"NOT_PERFORMED\"\n    }\n  },\n  \"paymentType\": \"FIRST_PAYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_loyaltyApi.get_loyalty_customer": {
        "id": "subpackage_loyaltyApi.get_loyalty_customer",
        "namespace": [
          "subpackage_loyaltyApi"
        ],
        "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet a loyalty customer by ID and connection ID. This includes the customer's points balance.\n\nThe `connectionId` is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.\n\nThe `customerId` refers to the customer identifier on the loyalty provider's side.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/loyalty-customers/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the customer on the loyalty provider."
          }
        ],
        "queryParameters": [
          {
            "key": "connectionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the Primer connection configuration."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:LoyaltyApiBalanceResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/loyalty-customers/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {
              "connectionId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/loyalty-customers/string \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d connectionId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-customers/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "connectionId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/loyalty-customers/:id \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d connectionId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_loyaltyApi.get_loyalty_customer_transactions": {
        "id": "subpackage_loyaltyApi.get_loyalty_customer_transactions",
        "namespace": [
          "subpackage_loyaltyApi"
        ],
        "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet all your loyalty transactions. You can filter by `connectionId` (recommended) and by `customerId` and `orderId`.\n\nAdditionally provide a `limit` to restrict the number of transactions in the response, and an `offset` to determine where to start.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/loyalty-transactions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "connectionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter transactions by customer Id."
          },
          {
            "key": "customerId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter transactions by customer Id."
          },
          {
            "key": "orderId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter transactions by orderId."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Limit the number of returned results"
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The number of items to skip before returning results"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:LoyaltyApiTransactionsListResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "date": "2023-01-01T12:00:00.00000",
                    "id": "t101",
                    "connectionId": "waon-123",
                    "customerId": "waon-customer-123",
                    "orderId": "order-123",
                    "connectionTransactionId": "waonTx1",
                    "connectionName": "WOAN",
                    "type": "REDEMPTION",
                    "value": 200
                  }
                ],
                "total": 54,
                "limit": 2,
                "offset": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "connectionId": "string",
              "customerId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d connectionId=string \\\n     -d customerId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "connectionId": "string",
              "customerId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d connectionId=string \\\n     -d customerId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_loyaltyApi.post_loyalty_transaction": {
        "id": "subpackage_loyaltyApi.post_loyalty_transaction",
        "namespace": [
          "subpackage_loyaltyApi"
        ],
        "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:write` scopes.\n\nCreate a loyalty transaction. This is either a points redemption or a points refund.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/loyalty-transactions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "connectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "ID of the Primer connection configuration."
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the customer on the loyalty provider."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Unique identifier for the order."
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:LoyaltyTransactionTypeEnum"
                      }
                    }
                  }
                },
                "description": "The type of the transaction."
              },
              {
                "key": "value",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The value of points to redeem."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:LoyaltyApiTransactionResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connectionId": "string",
                "customerId": "string",
                "orderId": "string",
                "value": 1,
                "type": "REDEMPTION"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "date": "2023-01-01",
                "id": "t101",
                "connectionId": "waon-123",
                "customerId": "waon-customer-123",
                "orderId": "order-123",
                "connectionTransactionId": "waonTx1",
                "connectionName": "WOAN",
                "type": "REDEMPTION",
                "value": 200
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connectionId\": \"string\",\n  \"customerId\": \"string\",\n  \"orderId\": \"string\",\n  \"value\": 1,\n  \"type\": \"REDEMPTION\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connectionId": "string",
                "customerId": "string",
                "orderId": "string",
                "value": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connectionId\": \"string\",\n  \"customerId\": \"string\",\n  \"orderId\": \"string\",\n  \"value\": 0\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connectionId": "string",
                "customerId": "string",
                "orderId": "string",
                "value": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connectionId\": \"string\",\n  \"customerId\": \"string\",\n  \"orderId\": \"string\",\n  \"value\": 0\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_paymentsApi:PaymentCaptureApiRequestOrder": {
        "name": "PaymentCaptureApiRequestOrder",
        "description": "More information associated with the order.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "retailerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "The country code of the retailer.\nThis field is passed to the processor and overwrites the retailer country code set in order details."
            }
          ]
        }
      },
      "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode": {
        "name": "PaymentsInsightsPatchedPaymentCurrencyCode",
        "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus": {
        "name": "PaymentsInsightsPatchedPaymentStatus",
        "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "PENDING"
            }
          ]
        }
      },
      "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType": {
        "name": "PaymentsInsightsPatchedPaymentPaymentType",
        "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            },
            {
              "value": "MOTO"
            },
            {
              "value": "IN_STORE"
            }
          ]
        }
      },
      "type_:AccountFundingTypeEnum": {
        "name": "AccountFundingTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREDIT"
            },
            {
              "value": "DEBIT"
            },
            {
              "value": "PREPAID"
            },
            {
              "value": "CHARGE"
            },
            {
              "value": "DEFERRED_DEBIT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ApayaCustomerTokenApiSchema": {
        "name": "ApayaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mnc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mcc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BinDataApiSchema": {
        "name": "BinDataApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardNetworkEnum"
                }
              }
            },
            {
              "key": "issuerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "issuerName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuerCurrencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              }
            },
            {
              "key": "regionalRestriction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardRegionRestrictionEnum"
                }
              }
            },
            {
              "key": "accountNumberType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardAccountNumberTypeEnum"
                }
              }
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AccountFundingTypeEnum"
                }
              }
            },
            {
              "key": "prepaidReloadableIndicator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PrepaidReloadableEnum"
                }
              }
            },
            {
              "key": "productUsageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardProductTypeEnum"
                }
              }
            },
            {
              "key": "productCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "productName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BlockingPaymentActionTypeEnum": {
        "name": "BlockingPaymentActionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "3DS_AUTHENTICATION"
            },
            {
              "value": "USE_PRIMER_SDK"
            },
            {
              "value": "PAYMENT_METHOD_VOUCHER"
            },
            {
              "value": "PROCESSOR_3DS"
            }
          ]
        }
      },
      "type_:CardAccountNumberTypeEnum": {
        "name": "CardAccountNumberTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PRIMARY_ACCOUNT_NUMBER"
            },
            {
              "value": "NETWORK_TOKEN"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardNetworkEnum": {
        "name": "CardNetworkEnum",
        "description": "The list of available card networks.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AMEX"
            },
            {
              "value": "DANKORT"
            },
            {
              "value": "DINERS_CLUB"
            },
            {
              "value": "DISCOVER"
            },
            {
              "value": "ENROUTE"
            },
            {
              "value": "ELO"
            },
            {
              "value": "HIPER"
            },
            {
              "value": "INTERAC"
            },
            {
              "value": "JCB"
            },
            {
              "value": "MAESTRO"
            },
            {
              "value": "MASTERCARD"
            },
            {
              "value": "MIR"
            },
            {
              "value": "PRIVATE_LABEL"
            },
            {
              "value": "UNIONPAY"
            },
            {
              "value": "VISA"
            },
            {
              "value": "OTHER"
            }
          ]
        }
      },
      "type_:CardProductTypeEnum": {
        "name": "CardProductTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CONSUMER"
            },
            {
              "value": "BUSINESS"
            },
            {
              "value": "GOVERNMENT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardRegionRestrictionEnum": {
        "name": "CardRegionRestrictionEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DOMESTIC_USE_ONLY"
            },
            {
              "value": "NONE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:OrderDetailsApiSchema": {
        "name": "OrderDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "lineItems",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:OrderLineItemsApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The details of the line items of the order."
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "The country in which the order is created"
            },
            {
              "key": "retailerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "The country code of the retailer"
            },
            {
              "key": "fees",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:OrderFeesApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The details of fees charged."
            },
            {
              "key": "shipping",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderShippingApiSchema"
                    }
                  }
                }
              },
              "description": "The details of shipping charged."
            }
          ]
        }
      },
      "type_:OrderFeesApiSchema": {
        "name": "OrderFeesApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The fee amount charged to the customer, in minor units. e.g. for $7, use `700`."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of fee."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the fee, e.g. \"Currency Conversion Fee\"."
            }
          ]
        }
      },
      "type_:OrderLineItemsApiSchema": {
        "name": "OrderLineItemsApiSchema",
        "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so:\n\n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n````",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the line item."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A name of the item."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the item."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The amount charged to the customer, in minor units. The minimum amount is 0."
            },
            {
              "key": "quantity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The number of the particular line item that is being ordered."
            },
            {
              "key": "discountAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`."
            },
            {
              "key": "taxAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`."
            },
            {
              "key": "taxCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations."
            },
            {
              "key": "productType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ProductTypeEnum"
                    }
                  }
                }
              },
              "description": "An identifier for the product type."
            },
            {
              "key": "productData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderLineItemsProductDataApiSchema"
                    }
                  }
                }
              },
              "description": "Details related to the product"
            }
          ]
        }
      },
      "type_:OrderLineItemsProductDataApiSchema": {
        "name": "OrderLineItemsProductDataApiSchema",
        "description": "Details related to the product",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sku",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product SKU"
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product brand"
            },
            {
              "key": "color",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product color"
            },
            {
              "key": "globalTradeItemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product Global Trade Item Number (e.g. ISBN)"
            },
            {
              "key": "manufacturerPartNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product Manufacturer Part Number"
            },
            {
              "key": "weight",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The product weight"
            },
            {
              "key": "weightUnit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product weight unit (e.g. kg, g)"
            }
          ]
        }
      },
      "type_:OrderShippingApiSchema": {
        "name": "OrderShippingApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
        "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
        "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "<PAYMENT_METHOD_TYPE>",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "PAYMENT_CARD",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionsApiSchema": {
        "name": "CheckoutPaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "vaultOnSuccess",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted on a successful payment or not."
            },
            {
              "key": "vaultOn3DS",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not."
            },
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "orderedAllowedCardNetworks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:CardNetworkEnum"
                        }
                      }
                    }
                  }
                }
              },
              "description": "If provided, the checkout will run the validation on the entered card number and raise an error in case the card network is not supported.\n\nThe order sets the default card network that should be used in the case of co-badged cards.\ne.g. in the case of `[\"VISA\", \"CARTES_BANCAIRES\", \"MASTERCARD\"]` - if the user enters a \"Visa\" / \"Cartes Bancaires\" card: the default is Visa.\n\nValues should be unique.\n\nIf `null` or nothing passed in the request, the following list with all card networks will be returned in the response:\n\n`[\"VISA\", \"MASTERCARD\", \"AMEX\", \"MAESTRO\", \"UNIONPAY\", \"CARTES_BANCAIRES\", \"DANKORT\", \"DINERS_CLUB\", \"DISCOVER\", \"ENROUTE\", \"ELO\", \"HIPER\", \"INTERAC\", \"JCB\", \"MIR\", \"OTHER\"]`"
            },
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                    }
                  }
                }
              },
              "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options."
            },
            {
              "key": "authorizationType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              },
              "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionApiSchema": {
        "name": "CheckoutPaymentMethodOptionApiSchema",
        "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "surcharge",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                }
              },
              "description": "Surcharge information"
            },
            {
              "key": "extraMerchantData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionExtraMerchantDataApiSchema"
                    }
                  }
                }
              },
              "description": "For payments using the Klarna payment method, depending on the merchant segment and/or\nthe services available to consumers, Klarna may require additional information regarding\nthe customer, the merchant and/or the purchase. This information, referred to as extra merchant\ndata (EMD), consist of data that is typically not available at the checkout, but which enables\nKlarna to complete an assertive risk assessment, enable new promotional products and improve\nconversion rates for a boost in performance."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodCardOptionApiSchema": {
        "name": "CheckoutPaymentMethodCardOptionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "networks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                    }
                  }
                }
              },
              "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
        "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "AMEX",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DANKORT",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DINERS_CLUB",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DISCOVER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "ENROUTE",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "ELO",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "HIPER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "INTERAC",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "JCB",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MAESTRO",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MASTERCARD",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MIR",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "PRIVATE_LABEL",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "UNIONPAY",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "VISA",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "OTHER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
        "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "surcharge",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                    }
                  }
                }
              },
              "description": "Surcharge information"
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
        "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionExtraMerchantDataApiSchema": {
        "name": "CheckoutPaymentMethodOptionExtraMerchantDataApiSchema",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
        "name": "PaymentRequestPaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "vaultOnSuccess",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted on a successful payment or not."
            },
            {
              "key": "vaultOn3DS",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not."
            },
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "authorizationType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              },
              "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.\nDefaults to `FINAL`."
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Order Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalOrderTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Payment Session Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaPaymentSessionApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Ideal Pay Nl Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:IdealPayNlTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The description of the payment, as it would typically appear\non a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment method token used to authorize the transaction."
            },
            {
              "key": "isVaulted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments."
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type used for payment authorization."
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "threeDSecureAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "authorizationType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              },
              "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method. `FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount. `ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method."
            }
          ]
        }
      },
      "type_:CheckoutCustomerDetailsApiSchema": {
        "name": "CheckoutCustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses."
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address."
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      },
      "type_:CustomerDetailsApiSchema": {
        "name": "CustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed"
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      },
      "type_:ClientSessionWithTokenApiResponse": {
        "name": "ClientSessionWithTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "clientToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Client token used to initialize the SDK on all platforms."
            },
            {
              "key": "clientTokenExpirationDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Expiration date & time of the client token (UTC with no timezoneinfo)."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your customer."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "Enable certain options associated with the payment methods."
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ClientSessionWarningsApiResponse"
                    }
                  }
                }
              },
              "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable."
            }
          ]
        }
      },
      "type_:ClientSessionApiResponse": {
        "name": "ClientSessionApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your customer."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`.\nIf a top-level amount is provided, it would override any calculated amount."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "Enable certain options associated with the payment methods."
            }
          ]
        }
      },
      "type_:ClientSessionWarningsApiResponse": {
        "name": "ClientSessionWarningsApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the connection involved"
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique code describing the particular issue"
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "More information as to the reason for the warning"
            }
          ]
        }
      },
      "type_:CountryCodeEnum": {
        "name": "CountryCodeEnum",
        "description": "2-letter country code in <a href='https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements'>ISO 3166-1 alpha</a> format,\ne.g. <code>FR</code> for France and <code>GB</code> for the United Kingdom.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:Currency": {
        "name": "Currency",
        "description": "3-letter currency code in <a href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'>ISO 4217</a> format,\ne.g. <code>USD</code> for US dollars.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_:PaymentResponseProcessorApiSchema": {
        "name": "PaymentResponseProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            },
            {
              "key": "amountCaptured",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts."
            },
            {
              "key": "amountRefunded",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts."
            }
          ]
        }
      },
      "type_:GoCardlessMandateApiSchema": {
        "name": "GoCardlessMandateApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "gocardlessMandateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Unique identifier of a GoCardless mandate agreement"
            }
          ]
        }
      },
      "type_:IdealPayNlTokenApiSchema": {
        "name": "IdealPayNlTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodConfigId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaAddressApiSchema": {
        "name": "KlarnaAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine3",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaCustomerTokenApiSchema": {
        "name": "KlarnaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaCustomerToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaPaymentSessionApiSchema": {
        "name": "KlarnaPaymentSessionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaAuthorizationToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaSessionDetailsApiSchema": {
        "name": "KlarnaSessionDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "recurringDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaAddressApiSchema"
                }
              }
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaAddressApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "purchaseCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "purchaseCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "locale",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "orderLines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "tokenDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaTokenDetails": {
        "name": "KlarnaTokenDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "masked_number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "expiry_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalBillingAgreementApiSchema": {
        "name": "PayPalBillingAgreementApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalBillingAgreementId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AddressApiSchema"
                    }
                  }
                }
              },
              "description": "The PayPal customer's shipping address"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalExternalPayerInfoApiSchema": {
        "name": "PayPalExternalPayerInfoApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalPayerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalOrderTokenApiSchema": {
        "name": "PayPalOrderTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalOrderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentApiResponse": {
        "name": "PaymentApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "dateUpdated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time of the last payment update in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "cardTokenType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardTokenTypeEnum"
                    }
                  }
                }
              },
              "description": "The type of card token used for the payment.\n\nOnly applies for card payments."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "requiredAction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentRequiredActionApiSchema"
                    }
                  }
                }
              },
              "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            },
            {
              "key": "riskData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentCardTokenApiSchema": {
        "name": "PaymentCardTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "first6Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last4Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cardholderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isNetworkTokenized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "binData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BinDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StatusReasonApiSchema": {
        "name": "StatusReasonApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatusTypeEnum"
                }
              },
              "description": "Type of the status."
            },
            {
              "key": "declineType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeclineTypeEnum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried."
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED`, this will be returned."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error."
            }
          ]
        }
      },
      "type_:RiskDataApiSchema": {
        "name": "RiskDataApiSchema",
        "description": "Risk data associated with this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fraudChecks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudCheckApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "cvvCheck",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CvvCheckApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "avsCheck",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AvsCheckApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:FraudCheckApiSchema": {
        "name": "FraudCheckApiSchema",
        "description": "Results of the pre-authorization and post-authorization fraud checks.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "preAuthorizationResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postAuthorizationResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:FraudDecisionTypeEnum": {
        "name": "FraudDecisionTypeEnum",
        "description": "Possible fraud check outcomes.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ACCEPT"
            },
            {
              "value": "REFUSE"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "THREE_DS"
            }
          ]
        }
      },
      "type_:CvvCheckApiSchema": {
        "name": "CvvCheckApiSchema",
        "description": "Results of any external CVV check performed on this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AvsCheckApiSchema": {
        "name": "AvsCheckApiSchema",
        "description": "Results of any external AVS check performed on this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AvsRiskAssessmentValues"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AvsRiskAssessmentValues": {
        "name": "AvsRiskAssessmentValues",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "streetAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RiskAssessmentStatusEnum": {
        "name": "RiskAssessmentStatusEnum",
        "description": "Possible risk assessment values for CVV and AVS checks.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MATCHED"
            },
            {
              "value": "NOT_MATCHED"
            },
            {
              "value": "NOT_VERIFIED"
            },
            {
              "value": "NOT_PROVIDED"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "SKIPPED"
            }
          ]
        }
      },
      "type_:PaymentMethodTypeEnum": {
        "name": "PaymentMethodTypeEnum",
        "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PAYMENT_CARD"
            },
            {
              "value": "PAYPAL_ORDER"
            },
            {
              "value": "PAYPAL_BILLING_AGREEMENT"
            },
            {
              "value": "GOCARDLESS_MANDATE"
            },
            {
              "value": "KLARNA_AUTHORIZATION_TOKEN"
            },
            {
              "value": "KLARNA_CUSTOMER_TOKEN"
            },
            {
              "value": "PAY_NL_IDEAL"
            },
            {
              "value": "APAYA"
            },
            {
              "value": "OFF_SESSION_PAYMENT"
            },
            {
              "value": "CARD_OFF_SESSION_PAYMENT"
            },
            {
              "value": "APPLE_PAY"
            },
            {
              "value": "APPLE_PAY_ENCRYPTED_TOKEN"
            },
            {
              "value": "GOOGLE_PAY"
            }
          ]
        }
      },
      "type_:PaymentListApiResponse": {
        "name": "PaymentListApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PaymentSummaryApiSchema"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "nextCursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "prevCursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentRequiredActionApiSchema": {
        "name": "PaymentRequiredActionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BlockingPaymentActionTypeEnum"
                }
              },
              "description": "Action name"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human description of the required action to perform."
            },
            {
              "key": "clientToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The client token to be returned to the SDK if a required action is returned."
            }
          ]
        }
      },
      "type_:PaymentSummaryApiSchema": {
        "name": "PaymentSummaryApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "dateUpdated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The date and time of the last payment update in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatus"
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentSummaryProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The payment amount, in minor units. e.g. $7 would show as `700`."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`"
            }
          ]
        }
      },
      "type_:PaymentAuthorizationRequestProcessorApiSchema": {
        "name": "PaymentAuthorizationRequestProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The processor's merchant ID used to authorize the payment."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The processor name should be provided if the processorMerchantId is not unique across all of your integrations."
            }
          ]
        }
      },
      "type_:PaymentSummaryProcessorApiSchema": {
        "name": "PaymentSummaryProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            }
          ]
        }
      },
      "type_:PrepaidReloadableEnum": {
        "name": "PrepaidReloadableEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "RELOADABLE"
            },
            {
              "value": "NON_RELOADABLE"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:RecurringTransactionTypeEnum": {
        "name": "RecurringTransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            }
          ]
        }
      },
      "type_:RecurringPaymentTypeSchema": {
        "name": "RecurringPaymentTypeSchema",
        "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:RecurringTransactionTypeEnum"
          }
        }
      },
      "type_:ProductTypeEnum": {
        "name": "ProductTypeEnum",
        "description": "An enumeration",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PHYSICAL"
            },
            {
              "value": "DIGITAL"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthResponseCodeEnum": {
        "name": "ThreeDSecureAuthResponseCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_PERFORMED"
            },
            {
              "value": "SKIPPED"
            },
            {
              "value": "AUTH_SUCCESS"
            },
            {
              "value": "AUTH_FAILED"
            },
            {
              "value": "CHALLENGE"
            },
            {
              "value": "METHOD"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
        "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Three D Secure Skipped Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureSkippedReasonCodeEnum"
                }
              }
            },
            {
              "displayName": "Three D Secure Failed Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureFailedReasonCodeEnum"
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchema": {
        "name": "ThreeDSecureAuthenticationApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "responseCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureAuthResponseCodeEnum"
                }
              }
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                }
              }
            },
            {
              "key": "reasonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "protocolVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "challengeIssued",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureFailedReasonCodeEnum": {
        "name": "ThreeDSecureFailedReasonCodeEnum",
        "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "UNKNOWN"
            },
            {
              "value": "REJECTED_BY_ISSUER"
            },
            {
              "value": "CARD_AUTHENTICATION_FAILED"
            },
            {
              "value": "UNKNOWN_DEVICE"
            },
            {
              "value": "UNSUPPORTED_DEVICE"
            },
            {
              "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "INVALID_TRANSACTION"
            },
            {
              "value": "NO_CARD_RECORD"
            },
            {
              "value": "SECURITY_FAILURE"
            },
            {
              "value": "STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
            },
            {
              "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
            },
            {
              "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
            },
            {
              "value": "LOW_CONFIDENCE"
            },
            {
              "value": "MEDIUM_CONFIDENCE"
            },
            {
              "value": "HIGH_CONFIDENCE"
            },
            {
              "value": "VERY_HIGH_CONFIDENCE"
            },
            {
              "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
            },
            {
              "value": "NON_PAYMENT_NOT_SUPPORTED"
            },
            {
              "value": "THREE_RI_NOT_SUPPORTED"
            },
            {
              "value": "ACS_TECHNICAL_ISSUE"
            },
            {
              "value": "DECOUPLED_REQUIRED_BY_ACS"
            },
            {
              "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
            },
            {
              "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
            },
            {
              "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
            },
            {
              "value": "ACS_TIMED_OUT"
            },
            {
              "value": "INVALID_ACS_RESPONSE"
            },
            {
              "value": "ACS_SYSTEM_ERROR_RESPONSE"
            },
            {
              "value": "ERROR_GENERATING_CAVV"
            },
            {
              "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
            },
            {
              "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
            },
            {
              "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
            }
          ]
        }
      },
      "type_:ThreeDSecureSkippedReasonCodeEnum": {
        "name": "ThreeDSecureSkippedReasonCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "GATEWAY_UNAVAILABLE"
            },
            {
              "value": "DISABLED_BY_MERCHANT"
            },
            {
              "value": "NOT_SUPPORTED_BY_ISSUER"
            },
            {
              "value": "FAILED_TO_NEGOTIATE"
            },
            {
              "value": "UNKNOWN_ACS_RESPONSE"
            },
            {
              "value": "3DS_SERVER_ERROR"
            },
            {
              "value": "ACQUIRER_NOT_CONFIGURED"
            },
            {
              "value": "ACQUIRER_NOT_PARTICIPATING"
            }
          ]
        }
      },
      "type_:TokenTypeEnum": {
        "name": "TokenTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MULTI_USE"
            },
            {
              "value": "SINGLE_USE"
            }
          ]
        }
      },
      "type_:DeclineTypeEnum": {
        "name": "DeclineTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SOFT_DECLINE"
            },
            {
              "value": "HARD_DECLINE"
            }
          ]
        }
      },
      "type_:TransactionDeclineReasonV2Enum": {
        "name": "TransactionDeclineReasonV2Enum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ERROR"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "LOST_OR_STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REFER_TO_CARD_ISSUER"
            },
            {
              "value": "DO_NOT_HONOR"
            },
            {
              "value": "INSUFFICIENT_FUNDS"
            },
            {
              "value": "WITHDRAWAL_LIMIT_EXCEEDED"
            },
            {
              "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
            },
            {
              "value": "AUTHENTICATION_REQUIRED"
            }
          ]
        }
      },
      "type_:TransactionOverviewApiSchema": {
        "name": "TransactionOverviewApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Date & time of the transaction (UTC)"
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Transaction amount in minor units"
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Currency"
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "transactionType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The reference submitted on payment creation or refund."
            },
            {
              "key": "processorTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Processor's unique identifier for the transaction"
            },
            {
              "key": "processorName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An identifier of a processor."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\""
            },
            {
              "key": "processorStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information"
            },
            {
              "key": "processorStatusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`."
            },
            {
              "key": "cardTokenType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardTokenTypeEnum"
                    }
                  }
                }
              },
              "description": "The type of card token used for the transaction.\n\nOnly applies for card payments."
            }
          ]
        }
      },
      "type_:PaymentStatus": {
        "name": "PaymentStatus",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            }
          ]
        }
      },
      "type_:PaymentStatusTypeEnum": {
        "name": "PaymentStatusTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPLICATION_ERROR"
            },
            {
              "value": "GATEWAY_REJECTED"
            },
            {
              "value": "ISSUER_DECLINED"
            }
          ]
        }
      },
      "type_:TransactionTypeEnum": {
        "name": "TransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SALE"
            },
            {
              "value": "REFUND"
            }
          ]
        }
      },
      "type_:OptionalAddressApiSchema": {
        "name": "OptionalAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:AddressApiSchema": {
        "name": "AddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CountryCodeEnum"
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
        "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenApiResponse": {
        "name": "MerchantPaymentMethodTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Creation date & time of the object (UTC)"
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date & time when this object was revoked. (UTC)"
            },
            {
              "key": "deleted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this object has been revoked."
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The vaulted payment method token."
            },
            {
              "key": "tokenType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "- `MULTI_USE` a vaulted token that can be re-used with subsequent payments"
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type associated with a token."
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID representing the customer"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A friendly description given by the user"
            },
            {
              "key": "default",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this payment method is the default"
            }
          ]
        }
      },
      "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
        "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [
            "type_:MerchantPaymentMethodTokenApiResponse"
          ],
          "properties": [
            {
              "key": "isVerified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this payment method was verified"
            }
          ]
        }
      },
      "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
        "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:LoyaltyApiBalanceResponse": {
        "name": "LoyaltyApiBalanceResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for the customer on the loyalty provider."
            },
            {
              "key": "connectionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the Primer connection configuration."
            },
            {
              "key": "connectionName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Name of the loyalty provider."
            },
            {
              "key": "balance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The loyalty customer's points balance."
            }
          ]
        }
      },
      "type_:LoyaltyTransactionTypeEnum": {
        "name": "LoyaltyTransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "REDEMPTION"
            },
            {
              "value": "REFUND"
            }
          ]
        }
      },
      "type_:LoyaltyApiTransactionResponse": {
        "name": "LoyaltyApiTransactionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Creation date & time of the transaction (UTC)"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique Primer identifier for the loyalty transaction."
            },
            {
              "key": "connectionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the Primer connection configuration."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for the customer on the loyalty provider."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique identifier for the order."
            },
            {
              "key": "connectionTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the transaction on the loyalty provider's side."
            },
            {
              "key": "connectionName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Name of the loyalty provider."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:LoyaltyTransactionTypeEnum"
                    }
                  }
                }
              },
              "description": "The type of the transaction."
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The value of the transaction."
            }
          ]
        }
      },
      "type_:LoyaltyApiTransactionsListResponse": {
        "name": "LoyaltyApiTransactionsListResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:LoyaltyApiTransactionResponse"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of loyalty transactions"
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The total number of available results"
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The limit of the paged result"
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The offset of the paged result"
            }
          ]
        }
      },
      "type_:PaymentsInsightsBinDataIssuerCountryCode": {
        "name": "PaymentsInsightsBinDataIssuerCountryCode",
        "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:PaymentsInsightsBinData": {
        "name": "PaymentsInsightsBinData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardNetworkEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "issuerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsBinDataIssuerCountryCode"
                    }
                  }
                }
              },
              "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom."
            },
            {
              "key": "issuerName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the issuing bank."
            },
            {
              "key": "productUsageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The usage type of the payment card e.g. commercial, consumer."
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The funding type of the payment card e.g. credit, debit, prepaid."
            }
          ]
        }
      },
      "type_:PaymentsInsightsOrderCountryCode": {
        "name": "PaymentsInsightsOrderCountryCode",
        "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:PaymentsInsightsOrder": {
        "name": "PaymentsInsightsOrder",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The order reference for the payment."
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsOrderCountryCode"
                    }
                  }
                }
              },
              "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom."
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentCurrencyCode": {
        "name": "PaymentsInsightsPaymentCurrencyCode",
        "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentStatus": {
        "name": "PaymentsInsightsPaymentStatus",
        "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "PENDING"
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentPaymentType": {
        "name": "PaymentsInsightsPaymentPaymentType",
        "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            },
            {
              "value": "MOTO"
            },
            {
              "value": "IN_STORE"
            }
          ]
        }
      },
      "type_:PaymentsInsightsPayment": {
        "name": "PaymentsInsightsPayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsPaymentCurrencyCode"
                }
              },
              "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsProcessor"
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The payment creation date and time (UTC) in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsOrder"
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsPaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsStatusReason"
                    }
                  }
                }
              },
              "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsPaymentMethod"
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`"
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsPaymentPaymentType"
                    }
                  }
                }
              },
              "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |"
            },
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the payment,\nas it would typically appear on a bank statement."
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentMethod": {
        "name": "PaymentsInsightsPaymentMethod",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentMethodTypeEnum"
                }
              },
              "description": "Payment method type used for payment authorization."
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsPaymentMethodData"
                    }
                  }
                }
              }
            },
            {
              "key": "threeDSecureAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsThreeDSecureAuthentication"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentMethodData": {
        "name": "PaymentsInsightsPaymentMethodData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "binData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsBinData"
                    }
                  }
                }
              }
            },
            {
              "key": "first6Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The first six digits of the card used for payment,\nalso known as the Bank Identification Number (BIN)."
            }
          ]
        }
      },
      "type_:PaymentsInsightsProcessorName": {
        "name": "PaymentsInsightsProcessorName",
        "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APAYA"
            },
            {
              "value": "ADYEN"
            },
            {
              "value": "AFTERPAY"
            },
            {
              "value": "AIRWALLEX"
            },
            {
              "value": "ALIANT"
            },
            {
              "value": "ALIPAY"
            },
            {
              "value": "ATOME"
            },
            {
              "value": "BANKED"
            },
            {
              "value": "BARCLAYCARD"
            },
            {
              "value": "BRAINTREE"
            },
            {
              "value": "BUCKAROO"
            },
            {
              "value": "BRIDGE"
            },
            {
              "value": "CHAI"
            },
            {
              "value": "CHECKOUT"
            },
            {
              "value": "CLEARPAY"
            },
            {
              "value": "COINBASE"
            },
            {
              "value": "CYBERSOURCE"
            },
            {
              "value": "DLOCAL"
            },
            {
              "value": "EBANX"
            },
            {
              "value": "ECOSPEND"
            },
            {
              "value": "FINTECTURE"
            },
            {
              "value": "GLOBAL_PAYMENTS"
            },
            {
              "value": "HOOLAH"
            },
            {
              "value": "INGENICO"
            },
            {
              "value": "INGENICO-CONNECT"
            },
            {
              "value": "KLARNA"
            },
            {
              "value": "LAYBUY"
            },
            {
              "value": "MPGS"
            },
            {
              "value": "MOLLIE"
            },
            {
              "value": "NEONOMICS"
            },
            {
              "value": "NEXI"
            },
            {
              "value": "NUVEI"
            },
            {
              "value": "OMISE"
            },
            {
              "value": "OPENNODE"
            },
            {
              "value": "PAY_NL"
            },
            {
              "value": "PAY-NL"
            },
            {
              "value": "PAYGENT"
            },
            {
              "value": "PAYPAL"
            },
            {
              "value": "PRIMER_TEST"
            },
            {
              "value": "STRIPE"
            },
            {
              "value": "TRILO"
            },
            {
              "value": "TRUELAYER"
            },
            {
              "value": "VOLT"
            },
            {
              "value": "VYNE"
            },
            {
              "value": "WORLDPAY"
            },
            {
              "value": "EMERCHANTPAY"
            },
            {
              "value": "XFERS"
            },
            {
              "value": "RAPYD"
            },
            {
              "value": "AUTHNET"
            },
            {
              "value": "NETS"
            },
            {
              "value": "NETAXEPT"
            },
            {
              "value": "PRIMER_PROCESSOR"
            },
            {
              "value": "REACH"
            },
            {
              "value": "TRUST_PAYMENTS"
            },
            {
              "value": "TWOC2P"
            },
            {
              "value": "MERCADO_PAGO"
            },
            {
              "value": "PAYU"
            },
            {
              "value": "XENDIT"
            },
            {
              "value": "FISERV"
            },
            {
              "value": "PACYPAY"
            },
            {
              "value": "SHOPEEPAY"
            },
            {
              "value": "TRIPLE_A"
            },
            {
              "value": "IPAY88"
            },
            {
              "value": "APPLE_PAY"
            },
            {
              "value": "GOOGLE_PAY"
            },
            {
              "value": "RISKIFIED"
            },
            {
              "value": "TAXJAR"
            },
            {
              "value": "STITCH"
            },
            {
              "value": "SIGNIFYD"
            }
          ]
        }
      },
      "type_:PaymentsInsightsProcessor": {
        "name": "PaymentsInsightsProcessor",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsProcessorName"
                }
              },
              "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here."
            },
            {
              "key": "merchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            }
          ]
        }
      },
      "type_:PaymentsInsightsStatusReasonType": {
        "name": "PaymentsInsightsStatusReasonType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPLICATION_ERROR"
            },
            {
              "value": "GATEWAY_REJECTED"
            },
            {
              "value": "ISSUER_DECLINED"
            }
          ]
        }
      },
      "type_:PaymentsInsightsStatusReasonDeclineType": {
        "name": "PaymentsInsightsStatusReasonDeclineType",
        "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SOFT_DECLINE"
            },
            {
              "value": "HARD_DECLINE"
            }
          ]
        }
      },
      "type_:PaymentsInsightsStatusReasonCode": {
        "name": "PaymentsInsightsStatusReasonCode",
        "description": "Payment status code with the error code when\nthe issuer declined the payment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ERROR"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "LOST_OR_STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REFER_TO_CARD_ISSUER"
            },
            {
              "value": "DO_NOT_HONOR"
            },
            {
              "value": "INSUFFICIENT_FUNDS"
            },
            {
              "value": "WITHDRAWAL_LIMIT_EXCEEDED"
            },
            {
              "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
            },
            {
              "value": "AUTHENTICATION_REQUIRED"
            }
          ]
        }
      },
      "type_:PaymentsInsightsStatusReason": {
        "name": "PaymentsInsightsStatusReason",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsStatusReasonType"
                    }
                  }
                }
              }
            },
            {
              "key": "declineType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsStatusReasonDeclineType"
                    }
                  }
                }
              },
              "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried."
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsStatusReasonCode"
                    }
                  }
                }
              },
              "description": "Payment status code with the error code when\nthe issuer declined the payment."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Message detail returned by the processor when\nthe error on appeared on their part."
            }
          ]
        }
      },
      "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode": {
        "name": "PaymentsInsightsThreeDSecureAuthenticationResponseCode",
        "description": "The response returned during the 3D Secure authentication call.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_PERFORMED"
            },
            {
              "value": "SKIPPED"
            },
            {
              "value": "AUTH_SUCCESS"
            },
            {
              "value": "AUTH_FAILED"
            },
            {
              "value": "CHALLENGE"
            },
            {
              "value": "METHOD"
            }
          ]
        }
      },
      "type_:PaymentsInsightsThreeDSecureAuthentication": {
        "name": "PaymentsInsightsThreeDSecureAuthentication",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "transStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "transStatusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "responseCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode"
                    }
                  }
                }
              },
              "description": "The response returned during the 3D Secure authentication call."
            },
            {
              "key": "challengeIssued",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "The challenge status of the 3D Secure authentication.\nSet to false for frictionless 3D Secure authentication."
            },
            {
              "key": "protocolVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The protocol version used during 3D Secure authentication."
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The reason code for unsuccessful 3D Secure authentication attempts."
            },
            {
              "key": "reasonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The human readable reason text for unsuccessful\n3D Secure authentication attempts."
            },
            {
              "key": "eci",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "E-commerce Indicator (ECI)"
            }
          ]
        }
      },
      "type_:ErrorObject": {
        "name": "ErrorObject",
        "description": "An object containing information about the error that occurred.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "errorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "An error ID"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A human readable description of the error"
            },
            {
              "key": "diagnosticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An ID that you can quote when contacting the Primer support team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11)."
            },
            {
              "key": "validationErrors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Returned in case of a badly formed request"
            }
          ]
        }
      },
      "type_:four_hundred_ErrorResponse": {
        "name": "four_hundred_ErrorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ErrorObject"
                }
              }
            }
          ]
        }
      },
      "type_:four_hundred_four_ErrorResponse": {
        "name": "four_hundred_four_ErrorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ErrorObject"
                }
              }
            }
          ]
        }
      },
      "type_:four_hundred_nine_ErrorResponse": {
        "name": "four_hundred_nine_ErrorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ErrorObject"
                }
              }
            }
          ]
        }
      },
      "type_:four_hundred_twenty_two_ErrorResponse": {
        "name": "four_hundred_twenty_two_ErrorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ErrorObject"
                }
              }
            }
          ]
        }
      },
      "type_:AuthorizationTypeEnum": {
        "name": "AuthorizationTypeEnum",
        "description": "Type of authorization for the payment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ESTIMATED"
            },
            {
              "value": "FINAL"
            }
          ]
        }
      },
      "type_:CardTokenTypeEnum": {
        "name": "CardTokenTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CARD_PAN"
            },
            {
              "value": "NETWORK_TOKEN"
            },
            {
              "value": "PROCESSOR_TOKEN"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_clientSessionApi": {
        "id": "subpackage_clientSessionApi",
        "name": "Client Session API"
      },
      "subpackage_paymentsApi": {
        "id": "subpackage_paymentsApi",
        "name": "Payments API"
      },
      "subpackage_paymentMethodsApi": {
        "id": "subpackage_paymentMethodsApi",
        "name": "Payment Methods API"
      },
      "subpackage_observabilityApiBeta": {
        "id": "subpackage_observabilityApiBeta",
        "name": "Observability API (beta)"
      },
      "subpackage_loyaltyApi": {
        "id": "subpackage_loyaltyApi",
        "name": "Loyalty API"
      }
    },
    "auths": {
      "default": {
        "type": "header",
        "headerWireValue": "X-API-KEY",
        "nameOverride": "apiKey"
      }
    }
  },
  {
    "id": "7ed504c0-fc2e-4a52-b3fd-b277869eda14",
    "endpoints": {
      "subpackage_clientSessionApi.retrieveClientSideToken": {
        "id": "subpackage_clientSessionApi.retrieveClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "clientToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Client token corresponding to the client session to retrieve"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "clientToken": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d clientToken=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "clientToken": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d clientToken=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_clientSessionApi.createClientSideToken": {
        "id": "subpackage_clientSessionApi.createClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`.\nIf any of these are not yet available, you can provide them when making the payment request.\n\n`POST /client-session` does not have required fields as all fields are not always known when a client session is created.\nUse `PATCH /client-session` to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the payment."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id."
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutCustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionWithTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  }
                },
                "warnings": {
                  "type": "TAXJAR",
                  "code": "MISSING_DATA"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"amount\": 1,\n        \"productType\": \"PHYSICAL\"\n      }\n    ],\n    \"countryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\",\n    \"options\": {\n      \"<PAYMENT_METHOD_TYPE>\": {\n        \"surcharge\": {}\n      },\n      \"PAYMENT_CARD\": {\n        \"networks\": {\n          \"AMEX\": {\n            \"surcharge\": {}\n          },\n          \"DANKORT\": {\n            \"surcharge\": {}\n          },\n          \"DINERS_CLUB\": {\n            \"surcharge\": {}\n          },\n          \"DISCOVER\": {\n            \"surcharge\": {}\n          },\n          \"ENROUTE\": {\n            \"surcharge\": {}\n          },\n          \"ELO\": {\n            \"surcharge\": {}\n          },\n          \"HIPER\": {\n            \"surcharge\": {}\n          },\n          \"INTERAC\": {\n            \"surcharge\": {}\n          },\n          \"JCB\": {\n            \"surcharge\": {}\n          },\n          \"MAESTRO\": {\n            \"surcharge\": {}\n          },\n          \"MASTERCARD\": {\n            \"surcharge\": {}\n          },\n          \"MIR\": {\n            \"surcharge\": {}\n          },\n          \"PRIVATE_LABEL\": {\n            \"surcharge\": {}\n          },\n          \"UNIONPAY\": {\n            \"surcharge\": {}\n          },\n          \"VISA\": {\n            \"surcharge\": {}\n          },\n          \"OTHER\": {\n            \"surcharge\": {}\n          }\n        }\n      }\n    }\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_clientSessionApi.updateClientSideToken": {
        "id": "subpackage_clientSessionApi.updateClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "clientToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call."
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the order."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n"
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutCustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n"
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"amount\": 1,\n        \"productType\": \"PHYSICAL\"\n      }\n    ],\n    \"countryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\",\n    \"options\": {\n      \"<PAYMENT_METHOD_TYPE>\": {\n        \"surcharge\": {}\n      },\n      \"PAYMENT_CARD\": {\n        \"networks\": {\n          \"AMEX\": {\n            \"surcharge\": {}\n          },\n          \"DANKORT\": {\n            \"surcharge\": {}\n          },\n          \"DINERS_CLUB\": {\n            \"surcharge\": {}\n          },\n          \"DISCOVER\": {\n            \"surcharge\": {}\n          },\n          \"ENROUTE\": {\n            \"surcharge\": {}\n          },\n          \"ELO\": {\n            \"surcharge\": {}\n          },\n          \"HIPER\": {\n            \"surcharge\": {}\n          },\n          \"INTERAC\": {\n            \"surcharge\": {}\n          },\n          \"JCB\": {\n            \"surcharge\": {}\n          },\n          \"MAESTRO\": {\n            \"surcharge\": {}\n          },\n          \"MASTERCARD\": {\n            \"surcharge\": {}\n          },\n          \"MIR\": {\n            \"surcharge\": {}\n          },\n          \"PRIVATE_LABEL\": {\n            \"surcharge\": {}\n          },\n          \"UNIONPAY\": {\n            \"surcharge\": {}\n          },\n          \"VISA\": {\n            \"surcharge\": {}\n          },\n          \"OTHER\": {\n            \"surcharge\": {}\n          }\n        }\n      }\n    }\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.listPayments": {
        "id": "subpackage_paymentsApi.listPayments",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\nFor example, if you wanted to get both `FAILED` and `CANCELLED` payments, for customer `john-123`, you would use:\n\n```bash\ncurl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \\\n--header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\nYou can alternatively specify a list by repeating the parameter multiple times.\n\n**Note:** payments will be available within a minute from being created.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentStatus"
                  }
                }
              }
            },
            "description": "Filter payments by their status."
          },
          {
            "key": "payment_method_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentMethodTypeEnum"
                  }
                }
              }
            },
            "description": "Filter payments by their payment method type."
          },
          {
            "key": "processor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter payments by their payment processor."
          },
          {
            "key": "currency_code",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars."
          },
          {
            "key": "from_date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Return only payments from this date (inclusive)."
          },
          {
            "key": "to_date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Return only payments up to this date (inclusive)."
          },
          {
            "key": "order_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Return payments related to this order ID."
          },
          {
            "key": "min_amount",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Return payments of this amount minimum (inclusive)."
          },
          {
            "key": "max_amount",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Return payments of this amount max (inclusive)."
          },
          {
            "key": "customer_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "ID of the customer that has made the payment."
          },
          {
            "key": "merchant_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "ID of the merchant involved in the payment."
          },
          {
            "key": "customer_email_address",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Email of the customer that has made the payment."
          },
          {
            "key": "last_4_digits",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Last 4 digits of the card used for the payment."
          },
          {
            "key": "paypal_email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Paypal email address associated with the payment."
          },
          {
            "key": "klarna_email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Klarna email address associated with the payment."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Maximum number of payments to return per page."
          },
          {
            "key": "cursor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "If results are paginated, pass the `nextCursor` to access next page."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentListApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "status": "PENDING",
              "payment_method_type": "PAYMENT_CARD"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "date": "2024-01-15T09:30:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 1
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d status=PENDING \\\n     -d payment_method_type=PAYMENT_CARD",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "status": "PENDING",
              "payment_method_type": "PAYMENT_CARD"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d status=PENDING \\\n     -d payment_method_type=PAYMENT_CARD",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.createPayment": {
        "id": "subpackage_paymentsApi.createPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.\n\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the payment."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "paymentMethodToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The payment method token used to authorize the payment.\n"
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`."
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer.\n"
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string",
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "AUTHORIZED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "string",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\",\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"amount\": 1,\n        \"productType\": \"PHYSICAL\"\n      }\n    ],\n    \"countryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.capturePayment": {
        "id": "subpackage_paymentsApi.capturePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/capture"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the payment to capture."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount."
              },
              {
                "key": "final",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows ([read more here](https://primer.io/docs/changelog/migration-guides/new-workflows)).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/capture",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "SETTLED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 42,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "string",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "SETTLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/capture \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/capture",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/capture \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/capture",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/capture \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.cancelPayment": {
        "id": "subpackage_paymentsApi.cancelPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/cancel"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to cancel."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "reason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "You can optionally specify a reason for the cancellation. This is for your own records."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/cancel",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "CANCELLED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "string",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "CANCELLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/cancel \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/cancel",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/cancel \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.refundPayment": {
        "id": "subpackage_paymentsApi.refundPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/refund"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to refund."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation."
              },
              {
                "key": "reason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "You can optionally specify a reason for the refund. This is for your own records."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/refund",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "SETTLED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 42,
                  "amountRefunded": 42
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "string",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "SETTLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/refund \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/refund",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/refund \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/refund",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/refund \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.resumePayment": {
        "id": "subpackage_paymentsApi.resumePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/resume"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to resume."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "resumeToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/resume",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resumeToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "AUTHORIZED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "string",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/resume \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resumeToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/resume",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resumeToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/resume \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resumeToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.getPaymentById": {
        "id": "subpackage_paymentsApi.getPaymentById",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nRetrieve a payment by its ID.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to retrieve."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "AUTHORIZED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "string",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/payments/string \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/payments/:id \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post": {
        "id": "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodToken"
          },
          {
            "type": "literal",
            "value": "/vault"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentMethodToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Payment method token to store."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The ID representing the customer"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string/vault",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentMethodToken": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "accountFundingType": "CREDIT"
                },
                "paymentMethodType": "PAYMENT_CARD"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/string/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken/vault",
            "responseStatusCode": 400,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "description": "string",
                "errorId": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken/vault",
            "responseStatusCode": 422,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "description": "string",
                "errorId": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get": {
        "id": "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Retrieve a list of stored payment methods for a customer.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "customer_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Return payment methods for this customer ID."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/payment-instruments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "customer_id": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "accountFundingType": "CREDIT"
                    },
                    "paymentMethodType": "PAYMENT_CARD"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payment-instruments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d customer_id=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete": {
        "id": "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Delete a saved payment method.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodToken"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentMethodToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Saved payment method token to delete."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentMethodToken": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "accountFundingType": "CREDIT"
                },
                "paymentMethodType": "PAYMENT_CARD"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.sandbox.primer.io/payment-instruments/string \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken",
            "responseStatusCode": 400,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "description": "string",
                "errorId": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post": {
        "id": "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Update a saved payment method to be the default stored payment method for a customer.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodToken"
          },
          {
            "type": "literal",
            "value": "/default"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentMethodToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Saved payment method token to set to default."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:MerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string/default",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentMethodToken": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodType": "PAYMENT_CARD",
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "accountFundingType": "CREDIT"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/string/default \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken/default",
            "responseStatusCode": 400,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "description": "string",
                "errorId": "string",
                "diagnosticsId": "string",
                "validationErrors": [
                  {
                    "string": {}
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/default \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_:AccountFundingTypeEnum": {
        "name": "AccountFundingTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREDIT"
            },
            {
              "value": "DEBIT"
            },
            {
              "value": "PREPAID"
            },
            {
              "value": "CHARGE"
            },
            {
              "value": "DEFERRED_DEBIT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ApayaCustomerTokenApiSchema": {
        "name": "ApayaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mnc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mcc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BinDataOptionalApiSchema": {
        "name": "BinDataOptionalApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardNetworkEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BinDataApiSchema": {
        "name": "BinDataApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardNetworkEnum"
                }
              }
            },
            {
              "key": "issuerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "issuerName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuerCurrencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              }
            },
            {
              "key": "regionalRestriction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardRegionRestrictionEnum"
                }
              }
            },
            {
              "key": "accountNumberType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardAccountNumberTypeEnum"
                }
              }
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AccountFundingTypeEnum"
                }
              }
            },
            {
              "key": "prepaidReloadableIndicator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PrepaidReloadableEnum"
                }
              }
            },
            {
              "key": "productUsageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardProductTypeEnum"
                }
              }
            },
            {
              "key": "productCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "productName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BlockingPaymentActionTypeEnum": {
        "name": "BlockingPaymentActionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "3DS_AUTHENTICATION"
            },
            {
              "value": "USE_PRIMER_SDK"
            }
          ]
        }
      },
      "type_:CardAccountNumberTypeEnum": {
        "name": "CardAccountNumberTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PRIMARY_ACCOUNT_NUMBER"
            },
            {
              "value": "NETWORK_TOKEN"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardNetworkEnum": {
        "name": "CardNetworkEnum",
        "description": "The list of available card networks.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AMEX"
            },
            {
              "value": "DANKORT"
            },
            {
              "value": "DINERS_CLUB"
            },
            {
              "value": "DISCOVER"
            },
            {
              "value": "ENROUTE"
            },
            {
              "value": "ELO"
            },
            {
              "value": "HIPER"
            },
            {
              "value": "INTERAC"
            },
            {
              "value": "JCB"
            },
            {
              "value": "MAESTRO"
            },
            {
              "value": "MASTERCARD"
            },
            {
              "value": "MIR"
            },
            {
              "value": "PRIVATE_LABEL"
            },
            {
              "value": "UNIONPAY"
            },
            {
              "value": "VISA"
            },
            {
              "value": "OTHER"
            }
          ]
        }
      },
      "type_:CardProductTypeEnum": {
        "name": "CardProductTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CONSUMER"
            },
            {
              "value": "BUSINESS"
            },
            {
              "value": "GOVERNMENT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardRegionRestrictionEnum": {
        "name": "CardRegionRestrictionEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DOMESTIC_USE_ONLY"
            },
            {
              "value": "NONE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:OrderDetailsApiSchema": {
        "name": "OrderDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "lineItems",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:OrderLineItemsApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The details of the line items of the order."
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "The country in which the order is created"
            },
            {
              "key": "fees",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:OrderFeesApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The details of fees charged."
            },
            {
              "key": "shipping",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderShippingApiSchema"
                    }
                  }
                }
              },
              "description": "The details of shipping charged."
            }
          ]
        }
      },
      "type_:OrderFeesApiSchema": {
        "name": "OrderFeesApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The fee amount charged to the customer, in minor units. e.g. for $7, use `700`."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of fee."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the fee, e.g. \"Currency Conversion Fee\"."
            }
          ]
        }
      },
      "type_:OrderLineItemsApiSchema": {
        "name": "OrderLineItemsApiSchema",
        "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so:\n\n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n````",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the line item."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the item."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The amount charged to the customer, in minor units. The minimum amount is 0."
            },
            {
              "key": "quantity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The number of the particular line item that is being ordered."
            },
            {
              "key": "discountAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`."
            },
            {
              "key": "taxAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`."
            },
            {
              "key": "taxCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations."
            },
            {
              "key": "productType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ProductTypeEnum"
                    }
                  }
                }
              },
              "description": "An identifier for the product type."
            }
          ]
        }
      },
      "type_:OrderShippingApiSchema": {
        "name": "OrderShippingApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
        "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
        "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "<PAYMENT_METHOD_TYPE>",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "PAYMENT_CARD",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionsApiSchema": {
        "name": "CheckoutPaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "vaultOnSuccess",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted on a successful payment or not."
            },
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                    }
                  }
                }
              },
              "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionApiSchema": {
        "name": "CheckoutPaymentMethodOptionApiSchema",
        "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "surcharge",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                }
              },
              "description": "Surcharge information"
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodCardOptionApiSchema": {
        "name": "CheckoutPaymentMethodCardOptionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "networks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                    }
                  }
                }
              },
              "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
        "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "AMEX",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DANKORT",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DINERS_CLUB",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DISCOVER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "ENROUTE",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "ELO",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "HIPER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "INTERAC",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "JCB",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MAESTRO",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MASTERCARD",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MIR",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "PRIVATE_LABEL",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "UNIONPAY",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "VISA",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "OTHER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
        "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "surcharge",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                    }
                  }
                }
              },
              "description": "Surcharge information"
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
        "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated."
            }
          ]
        }
      },
      "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
        "name": "PaymentRequestPaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "vaultOnSuccess",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted on a successful payment or not."
            },
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Order Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalOrderTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Payment Session Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaPaymentSessionApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Ideal Pay Nl Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:IdealPayNlTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment method token used to authorize the transaction."
            },
            {
              "key": "isVaulted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments."
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type"
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "threeDSecureAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutCustomerDetailsApiSchema": {
        "name": "CheckoutCustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address."
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address."
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      },
      "type_:CustomerDetailsApiSchema": {
        "name": "CustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed"
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      },
      "type_:ClientSessionWithTokenApiResponse": {
        "name": "ClientSessionWithTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "clientToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Client token used to initialize the SDK on all platforms."
            },
            {
              "key": "clientTokenExpirationDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Expiration date & time of the client token (UTC with no timezoneinfo)."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your customer."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "Enable certain options associated with the payment methods."
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ClientSessionWarningsApiResponse"
                    }
                  }
                }
              },
              "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable."
            }
          ]
        }
      },
      "type_:ClientSessionApiResponse": {
        "name": "ClientSessionApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your customer."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`.\nIf a top-level amount is provided, it would override any calculated amount."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "Enable certain options associated with the payment methods."
            }
          ]
        }
      },
      "type_:ClientSessionWarningsApiResponse": {
        "name": "ClientSessionWarningsApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the connection involved"
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique code describing the particular issue"
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "More information as to the reason for the warning"
            }
          ]
        }
      },
      "type_:CountryCodeEnum": {
        "name": "CountryCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:Currency": {
        "name": "Currency",
        "description": "Enumerates all supported currencies",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_:PaymentResponseProcessorApiSchema": {
        "name": "PaymentResponseProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            },
            {
              "key": "amountCaptured",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts."
            },
            {
              "key": "amountRefunded",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts."
            }
          ]
        }
      },
      "type_:GoCardlessMandateApiSchema": {
        "name": "GoCardlessMandateApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "gocardlessMandateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Unique identifier of a GoCardless mandate agreement"
            }
          ]
        }
      },
      "type_:IdealPayNlTokenApiSchema": {
        "name": "IdealPayNlTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodConfigId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaAddressApiSchema": {
        "name": "KlarnaAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine3",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaCustomerTokenApiSchema": {
        "name": "KlarnaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaCustomerToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaPaymentSessionApiSchema": {
        "name": "KlarnaPaymentSessionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaAuthorizationToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaSessionDetailsApiSchema": {
        "name": "KlarnaSessionDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "recurringDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaAddressApiSchema"
                }
              }
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaAddressApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "purchaseCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "purchaseCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "locale",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "orderLines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "tokenDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaTokenDetails": {
        "name": "KlarnaTokenDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "masked_number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "expiry_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalBillingAgreementApiSchema": {
        "name": "PayPalBillingAgreementApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalBillingAgreementId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AddressApiSchema"
                    }
                  }
                }
              },
              "description": "The PayPal customer's shipping address"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalExternalPayerInfoApiSchema": {
        "name": "PayPalExternalPayerInfoApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalPayerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalOrderTokenApiSchema": {
        "name": "PayPalOrderTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalOrderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentApiResponse": {
        "name": "PaymentApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "requiredAction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentRequiredActionApiSchema"
                    }
                  }
                }
              },
              "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            }
          ]
        }
      },
      "type_:PaymentCardTokenApiSchema": {
        "name": "PaymentCardTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "first6Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last4Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cardholderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isNetworkTokenized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "binData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BinDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StatusReasonApiSchema": {
        "name": "StatusReasonApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatusTypeEnum"
                }
              },
              "description": "Type of the status."
            },
            {
              "key": "declineType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeclineTypeEnum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried."
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED`, this will be returned."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error."
            }
          ]
        }
      },
      "type_:PaymentMethodTypeEnum": {
        "name": "PaymentMethodTypeEnum",
        "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PAYMENT_CARD"
            },
            {
              "value": "PAYPAL_ORDER"
            },
            {
              "value": "PAYPAL_BILLING_AGREEMENT"
            },
            {
              "value": "GOCARDLESS_MANDATE"
            },
            {
              "value": "KLARNA_AUTHORIZATION_TOKEN"
            },
            {
              "value": "KLARNA_CUSTOMER_TOKEN"
            },
            {
              "value": "PAY_NL_IDEAL"
            },
            {
              "value": "APAYA"
            },
            {
              "value": "OFF_SESSION_PAYMENT"
            },
            {
              "value": "CARD_OFF_SESSION_PAYMENT"
            },
            {
              "value": "APPLE_PAY"
            },
            {
              "value": "APPLE_PAY_ENCRYPTED_TOKEN"
            },
            {
              "value": "GOOGLE_PAY"
            }
          ]
        }
      },
      "type_:PaymentListApiResponse": {
        "name": "PaymentListApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PaymentSummaryApiSchema"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "nextCursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "prevCursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentRequiredActionApiSchema": {
        "name": "PaymentRequiredActionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BlockingPaymentActionTypeEnum"
                }
              },
              "description": "Action name"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human description of the required action to perform."
            },
            {
              "key": "clientToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The client token to be returned to the SDK if a required action is returned."
            }
          ]
        }
      },
      "type_:PaymentSummaryApiSchema": {
        "name": "PaymentSummaryApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatus"
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The payment amount, in minor units. e.g. $7 would show as `700`."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`"
            }
          ]
        }
      },
      "type_:PaymentSummaryProcessorApiSchema": {
        "name": "PaymentSummaryProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            }
          ]
        }
      },
      "type_:PrepaidReloadableEnum": {
        "name": "PrepaidReloadableEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "RELOADABLE"
            },
            {
              "value": "NON_RELOADABLE"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:RecurringTransactionTypeEnum": {
        "name": "RecurringTransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            }
          ]
        }
      },
      "type_:RecurringPaymentTypeSchema": {
        "name": "RecurringPaymentTypeSchema",
        "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:RecurringTransactionTypeEnum"
          }
        }
      },
      "type_:ProductTypeEnum": {
        "name": "ProductTypeEnum",
        "description": "An enumeration",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PHYSICAL"
            },
            {
              "value": "DIGITAL"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthResponseCodeEnum": {
        "name": "ThreeDSecureAuthResponseCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_PERFORMED"
            },
            {
              "value": "SKIPPED"
            },
            {
              "value": "AUTH_SUCCESS"
            },
            {
              "value": "AUTH_FAILED"
            },
            {
              "value": "CHALLENGE"
            },
            {
              "value": "METHOD"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
        "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Three D Secure Skipped Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureSkippedReasonCodeEnum"
                }
              }
            },
            {
              "displayName": "Three D Secure Failed Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureFailedReasonCodeEnum"
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchema": {
        "name": "ThreeDSecureAuthenticationApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "responseCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureAuthResponseCodeEnum"
                }
              }
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                }
              }
            },
            {
              "key": "reasonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "protocolVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "challengeIssued",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureFailedReasonCodeEnum": {
        "name": "ThreeDSecureFailedReasonCodeEnum",
        "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "UNKNOWN"
            },
            {
              "value": "REJECTED_BY_ISSUER"
            },
            {
              "value": "CARD_AUTHENTICATION_FAILED"
            },
            {
              "value": "UNKNOWN_DEVICE"
            },
            {
              "value": "UNSUPPORTED_DEVICE"
            },
            {
              "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "INVALID_TRANSACTION"
            },
            {
              "value": "NO_CARD_RECORD"
            },
            {
              "value": "SECURITY_FAILURE"
            },
            {
              "value": "STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
            },
            {
              "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
            },
            {
              "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
            },
            {
              "value": "LOW_CONFIDENCE"
            },
            {
              "value": "MEDIUM_CONFIDENCE"
            },
            {
              "value": "HIGH_CONFIDENCE"
            },
            {
              "value": "VERY_HIGH_CONFIDENCE"
            },
            {
              "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
            },
            {
              "value": "NON_PAYMENT_NOT_SUPPORTED"
            },
            {
              "value": "THREE_RI_NOT_SUPPORTED"
            },
            {
              "value": "ACS_TECHNICAL_ISSUE"
            },
            {
              "value": "DECOUPLED_REQUIRED_BY_ACS"
            },
            {
              "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
            },
            {
              "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
            },
            {
              "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
            },
            {
              "value": "ACS_TIMED_OUT"
            },
            {
              "value": "INVALID_ACS_RESPONSE"
            },
            {
              "value": "ACS_SYSTEM_ERROR_RESPONSE"
            },
            {
              "value": "ERROR_GENERATING_CAVV"
            },
            {
              "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
            },
            {
              "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
            },
            {
              "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
            }
          ]
        }
      },
      "type_:ThreeDSecureSkippedReasonCodeEnum": {
        "name": "ThreeDSecureSkippedReasonCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "GATEWAY_UNAVAILABLE"
            },
            {
              "value": "DISABLED_BY_MERCHANT"
            },
            {
              "value": "NOT_SUPPORTED_BY_ISSUER"
            },
            {
              "value": "FAILED_TO_NEGOTIATE"
            },
            {
              "value": "UNKNOWN_ACS_RESPONSE"
            },
            {
              "value": "3DS_SERVER_ERROR"
            },
            {
              "value": "ACQUIRER_NOT_CONFIGURED"
            },
            {
              "value": "ACQUIRER_NOT_PARTICIPATING"
            }
          ]
        }
      },
      "type_:TokenTypeEnum": {
        "name": "TokenTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MULTI_USE"
            },
            {
              "value": "SINGLE_USE"
            }
          ]
        }
      },
      "type_:DeclineTypeEnum": {
        "name": "DeclineTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SOFT_DECLINE"
            },
            {
              "value": "HARD_DECLINE"
            }
          ]
        }
      },
      "type_:TransactionDeclineReasonV2Enum": {
        "name": "TransactionDeclineReasonV2Enum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ERROR"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "LOST_OR_STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REFER_TO_CARD_ISSUER"
            },
            {
              "value": "DO_NOT_HONOR"
            },
            {
              "value": "INSUFFICIENT_FUNDS"
            },
            {
              "value": "WITHDRAWAL_LIMIT_EXCEEDED"
            },
            {
              "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
            },
            {
              "value": "AUTHENTICATION_REQUIRED"
            }
          ]
        }
      },
      "type_:TransactionOverviewApiSchema": {
        "name": "TransactionOverviewApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Date & time of the transaction (UTC)"
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Transaction amount in minor units"
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "transactionType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "processorTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Processor's unique identifier for the transaction"
            },
            {
              "key": "processorName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An identifier of a processor."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\""
            },
            {
              "key": "processorStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information"
            },
            {
              "key": "processorStatusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`."
            }
          ]
        }
      },
      "type_:PaymentStatus": {
        "name": "PaymentStatus",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            }
          ]
        }
      },
      "type_:PaymentStatusTypeEnum": {
        "name": "PaymentStatusTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPLICATION_ERROR"
            },
            {
              "value": "GATEWAY_REJECTED"
            },
            {
              "value": "ISSUER_DECLINED"
            }
          ]
        }
      },
      "type_:TransactionTypeEnum": {
        "name": "TransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SALE"
            },
            {
              "value": "REFUND"
            }
          ]
        }
      },
      "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema": {
        "name": "CoreApiApiCommonsSchemasAddessAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AddressApiSchema": {
        "name": "AddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CountryCodeEnum"
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
        "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema Payment Methods Api",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchemaPaymentMethodsApi"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenApiResponse": {
        "name": "MerchantPaymentMethodTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Creation date & time of the object (UTC)"
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date & time when this object was revoked. (UTC)"
            },
            {
              "key": "deleted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this object has been revoked."
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The vaulted payment method token."
            },
            {
              "key": "tokenType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "- `MULTI_USE` a vaulted token that can be re-used with subsequent payments"
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type associated with a token."
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID representing the customer"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A friendly description given by the user"
            },
            {
              "key": "default",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this payment method is the default"
            }
          ]
        }
      },
      "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
        "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [
            "type_:MerchantPaymentMethodTokenApiResponse"
          ],
          "properties": [
            {
              "key": "isVerified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this payment method was verified"
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenListApiResponse": {
        "name": "MerchantPaymentMethodTokenListApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:MerchantPaymentMethodTokenApiResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
        "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentCardTokenApiSchemaPaymentMethodsApi": {
        "name": "PaymentCardTokenApiSchemaPaymentMethodsApi",
        "description": "Used exclusively by the Payment Methods API",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "last4Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cardholderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "networkTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An ID for the transaction assigned by the card network. Used to correlate recurring payments."
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AccountFundingTypeEnum"
                    }
                  }
                }
              },
              "description": "The type of card, e.g. Debit, Credit"
            }
          ]
        }
      },
      "type_:ErrorObject": {
        "name": "ErrorObject",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "errorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An error ID"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A human description of the error"
            },
            {
              "key": "diagnosticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An ID that you can quote when contacting the Primer support team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11)."
            },
            {
              "key": "validationErrors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Returned in case of a badly formed request"
            }
          ]
        }
      },
      "type_:four_hundred_ErrorResponse": {
        "name": "four_hundred_ErrorResponse",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:ErrorObject"
          }
        }
      },
      "type_:four_hundred_twenty_two_ErrorResponse": {
        "name": "four_hundred_twenty_two_ErrorResponse",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:ErrorObject"
          }
        }
      }
    },
    "subpackages": {
      "subpackage_clientSessionApi": {
        "id": "subpackage_clientSessionApi",
        "name": "Client Session API"
      },
      "subpackage_paymentsApi": {
        "id": "subpackage_paymentsApi",
        "name": "Payments API"
      },
      "subpackage_paymentMethodsApi": {
        "id": "subpackage_paymentMethodsApi",
        "name": "Payment Methods API"
      }
    },
    "auths": {
      "default": {
        "type": "header",
        "headerWireValue": "X-API-KEY",
        "nameOverride": "apiKey"
      }
    }
  },
  {
    "id": "c5629660-3984-4ce0-989e-9c6fb0df36d9",
    "endpoints": {},
    "websockets": {},
    "webhooks": {
      "subpackage_paymentWebhooks.payment_status_webhook_event": {
        "id": "subpackage_paymentWebhooks.payment_status_webhook_event",
        "namespace": [
          "subpackage_paymentWebhooks"
        ],
        "description": "Primer notifies you with a `PAYMENT.STATUS` webhook when a payment's status has been updated. This is especially useful for asyncronous processor Connections, which do not respond with an upfront authorization.\nThe webhook events will arrive in the order that the payment status changes, for example you should expect a status of `PENDING`, then `AUTHORIZED`, then `SETTLED` (depending on how your workflow is set up).\nThe webhook body contains the full payment object.\n\nExample payment status notification:\n\n```JSON\n{\n  \"eventType\":\"PAYMENT.STATUS\",\n  \"date\":\"2021-02-21T15:36:16.367687\",\n  \"notificationConfig\":{\n    \"id\":\"cc51f9f0-7e1c-492b-9d37-f83a818f6070\",\n    \"description\":\"Payment webhook\"\n  },\n  \"version\":\"2.2\",\n  \"signedAt\": \"1689221338\",\n  \"payment\":{\n    \"id\":\"DdRZ6YY0\",\n    \"date\":\"2021-02-21T15:34:16.367687\",\n    \"dateUpdated\":\"2021-02-21T15:35:16.133701\",\n    \"amount\":3000,\n    \"currencyCode\":\"GBP\",\n    \"customerId\":\"cust-123\",\n    \"orderId\":\"order-123\",\n    \"status\":\"SETTLED\",\n    \"cardTokenType\":\"CARD_PAN\",\n    \"customer\": {\n      \"emailAddress\": \"test@primer.io\",\n      \"mobileNumber\": \"0123456789\",\n      \"billingAddress\": {\n        \"firstName\": \"John\",\n        \"postalCode\": \"CB94BQ\",\n        \"addressLine1\": \"10001 Alpha St\",\n        \"countryCode\": \"GB\",\n        \"city\": \"Cambridge\",\n        \"state\": \"Cambridgeshire\"\n      }\n    },\n    \"paymentMethod\":{\n      \"paymentType\":\"FIRST_PAYMENT\",\n      \"paymentMethodToken\":\"-lcWjvBAAs2DnIRXwxNjUzNTYzNjIy\",\n      \"isVaulted\": \"false\",\n      \"analyticsId\":\"LUi5pETUaVsdSEamK25L\",\n      \"paymentMethodType\":\"PAYMENT_CARD\",\n      \"paymentMethodData\":{\n        \"last4Digits\":\"1111\",\n        \"first6Digits\": \"411111\",\n        \"expirationMonth\":\"03\",\n        \"expirationYear\":\"2030\",\n        \"cardholderName\":\"ADYEN\",\n        \"network\":\"Visa\",\n        \"isNetworkTokenized\":false,\n        \"binData\":{\n          \"network\":\"VISA\",\n          \"issuerCountryCode\":\"US\",\n          \"issuerName\":\"JPMORGAN CHASE BANK, N.A.\",\n          \"regionalRestriction\":\"UNKNOWN\",\n          \"accountNumberType\":\"UNKNOWN\",\n          \"accountFundingType\":\"UNKNOWN\",\n          \"prepaidReloadableIndicator\":\"NOT_APPLICABLE\",\n          \"productUsageType\":\"UNKNOWN\",\n          \"productCode\":\"UNKNOWN\",\n          \"productName\":\"UNKNOWN\"\n        }\n      },\n      \"authorizationType\": \"FINAL\",\n      \"threeDSecureAuthentication\":{\n        \"responseCode\":\"NOT_PERFORMED\"\n      }\n    },\n    \"processor\":{\n      \"name\":\"STRIPE\",\n      \"processorMerchantId\":\"acct_1GORasdasqNWFwi8c\",\n      \"amountCaptured\":3000,\n      \"amountRefunded\":0\n    },\n    \"transactions\":[\n      {\n        \"date\":\"2021-02-21T15:34:16.367687\",\n        \"amount\":3000,\n        \"currencyCode\":\"GBP\",\n        \"transactionType\":\"SALE\",\n        \"orderId\":\"order-123\",\n        \"processorTransactionId\":\"pi_3L3edsGZasdasdc1iget38p\",\n        \"processorName\":\"STRIPE\",\n        \"processorMerchantId\":\"acct_1GORasvasdNWFwi8c\",\n        \"processorStatus\":\"SETTLED\",\n        \"cardTokenType\":\"CARD_PAN\"\n      }\n    ],\n    \"riskData\":{\n      \"fraudChecks\":{\n        \"source\":\"riskified\",\n        \"preAuthorizationResult\":\"THREE_DS\",\n        \"postAuthorizationResult\":\"ACCEPT\"\n      },\n      \"cvvCheck\": {\n        \"source\": \"processor\",\n        \"result\": \"MATCHED\"\n      },\n      \"avsCheck\": {\n        \"source\": \"processor\",\n        \"result\": {\n          \"streetAddress\": \"NOT_MATCHED\",\n          \"postalCode\": \"NOT_VERIFIED\"\n        }\n      }\n    }\n  }\n}\n```\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
        "method": "POST",
        "path": [],
        "headers": [
          {
            "key": "X-Signature-Primary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
          },
          {
            "key": "X-Signature-Secondary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
          }
        ],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentStatusWebhookPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "eventType": "string",
              "date": "2023-01-01T00:00:00Z",
              "notificationConfig": {
                "id": "string",
                "description": "string"
              },
              "version": "string",
              "payment": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "customerId": "string",
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "vaultedPaymentMethodToken": "string",
                  "analyticsId": "string",
                  "paymentMethodType": "string",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "string",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "processorMerchantId": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "string",
                    "preAuthorizationResult": "ACCEPT",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "string",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "string",
                    "result": {
                      "streetAddress": "MATCHED",
                      "postalCode": "MATCHED"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "subpackage_paymentWebhooks.payment_refund_webhook_event": {
        "id": "subpackage_paymentWebhooks.payment_refund_webhook_event",
        "namespace": [
          "subpackage_paymentWebhooks"
        ],
        "description": "Primer notifies you with a `PAYMENT.REFUND` Webhook when a refund request has been fully processed by a payment processor and the refund has reached a final state.\n\nCheck the transaction with the most recent `transactionType: \"REFUND\"` in the `transactions` array:\n- if `processorStatus` is `SETTLED`, the refund was successful and the funds have been returned to the customer\n- if `processorStatus` is `FAILED`, the refund was unsuccessful\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
        "method": "POST",
        "path": [],
        "headers": [
          {
            "key": "X-Signature-Primary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
          },
          {
            "key": "X-Signature-Secondary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
          }
        ],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentRefundWebhookPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "eventType": "string",
              "date": "2023-01-01T00:00:00Z",
              "notificationConfig": {
                "id": "string",
                "description": "string"
              },
              "version": "string",
              "payment": {
                "id": "string",
                "date": "2023-01-01T00:00:00Z",
                "status": "PENDING",
                "orderId": "string",
                "currencyCode": "string",
                "amount": 0,
                "customerId": "string",
                "metadata": {
                  "string": {}
                },
                "paymentMethod": {
                  "descriptor": "string",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "string",
                  "vaultedPaymentMethodToken": "string",
                  "analyticsId": "string",
                  "paymentMethodType": "string",
                  "paymentMethodData": {
                    "first6Digits": "string",
                    "last4Digits": "string",
                    "expirationMonth": "string",
                    "expirationYear": "string",
                    "cardholderName": "string",
                    "network": "string",
                    "isNetworkTokenized": true,
                    "binData": {
                      "network": "string",
                      "issuerCountryCode": "AW",
                      "issuerName": "string",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "DOMESTIC_USE_ONLY",
                      "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                      "accountFundingType": "CREDIT",
                      "prepaidReloadableIndicator": "RELOADABLE",
                      "productUsageType": "CONSUMER",
                      "productCode": "string",
                      "productName": "string"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE",
                    "reasonText": "string",
                    "protocolVersion": "string",
                    "challengeIssued": true
                  }
                },
                "processor": {
                  "name": "string",
                  "processorMerchantId": "string",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR",
                  "message": "string"
                },
                "transactions": [
                  {
                    "processorMerchantId": "string",
                    "transactionType": "SALE",
                    "processorTransactionId": "string",
                    "processorName": "string",
                    "processorStatus": "PENDING",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR",
                      "message": "string"
                    }
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "string",
                    "preAuthorizationResult": "ACCEPT",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "string",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "string",
                    "result": {
                      "streetAddress": "MATCHED",
                      "postalCode": "MATCHED"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event": {
        "id": "subpackage_disputeChargebacksWebhooks.dispute_open_webhook_event",
        "namespace": [
          "subpackage_disputeChargebacksWebhooks"
        ],
        "description": "Primer notifies you with a `DISPUTE.OPEN` webhook on newly opened disputes or chargebacks. This notification is unified across all processors.\n\nLearn more about [how Primer handles webhooks](https://primer.io/docs/how-primer-works/webhooks).\n",
        "method": "POST",
        "path": [],
        "headers": [
          {
            "key": "X-Signature-Primary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
          },
          {
            "key": "X-Signature-Secondary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
          }
        ],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:DisputeOpenWebhookPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "eventType": "string",
              "processorId": "string",
              "processorDisputeId": "string",
              "paymentId": "string",
              "transactionId": "string",
              "orderId": "string",
              "primerAccountId": "string"
            }
          }
        ]
      },
      "subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event": {
        "id": "subpackage_disputeChargebacksWebhooks.dispute_status_webhook_event",
        "namespace": [
          "subpackage_disputeChargebacksWebhooks"
        ],
        "description": "Primer notifies you with a `DISPUTE.STATUS` webhook that will provide information on retrievals, disputes (also known as chargebacks), and preabritration filings.\n\nThis notification is supported for processors Adyen, Braintree, Checkout.com & PayPal.\n\nThe `DISPUTE.STATUS` event can be used to proactively communicate with customers, issue refunds, send disputes to risk tools, or to proactively defend disputes.\n\nThe `DISPUTE.STATUS` event is currently in an open beta stage, as we continue to add more processors.\n\nLearn more about [managing disputes at Primer](https://primer.io/docs/accept-payments/manage-disputes).\n",
        "method": "POST",
        "path": [],
        "headers": [
          {
            "key": "X-Signature-Primary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "An [HMAC signature](https://en.wikipedia.org/wiki/HMAC) generated using the webhook payload and a shared signing secret. This is then converted to a base64 encoded string."
          },
          {
            "key": "X-Signature-Secondary",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "A secondary signature that is added when you have rotated your secret within the past 24 hours."
          }
        ],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:DisputeStatusWebhookPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "eventType": "string",
              "version": "string",
              "type": "RETRIEVAL",
              "status": "OPEN",
              "primerAccountId": "string",
              "transactionId": "string",
              "orderId": "string",
              "paymentId": "string",
              "paymentMethod": {
                "paymentMethodType": "string",
                "paymentMethodData": {
                  "network": "string"
                }
              },
              "processor": "ADYEN",
              "processorDisputeId": "string",
              "receivedAt": "2023-01-01T00:00:00Z",
              "challengeRequiredBy": "2023-01-01T00:00:00Z",
              "reason": "string",
              "reasonCode": "string",
              "processorReason": "string",
              "amount": 0,
              "currency": "string",
              "merchantId": "string"
            }
          }
        ]
      }
    },
    "types": {
      "type_:AccountFundingTypeEnum": {
        "name": "AccountFundingTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREDIT"
            },
            {
              "value": "DEBIT"
            },
            {
              "value": "PREPAID"
            },
            {
              "value": "CHARGE"
            },
            {
              "value": "DEFERRED_DEBIT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ApayaCustomerTokenApiSchema": {
        "name": "ApayaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mnc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mcc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BinDataApiSchema": {
        "name": "BinDataApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardNetworkEnum"
                }
              }
            },
            {
              "key": "issuerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "issuerName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuerCurrencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              }
            },
            {
              "key": "regionalRestriction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardRegionRestrictionEnum"
                }
              }
            },
            {
              "key": "accountNumberType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardAccountNumberTypeEnum"
                }
              }
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AccountFundingTypeEnum"
                }
              }
            },
            {
              "key": "prepaidReloadableIndicator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PrepaidReloadableEnum"
                }
              }
            },
            {
              "key": "productUsageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardProductTypeEnum"
                }
              }
            },
            {
              "key": "productCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "productName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CardAccountNumberTypeEnum": {
        "name": "CardAccountNumberTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PRIMARY_ACCOUNT_NUMBER"
            },
            {
              "value": "NETWORK_TOKEN"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardNetworkEnum": {
        "name": "CardNetworkEnum",
        "description": "[The list of available card networks and their `CARD_NETWORK_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_:CardProductTypeEnum": {
        "name": "CardProductTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CONSUMER"
            },
            {
              "value": "BUSINESS"
            },
            {
              "value": "GOVERNMENT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardRegionRestrictionEnum": {
        "name": "CardRegionRestrictionEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DOMESTIC_USE_ONLY"
            },
            {
              "value": "NONE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Order Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalOrderTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Payment Session Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaPaymentSessionApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Ideal Pay Nl Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:IdealPayNlTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment method token used to authorize the transaction."
            },
            {
              "key": "vaultedPaymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If the payment method token was vaulted, this is the new token. Use this token for recurring payments."
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type"
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "threeDSecureAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CountryCodeEnum": {
        "name": "CountryCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:Currency": {
        "name": "Currency",
        "description": "Enumerates all supported currencies",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_:PaymentResponseProcessorApiSchema": {
        "name": "PaymentResponseProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            },
            {
              "key": "amountCaptured",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts."
            },
            {
              "key": "amountRefunded",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts."
            }
          ]
        }
      },
      "type_:GoCardlessMandateApiSchema": {
        "name": "GoCardlessMandateApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "gocardlessMandateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Unique identifier of a GoCardless mandate agreement"
            }
          ]
        }
      },
      "type_:IdealPayNlTokenApiSchema": {
        "name": "IdealPayNlTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodConfigId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaAddressApiSchema": {
        "name": "KlarnaAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine3",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaCustomerTokenApiSchema": {
        "name": "KlarnaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaCustomerToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaPaymentSessionApiSchema": {
        "name": "KlarnaPaymentSessionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaAuthorizationToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaSessionDetailsApiSchema": {
        "name": "KlarnaSessionDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "recurringDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaAddressApiSchema"
                }
              }
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaAddressApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "purchaseCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "purchaseCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "locale",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "orderLines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "tokenDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaTokenDetails": {
        "name": "KlarnaTokenDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "masked_number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "expiry_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalBillingAgreementApiSchema": {
        "name": "PayPalBillingAgreementApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalBillingAgreementId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AddressApiSchema"
                    }
                  }
                }
              },
              "description": "The PayPal customer's shipping address"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalExternalPayerInfoApiSchema": {
        "name": "PayPalExternalPayerInfoApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalPayerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalOrderTokenApiSchema": {
        "name": "PayPalOrderTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalOrderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentStatusWebhookPayloadNotificationConfig": {
        "name": "PaymentStatusWebhookPayloadNotificationConfig",
        "description": "The notification configuration details.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration ID."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration description."
            }
          ]
        }
      },
      "type_:PaymentStatusWebhookPayloadPayment": {
        "name": "PaymentStatusWebhookPayloadPayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            },
            {
              "key": "riskData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentStatusWebhookPayload": {
        "name": "PaymentStatusWebhookPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the webhook raised. `PAYMENT.STATUS` in this case."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date-time that the webhook was sent."
            },
            {
              "key": "notificationConfig",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatusWebhookPayloadNotificationConfig"
                    }
                  }
                }
              },
              "description": "The notification configuration details."
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payload version"
            },
            {
              "key": "payment",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatusWebhookPayloadPayment"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentRefundWebhookPayloadNotificationConfig": {
        "name": "PaymentRefundWebhookPayloadNotificationConfig",
        "description": "The notification configuration details.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration ID."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The notification configuration description."
            }
          ]
        }
      },
      "type_:PaymentRefundWebhookPayloadPayment": {
        "name": "PaymentRefundWebhookPayloadPayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream operations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            },
            {
              "key": "riskData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentRefundWebhookPayload": {
        "name": "PaymentRefundWebhookPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the webhook raised. `PAYMENT.REFUND` in this case."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date-time that the webhook was sent."
            },
            {
              "key": "notificationConfig",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentRefundWebhookPayloadNotificationConfig"
                    }
                  }
                }
              },
              "description": "The notification configuration details."
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payload version"
            },
            {
              "key": "payment",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentRefundWebhookPayloadPayment"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DisputeOpenWebhookPayload": {
        "name": "DisputeOpenWebhookPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the webhook raised. `DISPUTE.OPEN` in this case."
            },
            {
              "key": "processorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the processor that generated the dispute."
            },
            {
              "key": "processorDisputeId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the corresponding connection dispute."
            },
            {
              "key": "paymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the Primer payment corresponding to this dispute."
            },
            {
              "key": "transactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the Primer transaction corresponding to this dispute."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the sale transaction that the dispute relates to."
            },
            {
              "key": "primerAccountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your Primer merchant account."
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadType": {
        "name": "DisputeStatusWebhookPayloadType",
        "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "RETRIEVAL"
            },
            {
              "value": "DISPUTE"
            },
            {
              "value": "PREARBITRATION"
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadStatus": {
        "name": "DisputeStatusWebhookPayloadStatus",
        "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes).",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "OPEN"
            },
            {
              "value": "ACCEPTED"
            },
            {
              "value": "CHALLENGED"
            },
            {
              "value": "EXPIRED"
            },
            {
              "value": "CANCELLED"
            },
            {
              "value": "WON"
            },
            {
              "value": "LOST"
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData": {
        "name": "DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardNetworkEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadPaymentMethod": {
        "name": "DisputeStatusWebhookPayloadPaymentMethod",
        "description": "The payment method information for the payment that is now disputed.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadPaymentMethodPaymentMethodData"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayloadProcessor": {
        "name": "DisputeStatusWebhookPayloadProcessor",
        "description": "The payment processor that you submitted a payment to, and received a dispute notification from.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ADYEN"
            },
            {
              "value": "BRAINTREE"
            }
          ]
        }
      },
      "type_:DisputeStatusWebhookPayload": {
        "name": "DisputeStatusWebhookPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "eventType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of event that triggered the webhook. This will have the value `DISPUTE.STATUS`. This indicates that a dispute notification was issued through a configured connection.\n\nUse these notifications to proactively communicate with your customer, issue refunds, or submit evidence to challenge disputes."
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payload version"
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadType"
                    }
                  }
                }
              },
              "description": "The type of dispute event. More information on what the `type` field represents can be found in [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadStatus"
                    }
                  }
                }
              },
              "description": "To see which statuses are applicable for a dispute `type`, and how we map `status`, please see [Manage disputes](https://primer.io/docs/accept-payments/manage-disputes)."
            },
            {
              "key": "primerAccountId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your Primer merchant account."
            },
            {
              "key": "transactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the Primer transaction corresponding to this dispute."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the sale transaction that the dispute relates to."
            },
            {
              "key": "paymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the Primer payment corresponding to this dispute."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadPaymentMethod"
                    }
                  }
                }
              },
              "description": "The payment method information for the payment that is now disputed."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DisputeStatusWebhookPayloadProcessor"
                    }
                  }
                }
              },
              "description": "The payment processor that you submitted a payment to, and received a dispute notification from."
            },
            {
              "key": "processorDisputeId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An identifier for this dispute provided by the processor. This is shared across multiple dispute `type` and `status` relating to the same payment.\n\ne.g. as an `open` dispute that is later challenged will share a `proccessorDisputeId`."
            },
            {
              "key": "receivedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date and time at which Primer received the processor's dispute event. Provided as an ISO timestamp in UTC."
            },
            {
              "key": "challengeRequiredBy",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Time by which the merchant must challenge a dispute. This is provided by the processor, where available."
            },
            {
              "key": "reason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primer’s unified reason that explains why the dispute was raised. This should not vary across processors for the same dispute `reasonCode`, unlike the `processorReason`."
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The dispute reason code for a dispute. This will be the same code provided by the card schemes."
            },
            {
              "key": "processorReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The dispute reason provided by the processor. This can vary across processors for the same dispute `reasonCode`, which is why we provide a unified field - `reason`."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The disputed amount. Note: this is not always the same as the payment amount.\n\nThis will be displayed in minor units.\n\ne.g. for $7, use `700`. Some currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`."
            },
            {
              "key": "currency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "merchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this dispute."
            }
          ]
        }
      },
      "type_:PaymentCardTokenApiSchema": {
        "name": "PaymentCardTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "first6Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last4Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cardholderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isNetworkTokenized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "binData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BinDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StatusReasonApiSchema": {
        "name": "StatusReasonApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatusTypeEnum"
                }
              },
              "description": "Type of the status."
            },
            {
              "key": "declineType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeclineTypeEnum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried."
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED`, this will be returned."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error."
            }
          ]
        }
      },
      "type_:RiskDataApiSchema": {
        "name": "RiskDataApiSchema",
        "description": "Risk data associated with this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fraudChecks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudCheckApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "cvvCheck",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CvvCheckApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "avsCheck",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AvsCheckApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:FraudCheckApiSchema": {
        "name": "FraudCheckApiSchema",
        "description": "Results of the pre-authorization and post-authorization fraud checks.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "preAuthorizationResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postAuthorizationResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:FraudDecisionTypeEnum": {
        "name": "FraudDecisionTypeEnum",
        "description": "Possible fraud check outcomes.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ACCEPT"
            },
            {
              "value": "REFUSE"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "THREE_DS"
            }
          ]
        }
      },
      "type_:CvvCheckApiSchema": {
        "name": "CvvCheckApiSchema",
        "description": "Results of any external CVV check performed on this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AvsCheckApiSchema": {
        "name": "AvsCheckApiSchema",
        "description": "Results of any external AVS check performed on this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AvsRiskAssessmentValues"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AvsRiskAssessmentValues": {
        "name": "AvsRiskAssessmentValues",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "streetAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RiskAssessmentStatusEnum": {
        "name": "RiskAssessmentStatusEnum",
        "description": "Possible risk assessment values for CVV and AVS checks.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MATCHED"
            },
            {
              "value": "NOT_MATCHED"
            },
            {
              "value": "NOT_VERIFIED"
            },
            {
              "value": "NOT_PROVIDED"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "SKIPPED"
            }
          ]
        }
      },
      "type_:PaymentMethodTypeEnum": {
        "name": "PaymentMethodTypeEnum",
        "description": "[The list of available payment methods and their `PAYMENT_METHOD_TYPE` can be found here.](https://www.notion.so/primerio/Payment-Method-Types-2b971a8c54c3452cae0b2fffe9167d72)",
        "shape": {
          "type": "alias",
          "value": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      },
      "type_:PrepaidReloadableEnum": {
        "name": "PrepaidReloadableEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "RELOADABLE"
            },
            {
              "value": "NON_RELOADABLE"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthResponseCodeEnum": {
        "name": "ThreeDSecureAuthResponseCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_PERFORMED"
            },
            {
              "value": "SKIPPED"
            },
            {
              "value": "AUTH_SUCCESS"
            },
            {
              "value": "AUTH_FAILED"
            },
            {
              "value": "CHALLENGE"
            },
            {
              "value": "METHOD"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
        "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Three D Secure Skipped Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureSkippedReasonCodeEnum"
                }
              }
            },
            {
              "displayName": "Three D Secure Failed Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureFailedReasonCodeEnum"
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchema": {
        "name": "ThreeDSecureAuthenticationApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "responseCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureAuthResponseCodeEnum"
                }
              }
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                }
              }
            },
            {
              "key": "reasonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "protocolVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "challengeIssued",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureFailedReasonCodeEnum": {
        "name": "ThreeDSecureFailedReasonCodeEnum",
        "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "UNKNOWN"
            },
            {
              "value": "REJECTED_BY_ISSUER"
            },
            {
              "value": "CARD_AUTHENTICATION_FAILED"
            },
            {
              "value": "UNKNOWN_DEVICE"
            },
            {
              "value": "UNSUPPORTED_DEVICE"
            },
            {
              "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "INVALID_TRANSACTION"
            },
            {
              "value": "NO_CARD_RECORD"
            },
            {
              "value": "SECURITY_FAILURE"
            },
            {
              "value": "STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
            },
            {
              "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
            },
            {
              "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
            },
            {
              "value": "LOW_CONFIDENCE"
            },
            {
              "value": "MEDIUM_CONFIDENCE"
            },
            {
              "value": "HIGH_CONFIDENCE"
            },
            {
              "value": "VERY_HIGH_CONFIDENCE"
            },
            {
              "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
            },
            {
              "value": "NON_PAYMENT_NOT_SUPPORTED"
            },
            {
              "value": "THREE_RI_NOT_SUPPORTED"
            },
            {
              "value": "ACS_TECHNICAL_ISSUE"
            },
            {
              "value": "DECOUPLED_REQUIRED_BY_ACS"
            },
            {
              "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
            },
            {
              "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
            },
            {
              "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
            },
            {
              "value": "ACS_TIMED_OUT"
            },
            {
              "value": "INVALID_ACS_RESPONSE"
            },
            {
              "value": "ACS_SYSTEM_ERROR_RESPONSE"
            },
            {
              "value": "ERROR_GENERATING_CAVV"
            },
            {
              "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
            },
            {
              "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
            },
            {
              "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
            }
          ]
        }
      },
      "type_:ThreeDSecureSkippedReasonCodeEnum": {
        "name": "ThreeDSecureSkippedReasonCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "GATEWAY_UNAVAILABLE"
            },
            {
              "value": "DISABLED_BY_MERCHANT"
            },
            {
              "value": "NOT_SUPPORTED_BY_ISSUER"
            },
            {
              "value": "FAILED_TO_NEGOTIATE"
            },
            {
              "value": "UNKNOWN_ACS_RESPONSE"
            },
            {
              "value": "3DS_SERVER_ERROR"
            },
            {
              "value": "ACQUIRER_NOT_CONFIGURED"
            },
            {
              "value": "ACQUIRER_NOT_PARTICIPATING"
            }
          ]
        }
      },
      "type_:DeclineTypeEnum": {
        "name": "DeclineTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SOFT_DECLINE"
            },
            {
              "value": "HARD_DECLINE"
            }
          ]
        }
      },
      "type_:TransactionDeclineReasonV2Enum": {
        "name": "TransactionDeclineReasonV2Enum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ERROR"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "LOST_OR_STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REFER_TO_CARD_ISSUER"
            },
            {
              "value": "DO_NOT_HONOR"
            },
            {
              "value": "INSUFFICIENT_FUNDS"
            },
            {
              "value": "WITHDRAWAL_LIMIT_EXCEEDED"
            },
            {
              "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
            },
            {
              "value": "AUTHENTICATION_REQUIRED"
            }
          ]
        }
      },
      "type_:TransactionOverviewApiSchema": {
        "name": "TransactionOverviewApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "transactionType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "processorTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Processor's unique identifier for the transaction"
            },
            {
              "key": "processorName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An identifier of a processor."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\""
            },
            {
              "key": "processorStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information"
            },
            {
              "key": "processorStatusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`."
            }
          ]
        }
      },
      "type_:PaymentStatus": {
        "name": "PaymentStatus",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            }
          ]
        }
      },
      "type_:PaymentStatusTypeEnum": {
        "name": "PaymentStatusTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPLICATION_ERROR"
            },
            {
              "value": "GATEWAY_REJECTED"
            },
            {
              "value": "ISSUER_DECLINED"
            }
          ]
        }
      },
      "type_:TransactionTypeEnum": {
        "name": "TransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SALE"
            },
            {
              "value": "REFUND"
            }
          ]
        }
      },
      "type_:AddressApiSchema": {
        "name": "AddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CountryCodeEnum"
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:RecurringTransactionTypeEnum": {
        "name": "RecurringTransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            }
          ]
        }
      },
      "type_:RecurringPaymentTypeSchema": {
        "name": "RecurringPaymentTypeSchema",
        "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:RecurringTransactionTypeEnum"
          }
        }
      },
      "type_:AuthorizationTypeEnum": {
        "name": "AuthorizationTypeEnum",
        "description": "Type of authorization for the payment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ESTIMATED"
            },
            {
              "value": "FINAL"
            }
          ]
        }
      },
      "type_:OptionalAddressApiSchema": {
        "name": "OptionalAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:CheckoutCustomerDetailsApiSchema": {
        "name": "CheckoutCustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses."
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address."
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_paymentWebhooks": {
        "id": "subpackage_paymentWebhooks",
        "name": "paymentWebhooks"
      },
      "subpackage_disputeChargebacksWebhooks": {
        "id": "subpackage_disputeChargebacksWebhooks",
        "name": "disputeChargebacksWebhooks"
      }
    },
    "auths": {}
  },
  {
    "id": "0d20b529-65ad-4f2b-99a5-562a73e0b3c9",
    "endpoints": {
      "subpackage_clientSessionApi.retrieveClientSideToken": {
        "id": "subpackage_clientSessionApi.retrieveClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "clientToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Client token corresponding to the client session to retrieve"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "currencyCode": "AED",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "clientToken": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d clientToken=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "clientToken": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d clientToken=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_clientSessionApi.createClientSideToken": {
        "id": "subpackage_clientSessionApi.createClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and at least one of `amount` or `lineItems`.\nIf any of these are not yet available, you can provide them w\nhen making the payment request.\n\n<code>POST /client-session</code> does not have required fields as all fields are not always known when a client session is created.\nUse <code>PATCH /client-session</code> to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the payment."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Currency"
                      }
                    }
                  }
                },
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer.\nCreate a client session token with a `customerId` to enable the client-side SDK to retrieve and manage your customer's saved payment methods. A client session token also enables saving payment methods against this customer id."
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutCustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionWithTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "currencyCode": "AED",
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                },
                "warnings": {
                  "type": "TAXJAR",
                  "code": "MISSING_DATA"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"currencyCode\": \"AED\",\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"amount\": 1,\n        \"productType\": \"PHYSICAL\",\n        \"productData\": {}\n      }\n    ],\n    \"countryCode\": \"AW\",\n    \"retailerCountryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\",\n    \"orderedAllowedCardNetworks\": [\n      \"AMEX\"\n    ],\n    \"options\": {\n      \"<PAYMENT_METHOD_TYPE>\": {\n        \"surcharge\": {}\n      },\n      \"PAYMENT_CARD\": {\n        \"networks\": {\n          \"AMEX\": {\n            \"surcharge\": {}\n          },\n          \"DANKORT\": {\n            \"surcharge\": {}\n          },\n          \"DINERS_CLUB\": {\n            \"surcharge\": {}\n          },\n          \"DISCOVER\": {\n            \"surcharge\": {}\n          },\n          \"ENROUTE\": {\n            \"surcharge\": {}\n          },\n          \"ELO\": {\n            \"surcharge\": {}\n          },\n          \"HIPER\": {\n            \"surcharge\": {}\n          },\n          \"INTERAC\": {\n            \"surcharge\": {}\n          },\n          \"JCB\": {\n            \"surcharge\": {}\n          },\n          \"MAESTRO\": {\n            \"surcharge\": {}\n          },\n          \"MASTERCARD\": {\n            \"surcharge\": {}\n          },\n          \"MIR\": {\n            \"surcharge\": {}\n          },\n          \"PRIVATE_LABEL\": {\n            \"surcharge\": {}\n          },\n          \"UNIONPAY\": {\n            \"surcharge\": {}\n          },\n          \"VISA\": {\n            \"surcharge\": {}\n          },\n          \"OTHER\": {\n            \"surcharge\": {}\n          }\n        }\n      }\n    },\n    \"authorizationType\": \"ESTIMATED\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_clientSessionApi.updateClientSideToken": {
        "id": "subpackage_clientSessionApi.updateClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "You can update a clients session created earlier with the `PATCH /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nThe only required field for the request is `clientToken`. Other supported request fields are same as for the `POST /client-session` [API call](#operation/create_client_side_token_client_session_post).\n\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type `array`, then you need to provide the complete array along with modified items.\n\nIf you wish to update nested fields on the client session, such as the customer `emailAddress` field, you can pass the `customer` object with only one field, `emailAddress`, to update.\n\nIf you simply wish to clear the value of the field, pass `null` as your input.\n\nYou can update `paymentMethod.vaultOnSuccess` field but updating of the `paymentMethod.options` field through `PATCH /client-session` is not supported.\n\nThe response will contain all the fields of the client session including the ones that were changed.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "clientToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Client token for use in the Primer-JS SDK obtained via `POST` /client-session API call."
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the order."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "\nThe 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten.\n"
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutCustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n"
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten.\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "currencyCode": "AED",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "orderedAllowedCardNetworks": [
                    "AMEX"
                  ],
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  },
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"amount\": 1,\n        \"productType\": \"PHYSICAL\",\n        \"productData\": {}\n      }\n    ],\n    \"countryCode\": \"AW\",\n    \"retailerCountryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\",\n    \"orderedAllowedCardNetworks\": [\n      \"AMEX\"\n    ],\n    \"options\": {\n      \"<PAYMENT_METHOD_TYPE>\": {\n        \"surcharge\": {}\n      },\n      \"PAYMENT_CARD\": {\n        \"networks\": {\n          \"AMEX\": {\n            \"surcharge\": {}\n          },\n          \"DANKORT\": {\n            \"surcharge\": {}\n          },\n          \"DINERS_CLUB\": {\n            \"surcharge\": {}\n          },\n          \"DISCOVER\": {\n            \"surcharge\": {}\n          },\n          \"ENROUTE\": {\n            \"surcharge\": {}\n          },\n          \"ELO\": {\n            \"surcharge\": {}\n          },\n          \"HIPER\": {\n            \"surcharge\": {}\n          },\n          \"INTERAC\": {\n            \"surcharge\": {}\n          },\n          \"JCB\": {\n            \"surcharge\": {}\n          },\n          \"MAESTRO\": {\n            \"surcharge\": {}\n          },\n          \"MASTERCARD\": {\n            \"surcharge\": {}\n          },\n          \"MIR\": {\n            \"surcharge\": {}\n          },\n          \"PRIVATE_LABEL\": {\n            \"surcharge\": {}\n          },\n          \"UNIONPAY\": {\n            \"surcharge\": {}\n          },\n          \"VISA\": {\n            \"surcharge\": {}\n          },\n          \"OTHER\": {\n            \"surcharge\": {}\n          }\n        }\n      }\n    },\n    \"authorizationType\": \"ESTIMATED\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.listPayments": {
        "id": "subpackage_paymentsApi.listPayments",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in\nyour current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of\nsummarized payments. Not all payments attributes are present. You can use\nthe query parameters to filter payments. You can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\nFor example, if you wanted to get both `FAILED` and `CANCELLED` payments, for customer `john-123`, you would use:\n\n```bash\ncurl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \\\n--header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\nYou can alternatively specify a list by repeating the parameter multiple times.\n\n**Note:** payments will be available within a minute from being created.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentStatus"
                  }
                }
              }
            },
            "description": "Filter payments by their status."
          },
          {
            "key": "payment_method_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentMethodTypeEnum"
                  }
                }
              }
            },
            "description": "Filter payments by their payment method type."
          },
          {
            "key": "processor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter payments by their payment processor."
          },
          {
            "key": "currency_code",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter payments by their payment currency.\ne.g. use `USD` for US dollars."
          },
          {
            "key": "from_date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Return only payments from this date (inclusive)."
          },
          {
            "key": "to_date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Return only payments up to this date (inclusive)."
          },
          {
            "key": "order_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Return payments related to this order ID."
          },
          {
            "key": "min_amount",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Return payments of this amount minimum (inclusive)."
          },
          {
            "key": "max_amount",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Return payments of this amount max (inclusive)."
          },
          {
            "key": "customer_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "ID of the customer that has made the payment."
          },
          {
            "key": "merchant_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "ID of the merchant involved in the payment."
          },
          {
            "key": "customer_email_address",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Email of the customer that has made the payment."
          },
          {
            "key": "last_4_digits",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Last 4 digits of the card used for the payment."
          },
          {
            "key": "paypal_email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Paypal email address associated with the payment."
          },
          {
            "key": "klarna_email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Klarna email address associated with the payment."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Maximum number of payments to return per page."
          },
          {
            "key": "cursor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "If results are paginated, pass the `nextCursor` to access next page."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentListApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "status": "PENDING",
              "payment_method_type": "PAYMENT_CARD"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "date": "2024-01-15T09:30:00Z",
                    "dateUpdated": "2024-01-15T09:30:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 1,
                    "processor": {
                      "name": "string"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d status=PENDING \\\n     -d payment_method_type=PAYMENT_CARD",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "status": "PENDING",
              "payment_method_type": "PAYMENT_CARD"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d status=PENDING \\\n     -d payment_method_type=PAYMENT_CARD",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.createPayment": {
        "id": "subpackage_paymentsApi.createPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You\nshould provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.\nParameters that are not on this request will be fetched from previously created Client Session and merged. E.g. if you specify `customer.billingAddress` in Client Session and then pass `customer.emailAddress` data with this request, it will automatically merge the `customer` fields and use both `billingAddress` and `emailAddress` for later calculations.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the payment."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Currency"
                      }
                    }
                  }
                },
                "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "paymentMethodToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The payment method token used to authorize the payment.\n"
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`."
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer.\n"
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string",
                "currencyCode": "AED",
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT",
                  "authorizationType": "ESTIMATED"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\",\n  \"currencyCode\": \"AED\",\n  \"order\": {\n    \"lineItems\": [\n      {\n        \"amount\": 1,\n        \"productType\": \"PHYSICAL\",\n        \"productData\": {}\n      }\n    ],\n    \"countryCode\": \"AW\",\n    \"retailerCountryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\",\n    \"authorizationType\": \"ESTIMATED\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.authorizePayment": {
        "id": "subpackage_paymentsApi.authorizePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nManually authorize a payment using a provided processor. This is useful if you want to authorize a payment without a workflow action.\nThe processor merchant ID must be provided which can be found on the [Integrations page](https://dashboard.primer.io/integrations).\nThe processor name is optional but it must be provided if your account has multiple processors configured which share the same merchant IDs.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/authorize"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the payment to authorize."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "processor",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentAuthorizationRequestProcessorApiSchema"
                  }
                },
                "description": "The payment processor to use for this payment."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_four_ErrorResponse"
              }
            }
          },
          {
            "name": "Conflict",
            "statusCode": 409,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_nine_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/authorize",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "acct_myprocessor_1234"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "MYPROCESSOR",
                  "processorMerchantId": "acct_myprocessor_1234",
                  "amountCaptured": 42,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_myprocessor_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "MYPROCESSOR",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/authorize \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"acct_myprocessor_1234\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/authorize",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/authorize \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/authorize",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/authorize \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/authorize",
            "responseStatusCode": 409,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "paymentId": "string",
                  "status": "string",
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/authorize \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/authorize",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "processor": {
                  "processorMerchantId": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/authorize \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"processor\": {\n    \"processorMerchantId\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.capturePayment": {
        "id": "subpackage_paymentsApi.capturePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nIf you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/capture"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the payment to capture."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount."
              },
              {
                "key": "final",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_paymentsApi:PaymentCaptureApiRequestOrder"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional payment metadata.\nThis only takes effect if the payment was created via the New Workflows ([read more here](https://primer.io/docs/changelog/migration-guides/new-workflows)).\nA dictionary of key-value pairs where the values can only be strings or integers. Keys  which already exist in the payment metadata will be overwritten."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Conflict",
            "statusCode": 409,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_nine_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/capture",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "order": {
                  "retailerCountryCode": "AW"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "SETTLED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 42,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "SETTLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/capture \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"order\": {\n    \"retailerCountryCode\": \"AW\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/capture",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/capture \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/capture",
            "responseStatusCode": 409,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "paymentId": "string",
                  "status": "string",
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/capture \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/capture",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/capture \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.cancelPayment": {
        "id": "subpackage_paymentsApi.cancelPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/cancel"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to cancel."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "reason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "You can optionally specify a reason for the cancellation. This is for your own records."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Conflict",
            "statusCode": 409,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_nine_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/cancel",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "CANCELLED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "CANCELLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/cancel \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/cancel",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/cancel \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/cancel",
            "responseStatusCode": 409,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "paymentId": "string",
                  "status": "string",
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/cancel \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.refundPayment": {
        "id": "subpackage_paymentsApi.refundPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/refund"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to refund."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation."
              },
              {
                "key": "reason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "You can optionally specify a reason for the refund. This is for your own records."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Conflict",
            "statusCode": 409,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_nine_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/refund",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "SETTLED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 42,
                  "amountRefunded": 42
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "SETTLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/refund \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/refund",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/refund \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/refund",
            "responseStatusCode": 409,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "paymentId": "string",
                  "status": "string",
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/refund \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/refund",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/refund \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.resumePayment": {
        "id": "subpackage_paymentsApi.resumePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This\nis usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third\nparty connection.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/resume"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to resume."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "resumeToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/resume",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resumeToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/resume \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resumeToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/resume",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resumeToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/resume \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resumeToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.adjustAuthorization": {
        "id": "subpackage_paymentsApi.adjustAuthorization",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nAdjust authorized amount. This is only possible if `authorizationType` was set to\n`ESTIMATED` when the payment was created, and the mechanism is supported by the payment method.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/adjust-authorization"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment for adjusting authorization."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The **final** amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_four_ErrorResponse"
              }
            }
          },
          {
            "name": "Conflict",
            "statusCode": 409,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_nine_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/adjust-authorization",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 1
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "FIRST_PAYMENT",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "ESTIMATED"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "THREE_DS",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "NOT_MATCHED",
                      "postalCode": "NOT_VERIFIED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/adjust-authorization \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 1\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/adjust-authorization",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/adjust-authorization \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 0\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/adjust-authorization",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/adjust-authorization \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 0\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/adjust-authorization",
            "responseStatusCode": 409,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "paymentId": "string",
                  "status": "string",
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/adjust-authorization \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 0\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/adjust-authorization",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "amount": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/adjust-authorization \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"amount\": 0\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.getPaymentById": {
        "id": "subpackage_paymentsApi.getPaymentById",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nRetrieve a payment by its ID.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to retrieve."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "dateUpdated": "2021-02-21T15:36:17.133701",
                "status": "AUTHORIZED",
                "cardTokenType": "CARD_PAN",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "lineItems": [
                    {
                      "amount": 1,
                      "productType": "PHYSICAL",
                      "productData": {}
                    }
                  ],
                  "countryCode": "AW",
                  "retailerCountryCode": "AW",
                  "fees": [
                    {
                      "amount": 1
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentType": "SUBSCRIPTION",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "isVaulted": true,
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  },
                  "authorizationType": "FINAL"
                },
                "processor": {
                  "name": "STRIPE",
                  "processorMerchantId": "acct_stripe_1234",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "date": "string",
                    "amount": 1,
                    "currencyCode": "AED",
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    },
                    "cardTokenType": "CARD_PAN"
                  }
                ],
                "riskData": {
                  "fraudChecks": {
                    "source": "FRAUD_PROVIDER",
                    "preAuthorizationResult": "ACCEPT",
                    "postAuthorizationResult": "ACCEPT"
                  },
                  "cvvCheck": {
                    "source": "PROCESSOR",
                    "result": "MATCHED"
                  },
                  "avsCheck": {
                    "source": "PROCESSOR",
                    "result": {
                      "streetAddress": "MATCHED",
                      "postalCode": "MATCHED"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/payments/string \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/payments/:id \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post": {
        "id": "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used\nagain later.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodToken"
          },
          {
            "type": "literal",
            "value": "/vault"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentMethodToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Payment method token to store."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The ID representing the customer"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string/vault",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentMethodToken": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "binData": {
                    "network": "AMEX",
                    "issuerCountryCode": "AW",
                    "issuerCurrencyCode": "AED",
                    "regionalRestriction": "DOMESTIC_USE_ONLY",
                    "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                    "accountFundingType": "CREDIT",
                    "prepaidReloadableIndicator": "RELOADABLE",
                    "productUsageType": "CONSUMER",
                    "productCode": "string",
                    "productName": "string"
                  }
                },
                "paymentMethodType": "PAYMENT_CARD"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/string/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken/vault",
            "responseStatusCode": 400,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken/vault",
            "responseStatusCode": 422,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get": {
        "id": "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Retrieve a list of stored payment methods for a customer.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "customer_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Return payment methods for this customer ID."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VerifiedMerchantPaymentMethodTokenListApiResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/payment-instruments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "customer_id": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "binData": {
                        "network": "AMEX",
                        "issuerCountryCode": "AW",
                        "issuerCurrencyCode": "AED",
                        "regionalRestriction": "DOMESTIC_USE_ONLY",
                        "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                        "accountFundingType": "CREDIT",
                        "prepaidReloadableIndicator": "RELOADABLE",
                        "productUsageType": "CONSUMER",
                        "productCode": "string",
                        "productName": "string"
                      }
                    },
                    "paymentMethodType": "PAYMENT_CARD"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payment-instruments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d customer_id=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete": {
        "id": "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Delete a saved payment method.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodToken"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentMethodToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Saved payment method token to delete."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentMethodToken": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "binData": {
                    "network": "AMEX",
                    "issuerCountryCode": "AW",
                    "issuerCurrencyCode": "AED",
                    "regionalRestriction": "DOMESTIC_USE_ONLY",
                    "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                    "accountFundingType": "CREDIT",
                    "prepaidReloadableIndicator": "RELOADABLE",
                    "productUsageType": "CONSUMER",
                    "productCode": "string",
                    "productName": "string"
                  }
                },
                "paymentMethodType": "PAYMENT_CARD"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.sandbox.primer.io/payment-instruments/string \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken",
            "responseStatusCode": 400,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post": {
        "id": "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Update a saved payment method to be the default stored payment method for a customer.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentMethodToken"
          },
          {
            "type": "literal",
            "value": "/default"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentMethodToken",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Saved payment method token to set to default."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:MerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string/default",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentMethodToken": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodType": "PAYMENT_CARD",
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "binData": {
                    "network": "AMEX",
                    "issuerCountryCode": "AW",
                    "issuerCurrencyCode": "AED",
                    "regionalRestriction": "DOMESTIC_USE_ONLY",
                    "accountNumberType": "PRIMARY_ACCOUNT_NUMBER",
                    "accountFundingType": "CREDIT",
                    "prepaidReloadableIndicator": "RELOADABLE",
                    "productUsageType": "CONSUMER",
                    "productCode": "string",
                    "productName": "string"
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/string/default \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:paymentMethodToken/default",
            "responseStatusCode": 400,
            "pathParameters": {
              "paymentMethodToken": ":paymentMethodToken"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:paymentMethodToken/default \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_observabilityApiBeta.external_payment": {
        "id": "subpackage_observabilityApiBeta.external_payment",
        "namespace": [
          "subpackage_observabilityApiBeta"
        ],
        "description": "The Observability API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreating a payment with the Observability API sends external payments data to Primer to populate [Observability Payment Insights dashboards](https://primer.io/observability). Payments created through the [Payments API](/reference/create_payment_payments_post) will be automatically populated and do not need to be sent in the Observability API.\n\nCreate an API key with the `observability-payments:write` scope.\n\nEach record must be created with a unique `paymentId`. To update a payment record with new data use the `PATCH` endpoint.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/observability/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentsInsightsPayment"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentsInsightsPayment"
            }
          }
        },
        "examples": [
          {
            "path": "/observability/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "paymentId": "string",
                "currencyCode": "AED",
                "processor": {
                  "name": "APAYA"
                },
                "amount": 1,
                "createdAt": "2024-01-15T09:30:00Z",
                "order": {
                  "id": "string",
                  "countryCode": "AW"
                },
                "paymentMethod": {
                  "paymentMethodType": "PAYMENT_CARD",
                  "data": {
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED"
                  }
                },
                "status": "DECLINED",
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "paymentType": "FIRST_PAYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "paymentId": "string",
                "currencyCode": "AED",
                "processor": {
                  "name": "APAYA"
                },
                "amount": 1,
                "createdAt": "2024-01-15T09:30:00Z",
                "order": {
                  "id": "string",
                  "countryCode": "AW"
                },
                "paymentMethod": {
                  "paymentMethodType": "PAYMENT_CARD",
                  "data": {
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED"
                  }
                },
                "status": "DECLINED",
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "paymentType": "FIRST_PAYMENT"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/observability/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentId\": \"string\",\n  \"currencyCode\": \"AED\",\n  \"processor\": {\n    \"name\": \"APAYA\"\n  },\n  \"amount\": 1,\n  \"createdAt\": \"2024-01-15T09:30:00Z\",\n  \"order\": {\n    \"id\": \"string\",\n    \"countryCode\": \"AW\"\n  },\n  \"paymentMethod\": {\n    \"paymentMethodType\": \"PAYMENT_CARD\",\n    \"data\": {\n      \"binData\": {\n        \"network\": \"AMEX\",\n        \"issuerCountryCode\": \"AW\"\n      }\n    },\n    \"threeDSecureAuthentication\": {\n      \"responseCode\": \"NOT_PERFORMED\"\n    }\n  },\n  \"status\": \"DECLINED\",\n  \"statusReason\": {\n    \"type\": \"APPLICATION_ERROR\",\n    \"declineType\": \"SOFT_DECLINE\",\n    \"code\": \"ERROR\"\n  },\n  \"paymentType\": \"FIRST_PAYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_observabilityApiBeta.external_payment_update": {
        "id": "subpackage_observabilityApiBeta.external_payment_update",
        "namespace": [
          "subpackage_observabilityApiBeta"
        ],
        "description": "The Observability API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nYou can update payments created earlier through the Observability API with this endpoint. The only required field for the request is `paymentId`. Other supported request fields are the same as for the [create an external payment](/reference/external_payment) API call.\n\nIf you wish to update nested fields on the payment, you only need to pass the fields that you wish to update. For example to update the processor name, you would pass in `processor.name` only.\n\nThe response will contain all the fields of the payment including the ones that were changed.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/observability/payments/"
          },
          {
            "type": "pathParameter",
            "value": "paymentId"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "paymentId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "paymentId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode"
                      }
                    }
                  }
                },
                "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars."
              },
              {
                "key": "processor",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentsInsightsProcessor"
                      }
                    }
                  }
                }
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0."
              },
              {
                "key": "createdAt",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime"
                        }
                      }
                    }
                  }
                },
                "description": "The payment creation date and time (UTC) in [ISO 8601 format](\nhttps://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentsInsightsOrder"
                      }
                    }
                  }
                }
              },
              {
                "key": "status",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus"
                      }
                    }
                  }
                },
                "description": "See the payment [status table](\nhttps://apiref.primer.io/docs#payment-status) for more information."
              },
              {
                "key": "statusReason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentsInsightsStatusReason"
                      }
                    }
                  }
                },
                "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`."
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentsInsightsPaymentMethod"
                      }
                    }
                  }
                }
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`"
              },
              {
                "key": "paymentType",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType"
                      }
                    }
                  }
                },
                "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n\n| paymentType | Use case |\n| --- | --- |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE` | a customer-initiated payment using stored payment details where the cardholder is present. |\n| `SUBSCRIPTION` | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount. |\n| `UNSCHEDULED` | a merchant-initiated payment using stored payment details with no fixed schedule or amount. |\n| `MOTO` | a merchant-initiated mail order or telephone order payment. |\n| `IN_STORE` | a customer-initiated payment where the customer is physically present in a shop. |"
              },
              {
                "key": "descriptor",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A description of the payment,\nas it would typically appear on a bank statement."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentsInsightsPayment"
            }
          }
        },
        "examples": [
          {
            "path": "/observability/payments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "paymentId": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "currencyCode": "AED",
                "processor": {
                  "name": "APAYA"
                },
                "order": {
                  "id": "string",
                  "countryCode": "AW"
                },
                "status": "DECLINED",
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "paymentMethod": {
                  "paymentMethodType": "PAYMENT_CARD",
                  "data": {
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED"
                  }
                },
                "paymentType": "FIRST_PAYMENT"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "paymentId": "string",
                "currencyCode": "AED",
                "processor": {
                  "name": "APAYA"
                },
                "amount": 1,
                "createdAt": "2024-01-15T09:30:00Z",
                "order": {
                  "id": "string",
                  "countryCode": "AW"
                },
                "paymentMethod": {
                  "paymentMethodType": "PAYMENT_CARD",
                  "data": {
                    "binData": {
                      "network": "AMEX",
                      "issuerCountryCode": "AW"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED"
                  }
                },
                "status": "DECLINED",
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "paymentType": "FIRST_PAYMENT"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.sandbox.primer.io/observability/payments/string \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"currencyCode\": \"AED\",\n  \"processor\": {\n    \"name\": \"APAYA\"\n  },\n  \"order\": {\n    \"id\": \"string\",\n    \"countryCode\": \"AW\"\n  },\n  \"status\": \"DECLINED\",\n  \"statusReason\": {\n    \"type\": \"APPLICATION_ERROR\",\n    \"declineType\": \"SOFT_DECLINE\",\n    \"code\": \"ERROR\"\n  },\n  \"paymentMethod\": {\n    \"paymentMethodType\": \"PAYMENT_CARD\",\n    \"data\": {\n      \"binData\": {\n        \"network\": \"AMEX\",\n        \"issuerCountryCode\": \"AW\"\n      }\n    },\n    \"threeDSecureAuthentication\": {\n      \"responseCode\": \"NOT_PERFORMED\"\n    }\n  },\n  \"paymentType\": \"FIRST_PAYMENT\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_loyaltyApi.get_loyalty_customer": {
        "id": "subpackage_loyaltyApi.get_loyalty_customer",
        "namespace": [
          "subpackage_loyaltyApi"
        ],
        "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet a loyalty customer by ID and connection ID. This includes the customer's points balance.\n\nThe `connectionId` is the unique Primer identifier for your loyalty provider connection. Primer will provide this once the loyalty provider connection is created.\n\nThe `customerId` refers to the customer identifier on the loyalty provider's side.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/loyalty-customers/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The unique identifier for the customer on the loyalty provider."
          }
        ],
        "queryParameters": [
          {
            "key": "connectionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the Primer connection configuration."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:LoyaltyApiBalanceResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/loyalty-customers/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {
              "connectionId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/loyalty-customers/string \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d connectionId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-customers/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "connectionId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/loyalty-customers/:id \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d connectionId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_loyaltyApi.get_loyalty_customer_transactions": {
        "id": "subpackage_loyaltyApi.get_loyalty_customer_transactions",
        "namespace": [
          "subpackage_loyaltyApi"
        ],
        "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:read` scopes.\n\nGet all your loyalty transactions. You can filter by `connectionId` (recommended) and by `customerId` and `orderId`.\n\nAdditionally provide a `limit` to restrict the number of transactions in the response, and an `offset` to determine where to start.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/loyalty-transactions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "connectionId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter transactions by customer Id."
          },
          {
            "key": "customerId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter transactions by customer Id."
          },
          {
            "key": "orderId",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter transactions by orderId."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Limit the number of returned results"
          },
          {
            "key": "offset",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "The number of items to skip before returning results"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:LoyaltyApiTransactionsListResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "date": "2023-01-01T12:00:00.00000",
                    "id": "t101",
                    "connectionId": "waon-123",
                    "customerId": "waon-customer-123",
                    "orderId": "order-123",
                    "connectionTransactionId": "waonTx1",
                    "connectionName": "WOAN",
                    "type": "REDEMPTION",
                    "value": 200
                  }
                ],
                "total": 54,
                "limit": 2,
                "offset": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "connectionId": "string",
              "customerId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d connectionId=string \\\n     -d customerId=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "connectionId": "string",
              "customerId": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d connectionId=string \\\n     -d customerId=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_loyaltyApi.post_loyalty_transaction": {
        "id": "subpackage_loyaltyApi.post_loyalty_transaction",
        "namespace": [
          "subpackage_loyaltyApi"
        ],
        "description": "The Loyalty API is currently in beta.\n\nPlease contact our Support Team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11) for access to the Beta.\nIf you don’t have access, please contact your account administrator for assistance.\n\nNot yet integrated with Primer and interested in learning more? [Contact us](https://primer.io/contact-us/).\n\nCreate an API key with the `loyalty-transactions:write` scopes.\n\nCreate a loyalty transaction. This is either a points redemption or a points refund.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/loyalty-transactions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "connectionId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "ID of the Primer connection configuration."
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The unique identifier for the customer on the loyalty provider."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "Unique identifier for the order."
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:LoyaltyTransactionTypeEnum"
                      }
                    }
                  }
                },
                "description": "The type of the transaction."
              },
              {
                "key": "value",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                "description": "The value of points to redeem."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:LoyaltyApiTransactionResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connectionId": "string",
                "customerId": "string",
                "orderId": "string",
                "value": 1,
                "type": "REDEMPTION"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "date": "2023-01-01",
                "id": "t101",
                "connectionId": "waon-123",
                "customerId": "waon-customer-123",
                "orderId": "order-123",
                "connectionTransactionId": "waonTx1",
                "connectionName": "WOAN",
                "type": "REDEMPTION",
                "value": 200
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connectionId\": \"string\",\n  \"customerId\": \"string\",\n  \"orderId\": \"string\",\n  \"value\": 1,\n  \"type\": \"REDEMPTION\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connectionId": "string",
                "customerId": "string",
                "orderId": "string",
                "value": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connectionId\": \"string\",\n  \"customerId\": \"string\",\n  \"orderId\": \"string\",\n  \"value\": 0\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/loyalty-transactions",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connectionId": "string",
                "customerId": "string",
                "orderId": "string",
                "value": 0
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "errorId": "string",
                  "description": "string",
                  "diagnosticsId": "string",
                  "validationErrors": [
                    {
                      "string": {}
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/loyalty-transactions \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connectionId\": \"string\",\n  \"customerId\": \"string\",\n  \"orderId\": \"string\",\n  \"value\": 0\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_paymentsApi:PaymentCaptureApiRequestOrder": {
        "name": "PaymentCaptureApiRequestOrder",
        "description": "More information associated with the order.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "retailerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "The country code of the retailer.\nThis field is passed to the processor and overwrites the retailer country code set in order details."
            }
          ]
        }
      },
      "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentCurrencyCode": {
        "name": "PaymentsInsightsPatchedPaymentCurrencyCode",
        "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentStatus": {
        "name": "PaymentsInsightsPatchedPaymentStatus",
        "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "PENDING"
            }
          ]
        }
      },
      "type_observabilityApiBeta:PaymentsInsightsPatchedPaymentPaymentType": {
        "name": "PaymentsInsightsPatchedPaymentPaymentType",
        "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            },
            {
              "value": "MOTO"
            },
            {
              "value": "IN_STORE"
            }
          ]
        }
      },
      "type_:AccountFundingTypeEnum": {
        "name": "AccountFundingTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREDIT"
            },
            {
              "value": "DEBIT"
            },
            {
              "value": "PREPAID"
            },
            {
              "value": "CHARGE"
            },
            {
              "value": "DEFERRED_DEBIT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ApayaCustomerTokenApiSchema": {
        "name": "ApayaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mnc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mcc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BinDataApiSchema": {
        "name": "BinDataApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardNetworkEnum"
                }
              }
            },
            {
              "key": "issuerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "issuerName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuerCurrencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              }
            },
            {
              "key": "regionalRestriction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardRegionRestrictionEnum"
                }
              }
            },
            {
              "key": "accountNumberType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardAccountNumberTypeEnum"
                }
              }
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AccountFundingTypeEnum"
                }
              }
            },
            {
              "key": "prepaidReloadableIndicator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PrepaidReloadableEnum"
                }
              }
            },
            {
              "key": "productUsageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardProductTypeEnum"
                }
              }
            },
            {
              "key": "productCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "productName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BlockingPaymentActionTypeEnum": {
        "name": "BlockingPaymentActionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "3DS_AUTHENTICATION"
            },
            {
              "value": "USE_PRIMER_SDK"
            },
            {
              "value": "PAYMENT_METHOD_VOUCHER"
            },
            {
              "value": "PROCESSOR_3DS"
            }
          ]
        }
      },
      "type_:CardAccountNumberTypeEnum": {
        "name": "CardAccountNumberTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PRIMARY_ACCOUNT_NUMBER"
            },
            {
              "value": "NETWORK_TOKEN"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardNetworkEnum": {
        "name": "CardNetworkEnum",
        "description": "The list of available card networks.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AMEX"
            },
            {
              "value": "DANKORT"
            },
            {
              "value": "DINERS_CLUB"
            },
            {
              "value": "DISCOVER"
            },
            {
              "value": "ENROUTE"
            },
            {
              "value": "ELO"
            },
            {
              "value": "HIPER"
            },
            {
              "value": "INTERAC"
            },
            {
              "value": "JCB"
            },
            {
              "value": "MAESTRO"
            },
            {
              "value": "MASTERCARD"
            },
            {
              "value": "MIR"
            },
            {
              "value": "PRIVATE_LABEL"
            },
            {
              "value": "UNIONPAY"
            },
            {
              "value": "VISA"
            },
            {
              "value": "OTHER"
            }
          ]
        }
      },
      "type_:CardProductTypeEnum": {
        "name": "CardProductTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CONSUMER"
            },
            {
              "value": "BUSINESS"
            },
            {
              "value": "GOVERNMENT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardRegionRestrictionEnum": {
        "name": "CardRegionRestrictionEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DOMESTIC_USE_ONLY"
            },
            {
              "value": "NONE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:OrderDetailsApiSchema": {
        "name": "OrderDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "lineItems",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:OrderLineItemsApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The details of the line items of the order."
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "The country in which the order is created"
            },
            {
              "key": "retailerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "The country code of the retailer"
            },
            {
              "key": "fees",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:OrderFeesApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The details of fees charged."
            },
            {
              "key": "shipping",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderShippingApiSchema"
                    }
                  }
                }
              },
              "description": "The details of shipping charged."
            }
          ]
        }
      },
      "type_:OrderFeesApiSchema": {
        "name": "OrderFeesApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The fee amount charged to the customer, in minor units. e.g. for $7, use `700`."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of fee."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the fee, e.g. \"Currency Conversion Fee\"."
            }
          ]
        }
      },
      "type_:OrderLineItemsApiSchema": {
        "name": "OrderLineItemsApiSchema",
        "description": "The details of the line items of the order.\n\nThe total amount of a line item is calculated like so:\n\n````\n  totalAmount = (amount * quantity) - discountAmount + taxAmount\n```\n````",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for the line item."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A name of the item."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the item."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The amount charged to the customer, in minor units. The minimum amount is 0."
            },
            {
              "key": "quantity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The number of the particular line item that is being ordered."
            },
            {
              "key": "discountAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Any discount applicable to this item, in minor units. This discount is applied for the entire line item, and not per `quantity`."
            },
            {
              "key": "taxAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The tax charged on this item, in minor units. This tax amount is applied for the entire line item, and not per `quantity`."
            },
            {
              "key": "taxCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations."
            },
            {
              "key": "productType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ProductTypeEnum"
                    }
                  }
                }
              },
              "description": "An identifier for the product type."
            },
            {
              "key": "productData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderLineItemsProductDataApiSchema"
                    }
                  }
                }
              },
              "description": "Details related to the product"
            }
          ]
        }
      },
      "type_:OrderLineItemsProductDataApiSchema": {
        "name": "OrderLineItemsProductDataApiSchema",
        "description": "Details related to the product",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sku",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product SKU"
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product brand"
            },
            {
              "key": "color",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product color"
            },
            {
              "key": "globalTradeItemNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product Global Trade Item Number (e.g. ISBN)"
            },
            {
              "key": "manufacturerPartNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product Manufacturer Part Number"
            },
            {
              "key": "weight",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                }
              },
              "description": "The product weight"
            },
            {
              "key": "weightUnit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The product weight unit (e.g. kg, g)"
            }
          ]
        }
      },
      "type_:OrderShippingApiSchema": {
        "name": "OrderShippingApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
        "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
        "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "<PAYMENT_METHOD_TYPE>",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "PAYMENT_CARD",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionsApiSchema": {
        "name": "CheckoutPaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "vaultOnSuccess",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted on a successful payment or not."
            },
            {
              "key": "vaultOn3DS",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not."
            },
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "orderedAllowedCardNetworks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:CardNetworkEnum"
                        }
                      }
                    }
                  }
                }
              },
              "description": "If provided, the checkout will run the validation on the entered card number and raise an error in case the card network is not supported.\n\nThe order sets the default card network that should be used in the case of co-badged cards.\ne.g. in the case of `[\"VISA\", \"CARTES_BANCAIRES\", \"MASTERCARD\"]` - if the user enters a \"Visa\" / \"Cartes Bancaires\" card: the default is Visa.\n\nValues should be unique.\n\nIf `null` or nothing passed in the request, the following list with all card networks will be returned in the response:\n\n`[\"VISA\", \"MASTERCARD\", \"AMEX\", \"MAESTRO\", \"UNIONPAY\", \"CARTES_BANCAIRES\", \"DANKORT\", \"DINERS_CLUB\", \"DISCOVER\", \"ENROUTE\", \"ELO\", \"HIPER\", \"INTERAC\", \"JCB\", \"MIR\", \"OTHER\"]`"
            },
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                    }
                  }
                }
              },
              "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options."
            },
            {
              "key": "authorizationType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              },
              "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionApiSchema": {
        "name": "CheckoutPaymentMethodOptionApiSchema",
        "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "surcharge",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                }
              },
              "description": "Surcharge information"
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodCardOptionApiSchema": {
        "name": "CheckoutPaymentMethodCardOptionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "networks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                    }
                  }
                }
              },
              "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
        "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "AMEX",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DANKORT",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DINERS_CLUB",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DISCOVER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "ENROUTE",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "ELO",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "HIPER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "INTERAC",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "JCB",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MAESTRO",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MASTERCARD",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MIR",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "PRIVATE_LABEL",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "UNIONPAY",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "VISA",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "OTHER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
        "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "surcharge",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                    }
                  }
                }
              },
              "description": "Surcharge information"
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
        "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated."
            }
          ]
        }
      },
      "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
        "name": "PaymentRequestPaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "vaultOnSuccess",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted on a successful payment or not."
            },
            {
              "key": "vaultOn3DS",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted after a successful 3DS authentication or not."
            },
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "authorizationType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              },
              "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method.\n`FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount.\n`ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method.\nDefaults to `FINAL`."
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Order Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalOrderTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Payment Session Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaPaymentSessionApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Ideal Pay Nl Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:IdealPayNlTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The description of the payment, as it would typically appear\non a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringPaymentTypeSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "paymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment method token used to authorize the transaction."
            },
            {
              "key": "isVaulted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method token represents a vaulted payment method and can be used for future payments."
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type used for payment authorization."
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "threeDSecureAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "authorizationType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AuthorizationTypeEnum"
                    }
                  }
                }
              },
              "description": "Allows to adjust the authorized amount after the authorization, if supported by payment method. `FINAL` - the authorized amount is final and can not be adjusted. Adjusting the amount can be only done via canceling the payment and re-authorization with new amount. `ESTIMATED` - the amount can be adjusted after the authorization, if supported by payment method."
            }
          ]
        }
      },
      "type_:CheckoutCustomerDetailsApiSchema": {
        "name": "CheckoutCustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address. <br />Must be a valid email address. Supports internationalized email addresses."
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address."
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      },
      "type_:CustomerDetailsApiSchema": {
        "name": "CustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed"
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OptionalAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      },
      "type_:ClientSessionWithTokenApiResponse": {
        "name": "ClientSessionWithTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "clientToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Client token used to initialize the SDK on all platforms."
            },
            {
              "key": "clientTokenExpirationDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Expiration date & time of the client token (UTC with no timezoneinfo)."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your customer."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "Enable certain options associated with the payment methods."
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ClientSessionWarningsApiResponse"
                    }
                  }
                }
              },
              "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable."
            }
          ]
        }
      },
      "type_:ClientSessionApiResponse": {
        "name": "ClientSessionApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your customer."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`.\nIf a top-level amount is provided, it would override any calculated amount."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "Enable certain options associated with the payment methods."
            }
          ]
        }
      },
      "type_:ClientSessionWarningsApiResponse": {
        "name": "ClientSessionWarningsApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the connection involved"
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique code describing the particular issue"
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "More information as to the reason for the warning"
            }
          ]
        }
      },
      "type_:CountryCodeEnum": {
        "name": "CountryCodeEnum",
        "description": "2-letter country code in <a href='https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements'>ISO 3166-1 alpha</a> format,\ne.g. <code>FR</code> for France and <code>GB</code> for the United Kingdom.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:Currency": {
        "name": "Currency",
        "description": "3-letter currency code in <a href='https://en.wikipedia.org/wiki/ISO_4217#Active_codes'>ISO 4217</a> format,\ne.g. <code>USD</code> for US dollars.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_:PaymentResponseProcessorApiSchema": {
        "name": "PaymentResponseProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            },
            {
              "key": "amountCaptured",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts."
            },
            {
              "key": "amountRefunded",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts."
            }
          ]
        }
      },
      "type_:GoCardlessMandateApiSchema": {
        "name": "GoCardlessMandateApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "gocardlessMandateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Unique identifier of a GoCardless mandate agreement"
            }
          ]
        }
      },
      "type_:IdealPayNlTokenApiSchema": {
        "name": "IdealPayNlTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodConfigId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaAddressApiSchema": {
        "name": "KlarnaAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine3",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaCustomerTokenApiSchema": {
        "name": "KlarnaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaCustomerToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaPaymentSessionApiSchema": {
        "name": "KlarnaPaymentSessionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaAuthorizationToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaSessionDetailsApiSchema": {
        "name": "KlarnaSessionDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "recurringDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaAddressApiSchema"
                }
              }
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaAddressApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "purchaseCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "purchaseCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "locale",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "orderLines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "tokenDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaTokenDetails": {
        "name": "KlarnaTokenDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "masked_number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "expiry_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalBillingAgreementApiSchema": {
        "name": "PayPalBillingAgreementApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalBillingAgreementId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AddressApiSchema"
                    }
                  }
                }
              },
              "description": "The PayPal customer's shipping address"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalExternalPayerInfoApiSchema": {
        "name": "PayPalExternalPayerInfoApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalPayerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalOrderTokenApiSchema": {
        "name": "PayPalOrderTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalOrderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentApiResponse": {
        "name": "PaymentApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "dateUpdated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time of the last payment update in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "cardTokenType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardTokenTypeEnum"
                    }
                  }
                }
              },
              "description": "The type of card token used for the payment.\n\nOnly applies for card payments."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "requiredAction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentRequiredActionApiSchema"
                    }
                  }
                }
              },
              "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            },
            {
              "key": "riskData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentCardTokenApiSchema": {
        "name": "PaymentCardTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "first6Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last4Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cardholderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isNetworkTokenized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "binData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BinDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StatusReasonApiSchema": {
        "name": "StatusReasonApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatusTypeEnum"
                }
              },
              "description": "Type of the status."
            },
            {
              "key": "declineType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeclineTypeEnum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried."
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED`, this will be returned."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error."
            }
          ]
        }
      },
      "type_:RiskDataApiSchema": {
        "name": "RiskDataApiSchema",
        "description": "Risk data associated with this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fraudChecks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudCheckApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "cvvCheck",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CvvCheckApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "avsCheck",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AvsCheckApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:FraudCheckApiSchema": {
        "name": "FraudCheckApiSchema",
        "description": "Results of the pre-authorization and post-authorization fraud checks.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "preAuthorizationResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postAuthorizationResult",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FraudDecisionTypeEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:FraudDecisionTypeEnum": {
        "name": "FraudDecisionTypeEnum",
        "description": "Possible fraud check outcomes.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ACCEPT"
            },
            {
              "value": "REFUSE"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "THREE_DS"
            }
          ]
        }
      },
      "type_:CvvCheckApiSchema": {
        "name": "CvvCheckApiSchema",
        "description": "Results of any external CVV check performed on this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AvsCheckApiSchema": {
        "name": "AvsCheckApiSchema",
        "description": "Results of any external AVS check performed on this payment.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AvsRiskAssessmentValues"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AvsRiskAssessmentValues": {
        "name": "AvsRiskAssessmentValues",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "streetAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RiskAssessmentStatusEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RiskAssessmentStatusEnum": {
        "name": "RiskAssessmentStatusEnum",
        "description": "Possible risk assessment values for CVV and AVS checks.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MATCHED"
            },
            {
              "value": "NOT_MATCHED"
            },
            {
              "value": "NOT_VERIFIED"
            },
            {
              "value": "NOT_PROVIDED"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "SKIPPED"
            }
          ]
        }
      },
      "type_:PaymentMethodTypeEnum": {
        "name": "PaymentMethodTypeEnum",
        "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PAYMENT_CARD"
            },
            {
              "value": "GOOGLE_PAY"
            },
            {
              "value": "APPLE_PAY"
            },
            {
              "value": "PAYPAL"
            },
            {
              "value": "BANK_ACCOUNT"
            },
            {
              "value": "KLARNA"
            },
            {
              "value": "APAYA"
            },
            {
              "value": "OPENNODE"
            },
            {
              "value": "HOOLAH"
            },
            {
              "value": "ATOME"
            },
            {
              "value": "COINBASE"
            },
            {
              "value": "NETS"
            },
            {
              "value": "TWOC2P"
            },
            {
              "value": "CLEARPAY"
            },
            {
              "value": "SHOPEEPAY"
            },
            {
              "value": "TRIPLE_A"
            },
            {
              "value": "AFTERPAY"
            },
            {
              "value": "NOL_PAY"
            },
            {
              "value": "PAY_NL_IDEAL"
            },
            {
              "value": "PAY_NL_BANCONTACT"
            },
            {
              "value": "PAY_NL_DIRECT_DEBIT"
            },
            {
              "value": "PAY_NL_SOFORT_BANKING"
            },
            {
              "value": "PAY_NL_PAYPAL"
            },
            {
              "value": "PAY_NL_PAYCONIQ"
            },
            {
              "value": "PAY_NL_GIROPAY"
            },
            {
              "value": "PAY_NL_P24"
            },
            {
              "value": "PAY_NL_EPS"
            },
            {
              "value": "PAY_NL_KAARTDIRECT"
            },
            {
              "value": "ADYEN_SOFORT"
            },
            {
              "value": "ADYEN_TWINT"
            },
            {
              "value": "ADYEN_GIROPAY"
            },
            {
              "value": "ADYEN_TRUSTLY"
            },
            {
              "value": "ADYEN_ALIPAY"
            },
            {
              "value": "ADYEN_MOBILEPAY"
            },
            {
              "value": "ADYEN_MULTIBANCO"
            },
            {
              "value": "ADYEN_VIPPS"
            },
            {
              "value": "ADYEN_DOTPAY"
            },
            {
              "value": "ADYEN_IDEAL"
            },
            {
              "value": "ADYEN_BLIK"
            },
            {
              "value": "ADYEN_PAYTRAIL"
            },
            {
              "value": "ADYEN_INTERAC"
            },
            {
              "value": "ADYEN_PAYSHOP"
            },
            {
              "value": "ADYEN_MBWAY"
            },
            {
              "value": "ADYEN_AFFIRM"
            },
            {
              "value": "ADYEN_KLARNA"
            },
            {
              "value": "ADYEN_BANCONTACT_PAYCONIQ"
            },
            {
              "value": "ADYEN_EPS"
            },
            {
              "value": "ADYEN_BANCONTACT_CARD"
            },
            {
              "value": "ADYEN_SWISH"
            },
            {
              "value": "MOLLIE_IDEAL"
            },
            {
              "value": "MOLLIE_BANCONTACT"
            },
            {
              "value": "MOLLIE_P24"
            },
            {
              "value": "MOLLIE_GIROPAY"
            },
            {
              "value": "MOLLIE_EPS"
            },
            {
              "value": "MOLLIE_GIFTCARD"
            },
            {
              "value": "MOLLIE_SOFORT"
            },
            {
              "value": "NETAXEPT_PAYTRAIL"
            },
            {
              "value": "BUCKAROO_IDEAL"
            },
            {
              "value": "BUCKAROO_BANCONTACT"
            },
            {
              "value": "BUCKAROO_SOFORT"
            },
            {
              "value": "BUCKAROO_GIROPAY"
            },
            {
              "value": "BUCKAROO_EPS"
            },
            {
              "value": "RAPYD_GCASH"
            },
            {
              "value": "RAPYD_PROMPTPAY"
            },
            {
              "value": "RAPYD_GRABPAY"
            },
            {
              "value": "RAPYD_POLI"
            },
            {
              "value": "RAPYD_FAST"
            },
            {
              "value": "XFERS_PAYNOW"
            },
            {
              "value": "STRIPE_GIROPAY"
            },
            {
              "value": "STRIPE_IDEAL"
            },
            {
              "value": "ALIPAY_CN"
            },
            {
              "value": "CHAI_KAKAOPAY"
            },
            {
              "value": "CHAI_NAVER"
            },
            {
              "value": "CHAI_TOSS"
            },
            {
              "value": "XENDIT_DANA"
            },
            {
              "value": "XENDIT_OVO"
            },
            {
              "value": "XENDIT_SHOPEEPAY"
            },
            {
              "value": "XENDIT_RETAIL_OUTLETS"
            },
            {
              "value": "OMISE_PROMPTPAY"
            },
            {
              "value": "OMISE_TRUEMONEY"
            },
            {
              "value": "EBANX_PAGOFACIL"
            },
            {
              "value": "PACYPAY_WECHAT"
            },
            {
              "value": "PACYPAY_ALIPAY"
            },
            {
              "value": "PACYPAY_ALIPAY_PLUS"
            },
            {
              "value": "WORLDPAY_IDEAL"
            },
            {
              "value": "IPAY88_CARD"
            },
            {
              "value": "INGENICO_PAYPAL"
            },
            {
              "value": "VOLT_PIX"
            },
            {
              "value": "VOLT_BANK_TRANSFER"
            },
            {
              "value": "BRAINTREE_VENMO"
            },
            {
              "value": "THUNES_SPIRIT_OF_CADEAU"
            },
            {
              "value": "THUNES_ILLICADO"
            },
            {
              "value": "THUNES_CARTE_CADEAU_CONFORAMA"
            },
            {
              "value": "THUNES_CHEQUE_FIDELITE_CONFORAMA"
            },
            {
              "value": "SIPS_CPAY"
            },
            {
              "value": "SIPS_CPAYCONFORAMA"
            },
            {
              "value": "MONEXT_CETELEM"
            },
            {
              "value": "MONEXT_CPAY"
            }
          ]
        }
      },
      "type_:PaymentListApiResponse": {
        "name": "PaymentListApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PaymentSummaryApiSchema"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "nextCursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "prevCursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentRequiredActionApiSchema": {
        "name": "PaymentRequiredActionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BlockingPaymentActionTypeEnum"
                }
              },
              "description": "Action name"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human description of the required action to perform."
            },
            {
              "key": "clientToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The client token to be returned to the SDK if a required action is returned."
            }
          ]
        }
      },
      "type_:PaymentSummaryApiSchema": {
        "name": "PaymentSummaryApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "dateUpdated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The date and time of the last payment update in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatus"
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentSummaryProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The payment amount, in minor units. e.g. $7 would show as `700`."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`"
            }
          ]
        }
      },
      "type_:PaymentAuthorizationRequestProcessorApiSchema": {
        "name": "PaymentAuthorizationRequestProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The processor's merchant ID used to authorize the payment."
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The processor name should be provided if the processorMerchantId is not unique across all of your integrations."
            }
          ]
        }
      },
      "type_:PaymentSummaryProcessorApiSchema": {
        "name": "PaymentSummaryProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            }
          ]
        }
      },
      "type_:PrepaidReloadableEnum": {
        "name": "PrepaidReloadableEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "RELOADABLE"
            },
            {
              "value": "NON_RELOADABLE"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:RecurringTransactionTypeEnum": {
        "name": "RecurringTransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            }
          ]
        }
      },
      "type_:RecurringPaymentTypeSchema": {
        "name": "RecurringPaymentTypeSchema",
        "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. In all other cases, this field will default to `ECOMMERCE`, unless you set the field explicitly. See the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:RecurringTransactionTypeEnum"
          }
        }
      },
      "type_:ProductTypeEnum": {
        "name": "ProductTypeEnum",
        "description": "An enumeration",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PHYSICAL"
            },
            {
              "value": "DIGITAL"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthResponseCodeEnum": {
        "name": "ThreeDSecureAuthResponseCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_PERFORMED"
            },
            {
              "value": "SKIPPED"
            },
            {
              "value": "AUTH_SUCCESS"
            },
            {
              "value": "AUTH_FAILED"
            },
            {
              "value": "CHALLENGE"
            },
            {
              "value": "METHOD"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
        "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Three D Secure Skipped Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureSkippedReasonCodeEnum"
                }
              }
            },
            {
              "displayName": "Three D Secure Failed Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureFailedReasonCodeEnum"
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchema": {
        "name": "ThreeDSecureAuthenticationApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "responseCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureAuthResponseCodeEnum"
                }
              }
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                }
              }
            },
            {
              "key": "reasonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "protocolVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "challengeIssued",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureFailedReasonCodeEnum": {
        "name": "ThreeDSecureFailedReasonCodeEnum",
        "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "UNKNOWN"
            },
            {
              "value": "REJECTED_BY_ISSUER"
            },
            {
              "value": "CARD_AUTHENTICATION_FAILED"
            },
            {
              "value": "UNKNOWN_DEVICE"
            },
            {
              "value": "UNSUPPORTED_DEVICE"
            },
            {
              "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "INVALID_TRANSACTION"
            },
            {
              "value": "NO_CARD_RECORD"
            },
            {
              "value": "SECURITY_FAILURE"
            },
            {
              "value": "STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
            },
            {
              "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
            },
            {
              "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
            },
            {
              "value": "LOW_CONFIDENCE"
            },
            {
              "value": "MEDIUM_CONFIDENCE"
            },
            {
              "value": "HIGH_CONFIDENCE"
            },
            {
              "value": "VERY_HIGH_CONFIDENCE"
            },
            {
              "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
            },
            {
              "value": "NON_PAYMENT_NOT_SUPPORTED"
            },
            {
              "value": "THREE_RI_NOT_SUPPORTED"
            },
            {
              "value": "ACS_TECHNICAL_ISSUE"
            },
            {
              "value": "DECOUPLED_REQUIRED_BY_ACS"
            },
            {
              "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
            },
            {
              "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
            },
            {
              "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
            },
            {
              "value": "ACS_TIMED_OUT"
            },
            {
              "value": "INVALID_ACS_RESPONSE"
            },
            {
              "value": "ACS_SYSTEM_ERROR_RESPONSE"
            },
            {
              "value": "ERROR_GENERATING_CAVV"
            },
            {
              "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
            },
            {
              "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
            },
            {
              "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
            }
          ]
        }
      },
      "type_:ThreeDSecureSkippedReasonCodeEnum": {
        "name": "ThreeDSecureSkippedReasonCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "GATEWAY_UNAVAILABLE"
            },
            {
              "value": "DISABLED_BY_MERCHANT"
            },
            {
              "value": "NOT_SUPPORTED_BY_ISSUER"
            },
            {
              "value": "FAILED_TO_NEGOTIATE"
            },
            {
              "value": "UNKNOWN_ACS_RESPONSE"
            },
            {
              "value": "3DS_SERVER_ERROR"
            },
            {
              "value": "ACQUIRER_NOT_CONFIGURED"
            },
            {
              "value": "ACQUIRER_NOT_PARTICIPATING"
            }
          ]
        }
      },
      "type_:TokenTypeEnum": {
        "name": "TokenTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MULTI_USE"
            },
            {
              "value": "SINGLE_USE"
            }
          ]
        }
      },
      "type_:DeclineTypeEnum": {
        "name": "DeclineTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SOFT_DECLINE"
            },
            {
              "value": "HARD_DECLINE"
            }
          ]
        }
      },
      "type_:TransactionDeclineReasonV2Enum": {
        "name": "TransactionDeclineReasonV2Enum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ERROR"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "LOST_OR_STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REFER_TO_CARD_ISSUER"
            },
            {
              "value": "DO_NOT_HONOR"
            },
            {
              "value": "INSUFFICIENT_FUNDS"
            },
            {
              "value": "WITHDRAWAL_LIMIT_EXCEEDED"
            },
            {
              "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
            },
            {
              "value": "AUTHENTICATION_REQUIRED"
            }
          ]
        }
      },
      "type_:TransactionOverviewApiSchema": {
        "name": "TransactionOverviewApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Date & time of the transaction (UTC)"
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "Transaction amount in minor units"
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Currency"
                }
              },
              "description": "The 3-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The reference submitted on payment creation or refund."
            },
            {
              "key": "transactionType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "processorTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Processor's unique identifier for the transaction"
            },
            {
              "key": "processorName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An identifier of a processor."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\""
            },
            {
              "key": "processorStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information"
            },
            {
              "key": "processorStatusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`."
            },
            {
              "key": "cardTokenType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardTokenTypeEnum"
                    }
                  }
                }
              },
              "description": "The type of card token used for the payment.\n\nOnly applies for card payments."
            }
          ]
        }
      },
      "type_:PaymentStatus": {
        "name": "PaymentStatus",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            }
          ]
        }
      },
      "type_:PaymentStatusTypeEnum": {
        "name": "PaymentStatusTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPLICATION_ERROR"
            },
            {
              "value": "GATEWAY_REJECTED"
            },
            {
              "value": "ISSUER_DECLINED"
            }
          ]
        }
      },
      "type_:TransactionTypeEnum": {
        "name": "TransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SALE"
            },
            {
              "value": "REFUND"
            }
          ]
        }
      },
      "type_:OptionalAddressApiSchema": {
        "name": "OptionalAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:AddressApiSchema": {
        "name": "AddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CountryCodeEnum"
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
        "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenApiResponse": {
        "name": "MerchantPaymentMethodTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Creation date & time of the object (UTC)"
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date & time when this object was revoked. (UTC)"
            },
            {
              "key": "deleted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this object has been revoked."
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The vaulted payment method token."
            },
            {
              "key": "tokenType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "- `MULTI_USE` a vaulted token that can be re-used with subsequent payments"
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type associated with a token."
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID representing the customer"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A friendly description given by the user"
            },
            {
              "key": "default",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this payment method is the default"
            }
          ]
        }
      },
      "type_:VerifiedMerchantPaymentMethodTokenApiResponse": {
        "name": "VerifiedMerchantPaymentMethodTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [
            "type_:MerchantPaymentMethodTokenApiResponse"
          ],
          "properties": [
            {
              "key": "isVerified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this payment method was verified"
            }
          ]
        }
      },
      "type_:VerifiedMerchantPaymentMethodTokenListApiResponse": {
        "name": "VerifiedMerchantPaymentMethodTokenListApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:VerifiedMerchantPaymentMethodTokenApiResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:LoyaltyApiBalanceResponse": {
        "name": "LoyaltyApiBalanceResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for the customer on the loyalty provider."
            },
            {
              "key": "connectionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the Primer connection configuration."
            },
            {
              "key": "connectionName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Name of the loyalty provider."
            },
            {
              "key": "balance",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The loyalty customer's points balance."
            }
          ]
        }
      },
      "type_:LoyaltyTransactionTypeEnum": {
        "name": "LoyaltyTransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "REDEMPTION"
            },
            {
              "value": "REFUND"
            }
          ]
        }
      },
      "type_:LoyaltyApiTransactionResponse": {
        "name": "LoyaltyApiTransactionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Creation date & time of the transaction (UTC)"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique Primer identifier for the loyalty transaction."
            },
            {
              "key": "connectionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the Primer connection configuration."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for the customer on the loyalty provider."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique identifier for the order."
            },
            {
              "key": "connectionTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the transaction on the loyalty provider's side."
            },
            {
              "key": "connectionName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Name of the loyalty provider."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:LoyaltyTransactionTypeEnum"
                    }
                  }
                }
              },
              "description": "The type of the transaction."
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The value of the transaction."
            }
          ]
        }
      },
      "type_:LoyaltyApiTransactionsListResponse": {
        "name": "LoyaltyApiTransactionsListResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:LoyaltyApiTransactionResponse"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The list of loyalty transactions"
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The total number of available results"
            },
            {
              "key": "limit",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The limit of the paged result"
            },
            {
              "key": "offset",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The offset of the paged result"
            }
          ]
        }
      },
      "type_:PaymentsInsightsBinDataIssuerCountryCode": {
        "name": "PaymentsInsightsBinDataIssuerCountryCode",
        "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:PaymentsInsightsBinData": {
        "name": "PaymentsInsightsBinData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardNetworkEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "issuerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsBinDataIssuerCountryCode"
                    }
                  }
                }
              },
              "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom."
            },
            {
              "key": "issuerName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The name of the issuing bank."
            },
            {
              "key": "productUsageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The usage type of the payment card e.g. commercial, consumer."
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The funding type of the payment card e.g. credit, debit, prepaid."
            }
          ]
        }
      },
      "type_:PaymentsInsightsOrderCountryCode": {
        "name": "PaymentsInsightsOrderCountryCode",
        "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:PaymentsInsightsOrder": {
        "name": "PaymentsInsightsOrder",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The order reference for the payment."
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsOrderCountryCode"
                    }
                  }
                }
              },
              "description": "2-letter country code in [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) alpha format,\ne.g. FR for France and GB for the United Kingdom."
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentCurrencyCode": {
        "name": "PaymentsInsightsPaymentCurrencyCode",
        "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentStatus": {
        "name": "PaymentsInsightsPaymentStatus",
        "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "PENDING"
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentPaymentType": {
        "name": "PaymentsInsightsPaymentPaymentType",
        "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            },
            {
              "value": "MOTO"
            },
            {
              "value": "IN_STORE"
            }
          ]
        }
      },
      "type_:PaymentsInsightsPayment": {
        "name": "PaymentsInsightsPayment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The payment ID.\n\nThe payment ID must be unique. You can use this unique payment ID to update payment details."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsPaymentCurrencyCode"
                }
              },
              "description": "The 3-letter currency code in\n[ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\n\ne.g. use `USD` for US dollars."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsProcessor"
                }
              }
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The amount you would like to charge the customer,\nin minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units.\nIn this case you should use the value as it is, without any formatting.\nFor example for ¥100, use `100`.\nThe minimum amount is 0."
            },
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The payment creation date and time (UTC) in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).\n\nCannot be updated in partial updates PATCH."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsOrder"
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsPaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](https://apiref.primer.io/docs#payment-status) for more information."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsStatusReason"
                    }
                  }
                }
              },
              "description": "Pass more information regarding the payment's status in this field.\n\nThis is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsPaymentMethod"
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle.\n\nAd dictionary of key-value pairs where the values can only be strings or integers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"88278a\"}`"
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsPaymentPaymentType"
                    }
                  }
                }
              },
              "description": "Payment types, primarily to be used for recurring payments.\n\nNote: If you successfully vault a `SINGLE_USE` token on payment\ncreation, then there's no need to set a value for this field and it will\nbe flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all\npossible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |\n| `MOTO`          | a merchant-initiated mail order or telephone order payment.                                                                    |\n| `IN_STORE`      | a customer-initiated payment where the customer is physically present in a shop.                                               |"
            },
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the payment,\nas it would typically appear on a bank statement."
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentMethod": {
        "name": "PaymentsInsightsPaymentMethod",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentMethodTypeEnum"
                }
              },
              "description": "Payment method type used for payment authorization."
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsPaymentMethodData"
                    }
                  }
                }
              }
            },
            {
              "key": "threeDSecureAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsThreeDSecureAuthentication"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentsInsightsPaymentMethodData": {
        "name": "PaymentsInsightsPaymentMethodData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "binData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsBinData"
                    }
                  }
                }
              }
            },
            {
              "key": "first6Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The first six digits of the card used for payment,\nalso known as the Bank Identification Number (BIN)."
            }
          ]
        }
      },
      "type_:PaymentsInsightsProcessorName": {
        "name": "PaymentsInsightsProcessorName",
        "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APAYA"
            },
            {
              "value": "ADYEN"
            },
            {
              "value": "AFTERPAY"
            },
            {
              "value": "AIRWALLEX"
            },
            {
              "value": "ALIANT"
            },
            {
              "value": "ALIPAY"
            },
            {
              "value": "ATOME"
            },
            {
              "value": "BANKED"
            },
            {
              "value": "BARCLAYCARD"
            },
            {
              "value": "BRAINTREE"
            },
            {
              "value": "BUCKAROO"
            },
            {
              "value": "BRIDGE"
            },
            {
              "value": "CHAI"
            },
            {
              "value": "CHECKOUT"
            },
            {
              "value": "CLEARPAY"
            },
            {
              "value": "COINBASE"
            },
            {
              "value": "CYBERSOURCE"
            },
            {
              "value": "DLOCAL"
            },
            {
              "value": "EBANX"
            },
            {
              "value": "ECOSPEND"
            },
            {
              "value": "FINTECTURE"
            },
            {
              "value": "GLOBAL_PAYMENTS"
            },
            {
              "value": "HOOLAH"
            },
            {
              "value": "INGENICO"
            },
            {
              "value": "INGENICO-CONNECT"
            },
            {
              "value": "KLARNA"
            },
            {
              "value": "LAYBUY"
            },
            {
              "value": "MPGS"
            },
            {
              "value": "MOLLIE"
            },
            {
              "value": "NEONOMICS"
            },
            {
              "value": "NEXI"
            },
            {
              "value": "NUVEI"
            },
            {
              "value": "OMISE"
            },
            {
              "value": "OPENNODE"
            },
            {
              "value": "PAY_NL"
            },
            {
              "value": "PAY-NL"
            },
            {
              "value": "PAYGENT"
            },
            {
              "value": "PAYPAL"
            },
            {
              "value": "PRIMER_TEST"
            },
            {
              "value": "STRIPE"
            },
            {
              "value": "TRILO"
            },
            {
              "value": "TRUELAYER"
            },
            {
              "value": "VOLT"
            },
            {
              "value": "VYNE"
            },
            {
              "value": "WORLDPAY"
            },
            {
              "value": "EMERCHANTPAY"
            },
            {
              "value": "XFERS"
            },
            {
              "value": "RAPYD"
            },
            {
              "value": "AUTHNET"
            },
            {
              "value": "NETS"
            },
            {
              "value": "NETAXEPT"
            },
            {
              "value": "PRIMER_PROCESSOR"
            },
            {
              "value": "REACH"
            },
            {
              "value": "TRUST_PAYMENTS"
            },
            {
              "value": "TWOC2P"
            },
            {
              "value": "MERCADO_PAGO"
            },
            {
              "value": "PAYU"
            },
            {
              "value": "XENDIT"
            },
            {
              "value": "FISERV"
            },
            {
              "value": "PACYPAY"
            },
            {
              "value": "SHOPEEPAY"
            },
            {
              "value": "TRIPLE_A"
            },
            {
              "value": "IPAY88"
            },
            {
              "value": "APPLE_PAY"
            },
            {
              "value": "GOOGLE_PAY"
            },
            {
              "value": "RISKIFIED"
            },
            {
              "value": "TAXJAR"
            },
            {
              "value": "STITCH"
            },
            {
              "value": "SIGNIFYD"
            }
          ]
        }
      },
      "type_:PaymentsInsightsProcessor": {
        "name": "PaymentsInsightsProcessor",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentsInsightsProcessorName"
                }
              },
              "description": "The payment processor used for this payment.\nPrimer supports the above processors through the Payments API,\nhowever any value can be passed here."
            },
            {
              "key": "merchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            }
          ]
        }
      },
      "type_:PaymentsInsightsStatusReasonType": {
        "name": "PaymentsInsightsStatusReasonType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPLICATION_ERROR"
            },
            {
              "value": "GATEWAY_REJECTED"
            },
            {
              "value": "ISSUER_DECLINED"
            }
          ]
        }
      },
      "type_:PaymentsInsightsStatusReasonDeclineType": {
        "name": "PaymentsInsightsStatusReasonDeclineType",
        "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SOFT_DECLINE"
            },
            {
              "value": "HARD_DECLINE"
            }
          ]
        }
      },
      "type_:PaymentsInsightsStatusReasonCode": {
        "name": "PaymentsInsightsStatusReasonCode",
        "description": "Payment status code with the error code when\nthe issuer declined the payment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ERROR"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "LOST_OR_STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REFER_TO_CARD_ISSUER"
            },
            {
              "value": "DO_NOT_HONOR"
            },
            {
              "value": "INSUFFICIENT_FUNDS"
            },
            {
              "value": "WITHDRAWAL_LIMIT_EXCEEDED"
            },
            {
              "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
            },
            {
              "value": "AUTHENTICATION_REQUIRED"
            }
          ]
        }
      },
      "type_:PaymentsInsightsStatusReason": {
        "name": "PaymentsInsightsStatusReason",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsStatusReasonType"
                    }
                  }
                }
              }
            },
            {
              "key": "declineType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsStatusReasonDeclineType"
                    }
                  }
                }
              },
              "description": "Declines of type `SOFT_DECLINE` may have been retried.\nWhereas declines of type `HARD_DECLINE` should have not been retried."
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsStatusReasonCode"
                    }
                  }
                }
              },
              "description": "Payment status code with the error code when\nthe issuer declined the payment."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Message detail returned by the processor when\nthe error on appeared on their part."
            }
          ]
        }
      },
      "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode": {
        "name": "PaymentsInsightsThreeDSecureAuthenticationResponseCode",
        "description": "The response returned during the 3D Secure authentication call.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_PERFORMED"
            },
            {
              "value": "SKIPPED"
            },
            {
              "value": "AUTH_SUCCESS"
            },
            {
              "value": "AUTH_FAILED"
            },
            {
              "value": "CHALLENGE"
            },
            {
              "value": "METHOD"
            }
          ]
        }
      },
      "type_:PaymentsInsightsThreeDSecureAuthentication": {
        "name": "PaymentsInsightsThreeDSecureAuthentication",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "transStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "transStatusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "responseCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentsInsightsThreeDSecureAuthenticationResponseCode"
                    }
                  }
                }
              },
              "description": "The response returned during the 3D Secure authentication call."
            },
            {
              "key": "challengeIssued",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "The challenge status of the 3D Secure authentication.\nSet to false for frictionless 3D Secure authentication."
            },
            {
              "key": "protocolVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The protocol version used during 3D Secure authentication."
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The reason code for unsuccessful 3D Secure authentication attempts."
            },
            {
              "key": "reasonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The human readable reason text for unsuccessful\n3D Secure authentication attempts."
            },
            {
              "key": "eci",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "E-commerce Indicator (ECI)"
            }
          ]
        }
      },
      "type_:ErrorObject": {
        "name": "ErrorObject",
        "description": "An object containing information about the error that occurred.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "errorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "An error ID"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A human readable description of the error"
            },
            {
              "key": "diagnosticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An ID that you can quote when contacting the Primer support team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11)."
            },
            {
              "key": "validationErrors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "description": "Returned in case of a badly formed request"
            }
          ]
        }
      },
      "type_:four_hundred_ErrorResponse": {
        "name": "four_hundred_ErrorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ErrorObject"
                }
              }
            }
          ]
        }
      },
      "type_:four_hundred_four_ErrorResponse": {
        "name": "four_hundred_four_ErrorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ErrorObject"
                }
              }
            }
          ]
        }
      },
      "type_:four_hundred_nine_ErrorResponseError": {
        "name": "four_hundred_nine_ErrorResponseError",
        "shape": {
          "type": "object",
          "extends": [
            "type_:ErrorObject"
          ],
          "properties": [
            {
              "key": "paymentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Payment ID of the related payment"
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Status of the related payment"
            }
          ]
        }
      },
      "type_:four_hundred_nine_ErrorResponse": {
        "name": "four_hundred_nine_ErrorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:four_hundred_nine_ErrorResponseError"
                }
              }
            }
          ]
        }
      },
      "type_:four_hundred_twenty_two_ErrorResponse": {
        "name": "four_hundred_twenty_two_ErrorResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ErrorObject"
                }
              }
            }
          ]
        }
      },
      "type_:AuthorizationTypeEnum": {
        "name": "AuthorizationTypeEnum",
        "description": "Type of authorization for the payment.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ESTIMATED"
            },
            {
              "value": "FINAL"
            }
          ]
        }
      },
      "type_:CardTokenTypeEnum": {
        "name": "CardTokenTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CARD_PAN"
            },
            {
              "value": "NETWORK_TOKEN"
            },
            {
              "value": "PROCESSOR_TOKEN"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_clientSessionApi": {
        "id": "subpackage_clientSessionApi",
        "name": "Client Session API"
      },
      "subpackage_paymentsApi": {
        "id": "subpackage_paymentsApi",
        "name": "Payments API"
      },
      "subpackage_paymentMethodsApi": {
        "id": "subpackage_paymentMethodsApi",
        "name": "Payment Methods API"
      },
      "subpackage_observabilityApiBeta": {
        "id": "subpackage_observabilityApiBeta",
        "name": "Observability API (beta)"
      },
      "subpackage_loyaltyApi": {
        "id": "subpackage_loyaltyApi",
        "name": "Loyalty API"
      }
    },
    "auths": {
      "default": {
        "type": "header",
        "headerWireValue": "X-API-KEY",
        "nameOverride": "apiKey"
      }
    }
  },
  {
    "id": "fe590ab9-f9e7-4719-8ec5-b595affff88d",
    "endpoints": {
      "subpackage_clientSessionApi.createClientSideToken": {
        "id": "subpackage_clientSessionApi.createClientSideToken",
        "namespace": [
          "subpackage_clientSessionApi"
        ],
        "description": "Creating a client session generates a client token: a temporary key used to initialize [Universal Checkout](https://primer.io/docs/accept-payments/setup-universal-checkout/installation/web) and authenticate it against your account.\n\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\n<b>Note:</b>\nWhen creating a Client Session, please make sure to provide `currencyCode`, `orderId`, and `amount`.\nIf any of these are not yet available, you can provide them when making the payment request.\n\nClient tokens expire after 24 hours.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/client-session"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the payment."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars."
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`.\n\nIf the amount is provided on this level, it would override any amount calculated from the provided line items, shipping and other amounts."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer.\nCreate a client session token with a customer ID to enable the client-side SDK to retrieve and manage your customer's saved payment methods."
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutCustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer."
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ClientSessionApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/client-session",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "order": {
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1,
                      "type": "string"
                    }
                  ],
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 1,
                      "quantity": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "order": {
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1,
                      "type": "string"
                    }
                  ],
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 1,
                      "quantity": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "options": {
                    "<PAYMENT_METHOD_TYPE>": {
                      "surcharge": {}
                    },
                    "PAYMENT_CARD": {
                      "networks": {
                        "AMEX": {
                          "surcharge": {}
                        },
                        "DANKORT": {
                          "surcharge": {}
                        },
                        "DINERS_CLUB": {
                          "surcharge": {}
                        },
                        "DISCOVER": {
                          "surcharge": {}
                        },
                        "ENROUTE": {
                          "surcharge": {}
                        },
                        "ELO": {
                          "surcharge": {}
                        },
                        "HIPER": {
                          "surcharge": {}
                        },
                        "INTERAC": {
                          "surcharge": {}
                        },
                        "JCB": {
                          "surcharge": {}
                        },
                        "MAESTRO": {
                          "surcharge": {}
                        },
                        "MASTERCARD": {
                          "surcharge": {}
                        },
                        "MIR": {
                          "surcharge": {}
                        },
                        "PRIVATE_LABEL": {
                          "surcharge": {}
                        },
                        "UNIONPAY": {
                          "surcharge": {}
                        },
                        "VISA": {
                          "surcharge": {}
                        },
                        "OTHER": {
                          "surcharge": {}
                        }
                      }
                    }
                  }
                },
                "warnings": {
                  "type": "TAXJAR",
                  "code": "MISSING_DATA"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"order\": {\n    \"countryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1,\n        \"type\": \"string\"\n      }\n    ],\n    \"lineItems\": [\n      {\n        \"itemId\": \"string\",\n        \"description\": \"string\",\n        \"amount\": 1,\n        \"quantity\": 1,\n        \"productType\": \"PHYSICAL\"\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"paymentMethod\": {\n    \"options\": {\n      \"<PAYMENT_METHOD_TYPE>\": {\n        \"surcharge\": {}\n      },\n      \"PAYMENT_CARD\": {\n        \"networks\": {\n          \"AMEX\": {\n            \"surcharge\": {}\n          },\n          \"DANKORT\": {\n            \"surcharge\": {}\n          },\n          \"DINERS_CLUB\": {\n            \"surcharge\": {}\n          },\n          \"DISCOVER\": {\n            \"surcharge\": {}\n          },\n          \"ENROUTE\": {\n            \"surcharge\": {}\n          },\n          \"ELO\": {\n            \"surcharge\": {}\n          },\n          \"HIPER\": {\n            \"surcharge\": {}\n          },\n          \"INTERAC\": {\n            \"surcharge\": {}\n          },\n          \"JCB\": {\n            \"surcharge\": {}\n          },\n          \"MAESTRO\": {\n            \"surcharge\": {}\n          },\n          \"MASTERCARD\": {\n            \"surcharge\": {}\n          },\n          \"MIR\": {\n            \"surcharge\": {}\n          },\n          \"PRIVATE_LABEL\": {\n            \"surcharge\": {}\n          },\n          \"UNIONPAY\": {\n            \"surcharge\": {}\n          },\n          \"VISA\": {\n            \"surcharge\": {}\n          },\n          \"OTHER\": {\n            \"surcharge\": {}\n          }\n        }\n      }\n    }\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/client-session",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/client-session \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.listPayments": {
        "id": "subpackage_paymentsApi.listPayments",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nRetrieve a list of your payments.\n\nResults are paginated, they will only return up to 100 payments maximum.\nTo access the next page of result, set the `cursor` query parameter to the value of `nextCursor` in your current result payload. Use `prevCursor` to go back to the previous page.\n\n**Note:** this endpoint returns a list of summarized payments. Not all payments attributes are present. You can use the query parameters to filter payments.\nYou can separate multiple query parameters with the `&` symbol.\nQuery parameters with types of the form \"Array of strings\" (such as the status parameter) can be specified as a comma-separated list.\n\nFor example, if you wanted to get both `FAILED` and `CANCELLED` payments, for customer `john-123`, you would use:\n\n```bash\ncurl --location --request GET 'https://api.primer.io/payments?status=FAILED,CANCELLED&customer_id=john-123' \\\n--header 'X-Api-Key: <YOUR_API_KEY>'\n```\n\nYou can alternatively specify a list by repeating the parameter multiple times.\n\n**Note:** payments will be available within a minute from being created.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "status",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentStatus"
                  }
                }
              }
            },
            "description": "Filter payments by their status."
          },
          {
            "key": "payment_method_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:PaymentMethodTypeEnum"
                  }
                }
              }
            },
            "description": "Filter payments by their payment method type."
          },
          {
            "key": "processor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter payments by their payment processor."
          },
          {
            "key": "currency_code",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter payments by their payment currency.\n\nUse the three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars."
          },
          {
            "key": "from_date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Return only payments from this date (inclusive)."
          },
          {
            "key": "to_date",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            },
            "description": "Return only payments up to this date (inclusive)."
          },
          {
            "key": "order_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Return payments related to this order ID."
          },
          {
            "key": "min_amount",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Return payments of this amount minimum (inclusive)."
          },
          {
            "key": "max_amount",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Return payments of this amount max (inclusive)."
          },
          {
            "key": "customer_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "ID of the customer that has made the payment."
          },
          {
            "key": "merchant_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "ID of the merchant involved in the payment."
          },
          {
            "key": "customer_email_address",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Email of the customer that has made the payment."
          },
          {
            "key": "last_4_digits",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Last 4 digits of the card used for the payment."
          },
          {
            "key": "paypal_email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Paypal email address associated with the payment."
          },
          {
            "key": "klarna_email",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Klarna email address associated with the payment."
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "description": "Maximum number of payments to return per page."
          },
          {
            "key": "cursor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "If results are paginated, pass the `nextCursor` to access next page."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentListApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "status": "PENDING",
              "payment_method_type": "PAYMENT_CARD"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "string",
                    "date": "2024-01-15T09:30:00Z",
                    "status": "PENDING",
                    "orderId": "string",
                    "currencyCode": "string",
                    "amount": 1
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d status=PENDING \\\n     -d payment_method_type=PAYMENT_CARD",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "status": "PENDING",
              "payment_method_type": "PAYMENT_CARD"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d status=PENDING \\\n     -d payment_method_type=PAYMENT_CARD",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.createPayment": {
        "id": "subpackage_paymentsApi.createPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nCreate and authorize a payment for a given customer order. You should provide a payment method token here to avoid PCI implications.\n\nIf only a payment method token is passed, the values passed with the Client Session determine the amount, currency etc.\n\nNote: `amount`, `currencyCode` and `orderId` are required during payment creation. Make sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\n\nAll fields provided on this request will take preference over any field on the `order` associated with the client session. E.g. if you pass `amount` on this request, it will override the `amount` on the `order` associated with the Client Session.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Your reference for the payment."
              },
              {
                "key": "currencyCode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes).\ne.g. use `USD` for US dollars.\n"
              },
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`.\n\nSome currencies, such as Japanese Yen, do not have minor units. In this case you should use the value as it is, without any formatting. For example for ¥100, use `100`. The minimum amount is 0."
              },
              {
                "key": "order",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:OrderDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the order."
              },
              {
                "key": "paymentMethodToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The payment method token used to authorize the payment.\n"
              },
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "A unique identifier for your customer.\nThis attribute is required if `paymentMethod.vaultOnSuccess` is set to `True`."
              },
              {
                "key": "customer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:CustomerDetailsApiSchema"
                      }
                    }
                  }
                },
                "description": "More information associated with the customer.\n"
              },
              {
                "key": "metadata",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`\n"
              },
              {
                "key": "paymentMethod",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:PaymentRequestPaymentMethodOptionsApiSchema"
                      }
                    }
                  }
                },
                "description": "Enable certain options associated with the payment method."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string",
                "order": {
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1,
                      "type": "string"
                    }
                  ],
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 1,
                      "quantity": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "shipping": {}
                },
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "paymentMethod": {
                  "paymentType": "FIRST_PAYMENT"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "AUTHORIZED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1,
                      "type": "string"
                    }
                  ],
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 1,
                      "quantity": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\",\n  \"order\": {\n    \"countryCode\": \"AW\",\n    \"fees\": [\n      {\n        \"amount\": 1,\n        \"type\": \"string\"\n      }\n    ],\n    \"lineItems\": [\n      {\n        \"itemId\": \"string\",\n        \"description\": \"string\",\n        \"amount\": 1,\n        \"quantity\": 1,\n        \"productType\": \"PHYSICAL\"\n      }\n    ],\n    \"shipping\": {}\n  },\n  \"customer\": {\n    \"billingAddress\": {\n      \"countryCode\": \"AW\"\n    },\n    \"shippingAddress\": {\n      \"countryCode\": \"AW\"\n    }\n  },\n  \"paymentMethod\": {\n    \"paymentType\": \"FIRST_PAYMENT\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "paymentMethodToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"paymentMethodToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.capturePayment": {
        "id": "subpackage_paymentsApi.capturePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nIf you have successfully authorized a payment, you can now fully capture, or partially capture funds from the authorized payment, depending on whether your selected payment processor supports it. The payment will be updated to `SETTLED` or `SETTLING`, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't send a payload with the capture request, the full amount that was authorized will be sent for capture.\n\nBelow are the available payload attributes, which give you more granular control when capturing funds, if you require it.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/capture"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of the payment to capture."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to capture, in minor units. The currency used on authorization is assumed.\n\nIf no amount is specified it defaults to the full amount."
              },
              {
                "key": "final",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Indicates whether the capture request is the final capture request.\n\nAfter a final capture, no subsequent captures are allowed."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/capture",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "SETTLED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1,
                      "type": "string"
                    }
                  ],
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 1,
                      "quantity": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 42,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "SETTLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/capture \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/capture",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/capture \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/capture",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/capture \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.cancelPayment": {
        "id": "subpackage_paymentsApi.cancelPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nProvided the payment has not reached `SETTLED` status, Primer will send a \"void\" request to the payment processor, thereby cancelling the payment and releasing the hold on customer funds.\n\nUpon success, the payment will transition to `CANCELLED`.\n\nThe payload is optional.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/cancel"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to cancel."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "reason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "You can optionally specify a reason for the cancellation. This is for your own records."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/cancel",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "CANCELLED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1,
                      "type": "string"
                    }
                  ],
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 1,
                      "quantity": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "CANCELLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/cancel \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/cancel",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/cancel \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.refundPayment": {
        "id": "subpackage_paymentsApi.refundPayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nBy default, this request will refund the full amount.\n\nOptionally, pass in a lesser amount for a partial refund.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/refund"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to refund."
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Idempotency-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Optional key to make the request idempotent. Enables a safe retry of a request without risking the user being charged or refunded multiple times. The idempotency key must be generated by the client and needs to be unique for every new request."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "amount",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "description": "The amount you would like to refund the customer, in minor units. e.g. for $7, use `700`.\n\nDefaults to remaining non-refunded amount."
              },
              {
                "key": "orderId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Optionally you can pass a specific order ID for the refund.\n\nBy default this will be set to the original `orderId` given on payment creation."
              },
              {
                "key": "reason",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "You can optionally specify a reason for the refund. This is for your own records."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          },
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/refund",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "SETTLED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1,
                      "type": "string"
                    }
                  ],
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 1,
                      "quantity": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 42,
                  "amountRefunded": 42
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "SETTLED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/refund \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/refund",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/refund \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/refund",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Idempotency-Key": "string"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/refund \\\n     -H \"X-Idempotency-Key: string\" \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.resumePayment": {
        "id": "subpackage_paymentsApi.resumePayment",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nResume a payment's workflow execution from a paused state. This is usually required when a Workflow was paused in order to get further information from the customer, or when waiting for an asynchronous response from a third party connection.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/resume"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to resume."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "resumeToken",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "A token containing any information that is sent back from the checkout to complete a blocked payment flow."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string/resume",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resumeToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "AUTHORIZED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1,
                      "type": "string"
                    }
                  ],
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 1,
                      "quantity": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/string/resume \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resumeToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id/resume",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "resumeToken": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payments/:id/resume \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"resumeToken\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentsApi.getPaymentById": {
        "id": "subpackage_paymentsApi.getPaymentById",
        "namespace": [
          "subpackage_paymentsApi"
        ],
        "description": "<p/>\n\nRetrieve a payment by its ID.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payments/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "ID of payment to retrieve."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PaymentApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "kHdEw9EG",
                "date": "2021-02-21T15:36:16.367687",
                "status": "AUTHORIZED",
                "orderId": "order-abc",
                "currencyCode": "EUR",
                "amount": 42,
                "order": {
                  "countryCode": "AW",
                  "fees": [
                    {
                      "amount": 1,
                      "type": "string"
                    }
                  ],
                  "lineItems": [
                    {
                      "itemId": "string",
                      "description": "string",
                      "amount": 1,
                      "quantity": 1,
                      "productType": "PHYSICAL"
                    }
                  ],
                  "shipping": {}
                },
                "customerId": "customer-123",
                "customer": {
                  "billingAddress": {
                    "countryCode": "AW"
                  },
                  "shippingAddress": {
                    "countryCode": "AW"
                  }
                },
                "metadata": {
                  "productId": 123,
                  "merchantId": "a13bsd62s"
                },
                "paymentMethod": {
                  "descriptor": "Purchase: Socks",
                  "paymentMethodToken": "heNwnqaeRiqvY1UcslfQc3wxNjEzOTIxNjc4",
                  "vaultedPaymentMethodToken": "_xlXlmBcTnuFxc2N3HAI73wxNjE1NTU5ODY5",
                  "analyticsId": "VtkMDAxZW5isH0HsbbNxZ3lo",
                  "paymentMethodType": "PAYMENT_CARD",
                  "paymentMethodData": {
                    "first6Digits": "411111",
                    "last4Digits": "1111",
                    "expirationMonth": "12",
                    "expirationYear": "2030",
                    "cardholderName": "John Biggins",
                    "network": "Visa",
                    "isNetworkTokenized": false,
                    "binData": {
                      "network": "VISA",
                      "issuerCountryCode": "AW",
                      "issuerCurrencyCode": "AED",
                      "regionalRestriction": "UNKNOWN",
                      "accountNumberType": "UNKNOWN",
                      "accountFundingType": "UNKNOWN",
                      "prepaidReloadableIndicator": "NOT_APPLICABLE",
                      "productUsageType": "UNKNOWN",
                      "productCode": "VISA",
                      "productName": "VISA"
                    }
                  },
                  "threeDSecureAuthentication": {
                    "responseCode": "NOT_PERFORMED",
                    "reasonCode": "GATEWAY_UNAVAILABLE"
                  }
                },
                "processor": {
                  "name": "STRIPE",
                  "amountCaptured": 0,
                  "amountRefunded": 0
                },
                "requiredAction": {
                  "name": "3DS_AUTHENTICATION",
                  "description": "string"
                },
                "statusReason": {
                  "type": "APPLICATION_ERROR",
                  "declineType": "SOFT_DECLINE",
                  "code": "ERROR"
                },
                "transactions": [
                  {
                    "processorMerchantId": "acct_stripe_1234",
                    "transactionType": "SALE",
                    "processorTransactionId": "54c4eb5b3ef8a",
                    "processorName": "STRIPE",
                    "processorStatus": "AUTHORIZED",
                    "processorStatusReason": {
                      "type": "APPLICATION_ERROR",
                      "declineType": "SOFT_DECLINE",
                      "code": "ERROR"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/payments/string \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payments/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.sandbox.primer.io/payments/:id \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post": {
        "id": "subpackage_paymentMethodsApi.vault_payment_method_payment_methods__token__vault_post",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "<p/>\n\nSave a `SINGLE_USE` payment method token so it can be used again later.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "token"
          },
          {
            "type": "literal",
            "value": "/vault"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Payment method token to store."
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "customerId",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "description": "The ID representing the customer"
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:MerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_twenty_two_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string/vault",
            "responseStatusCode": 200,
            "pathParameters": {
              "token": "string"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodType": "PAYMENT_CARD",
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "accountFundingType": "CREDIT"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/string/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:token/vault",
            "responseStatusCode": 422,
            "pathParameters": {
              "token": ":token"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "customerId": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:token/vault \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"customerId\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get": {
        "id": "subpackage_paymentMethodsApi.get_payment_methods_payment_methods_get",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Retrieve a list of stored payment methods for a customer.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "queryParameters": [
          {
            "key": "customer_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Return payment methods for this customer ID."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:MerchantPaymentMethodTokenListApiResponse"
            }
          }
        },
        "examples": [
          {
            "path": "/payment-instruments",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "customer_id": "string"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "paymentMethodType": "PAYMENT_CARD",
                    "paymentMethodData": {
                      "last4Digits": "string",
                      "expirationMonth": "string",
                      "expirationYear": "string",
                      "accountFundingType": "CREDIT"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.sandbox.primer.io/payment-instruments \\\n     -H \"X-API-KEY: <apiKey>\" \\\n     -d customer_id=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete": {
        "id": "subpackage_paymentMethodsApi.delete_payment_method_payment_methods__token__delete",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Delete a saved payment method.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "token"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Saved payment method token to delete."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:MerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string",
            "responseStatusCode": 200,
            "pathParameters": {
              "token": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodType": "PAYMENT_CARD",
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "accountFundingType": "CREDIT"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.sandbox.primer.io/payment-instruments/string \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:token",
            "responseStatusCode": 400,
            "pathParameters": {
              "token": ":token"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.sandbox.primer.io/payment-instruments/:token \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post": {
        "id": "subpackage_paymentMethodsApi.set_payment_method_default_payment_methods__token__default_post",
        "namespace": [
          "subpackage_paymentMethodsApi"
        ],
        "description": "Update a saved payment method to be the default stored payment method for a customer.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/payment-instruments/"
          },
          {
            "type": "pathParameter",
            "value": "token"
          },
          {
            "type": "literal",
            "value": "/default"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.sandbox.primer.io"
          }
        ],
        "pathParameters": [
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "Saved payment method token to set to default."
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:MerchantPaymentMethodTokenApiResponse"
            }
          }
        },
        "errors": [
          {
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:four_hundred_ErrorResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/payment-instruments/string/default",
            "responseStatusCode": 200,
            "pathParameters": {
              "token": "string"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "paymentMethodType": "PAYMENT_CARD",
                "paymentMethodData": {
                  "last4Digits": "string",
                  "expirationMonth": "string",
                  "expirationYear": "string",
                  "accountFundingType": "CREDIT"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/string/default \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/payment-instruments/:token/default",
            "responseStatusCode": 400,
            "pathParameters": {
              "token": ":token"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "errorId": "string",
                "description": "string",
                "recoverySuggestion": "string",
                "diagnosticsId": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.sandbox.primer.io/payment-instruments/:token/default \\\n     -H \"X-API-KEY: <apiKey>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_:AccountFundingTypeEnum": {
        "name": "AccountFundingTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CREDIT"
            },
            {
              "value": "DEBIT"
            },
            {
              "value": "PREPAID"
            },
            {
              "value": "CHARGE"
            },
            {
              "value": "DEFERRED_DEBIT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ApayaCustomerTokenApiSchema": {
        "name": "ApayaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "mx",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "mnc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mcc",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BinDataOptionalApiSchema": {
        "name": "BinDataOptionalApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CardNetworkEnum"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BinDataApiSchema": {
        "name": "BinDataApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardNetworkEnum"
                }
              }
            },
            {
              "key": "issuerCountryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "issuerName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuerCurrencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Currency"
                    }
                  }
                }
              }
            },
            {
              "key": "regionalRestriction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardRegionRestrictionEnum"
                }
              }
            },
            {
              "key": "accountNumberType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardAccountNumberTypeEnum"
                }
              }
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:AccountFundingTypeEnum"
                }
              }
            },
            {
              "key": "prepaidReloadableIndicator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PrepaidReloadableEnum"
                }
              }
            },
            {
              "key": "productUsageType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CardProductTypeEnum"
                }
              }
            },
            {
              "key": "productCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "productName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BlockingPaymentActionTypeEnum": {
        "name": "BlockingPaymentActionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "3DS_AUTHENTICATION"
            },
            {
              "value": "USE_PRIMER_SDK"
            }
          ]
        }
      },
      "type_:CardAccountNumberTypeEnum": {
        "name": "CardAccountNumberTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PRIMARY_ACCOUNT_NUMBER"
            },
            {
              "value": "NETWORK_TOKEN"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardNetworkEnum": {
        "name": "CardNetworkEnum",
        "description": "The list of available card networks.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AMEX"
            },
            {
              "value": "DANKORT"
            },
            {
              "value": "DINERS_CLUB"
            },
            {
              "value": "DISCOVER"
            },
            {
              "value": "ENROUTE"
            },
            {
              "value": "ELO"
            },
            {
              "value": "HIPER"
            },
            {
              "value": "INTERAC"
            },
            {
              "value": "JCB"
            },
            {
              "value": "MAESTRO"
            },
            {
              "value": "MASTERCARD"
            },
            {
              "value": "MIR"
            },
            {
              "value": "PRIVATE_LABEL"
            },
            {
              "value": "UNIONPAY"
            },
            {
              "value": "VISA"
            },
            {
              "value": "OTHER"
            }
          ]
        }
      },
      "type_:CardProductTypeEnum": {
        "name": "CardProductTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "CONSUMER"
            },
            {
              "value": "BUSINESS"
            },
            {
              "value": "GOVERNMENT"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:CardRegionRestrictionEnum": {
        "name": "CardRegionRestrictionEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "DOMESTIC_USE_ONLY"
            },
            {
              "value": "NONE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:ClientSessionUpdateApiRequest": {
        "name": "ClientSessionUpdateApiRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your customer."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the order."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you would like to charge the customer, in minor units. e.g. for $7, use `700`."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle.\n\nProvide the entire object to update it. Anything provided previously will be overwritten."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutCustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order.\n\nEach of the fields in this object must be updated in its entirety, i.e. provide the entire object to update it. Anything provided previously will be overwritten."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "Enable certain options associated with the payment method. Provide the entire object to update it. Anything provided previously will be overwritten."
            }
          ]
        }
      },
      "type_:OrderDetailsApiSchema": {
        "name": "OrderDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              },
              "description": "The country in which the order is created"
            },
            {
              "key": "fees",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:OrderFeesApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The details of fees charged."
            },
            {
              "key": "lineItems",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:OrderLineItemsApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "The details of the line items of the order."
            },
            {
              "key": "shipping",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderShippingApiSchema"
                    }
                  }
                }
              },
              "description": "The details of shipping charged."
            }
          ]
        }
      },
      "type_:OrderFeesApiSchema": {
        "name": "OrderFeesApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The fee amount charged to the customer, in minor units. e.g. for $7, use `700`."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of fee."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the fee, e.g. \"Currency Conversion Fee\"."
            }
          ]
        }
      },
      "type_:OrderLineItemsApiSchema": {
        "name": "OrderLineItemsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "itemId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A unique identifier for the line item."
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "A description of the item."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The amount charged to the customer, in minor units. The minimum amount is 0."
            },
            {
              "key": "discountAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Any discount applicable to this item, in minor units."
            },
            {
              "key": "quantity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The number of the particular line item that is being ordered."
            },
            {
              "key": "taxAmount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The tax charged on this item (if known), in minor units."
            },
            {
              "key": "taxCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The tax code associated with this item, in minor units. This is required for Primer-initiated tax calculations."
            },
            {
              "key": "productType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ProductTypeEnum"
                    }
                  }
                }
              },
              "description": "An identifier for the product type."
            }
          ]
        }
      },
      "type_:OrderShippingApiSchema": {
        "name": "OrderShippingApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The shipping amount charged to the customer, in minor units. e.g. for $7, use `700`."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionsApiSchemaOptions": {
        "name": "CheckoutPaymentMethodOptionsApiSchemaOptions",
        "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "<PAYMENT_METHOD_TYPE>",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "PAYMENT_CARD",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodCardOptionApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionsApiSchema": {
        "name": "CheckoutPaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "vaultOnSuccess",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted on a successful payment or not."
            },
            {
              "key": "options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchemaOptions"
                    }
                  }
                }
              },
              "description": "Additional options for the payment methods represented as dictionary\nwith key of [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) and value of corresponding options."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionApiSchema": {
        "name": "CheckoutPaymentMethodOptionApiSchema",
        "description": "Options for the payment method of type `PAYMENT_METHOD_TYPE`.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "surcharge",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                }
              },
              "description": "Surcharge information"
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodCardOptionApiSchema": {
        "name": "CheckoutPaymentMethodCardOptionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "networks",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema"
                    }
                  }
                }
              },
              "description": "Dictionary of available card networks as a key with value of Payment Method Card Network Option."
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionCardNetworkApiSchema": {
        "name": "CheckoutPaymentMethodOptionCardNetworkApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "AMEX",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DANKORT",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DINERS_CLUB",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "DISCOVER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "ENROUTE",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "ELO",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "HIPER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "INTERAC",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "JCB",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MAESTRO",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MASTERCARD",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "MIR",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "PRIVATE_LABEL",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "UNIONPAY",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "VISA",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "OTHER",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema": {
        "name": "CheckoutPaymentMethodOptionCardNetworkSurchargeApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "surcharge",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionSurchargeApiSchema"
                    }
                  }
                }
              },
              "description": "Surcharge information"
            }
          ]
        }
      },
      "type_:CheckoutPaymentMethodOptionSurchargeApiSchema": {
        "name": "CheckoutPaymentMethodOptionSurchargeApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The surcharge amount, in minor units. Surcharge amount must be used in conjunction with line item amounts, if a top level amount is passed then surcharge will not be calculated."
            }
          ]
        }
      },
      "type_:PaymentRequestPaymentMethodOptionsApiSchema": {
        "name": "PaymentRequestPaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "vaultOnSuccess",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether the payment method should be vaulted on a successful payment or not."
            },
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RecurringTransactionTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment types, primarily to be used for recurring payments.\nNote: If you successfully vault a `SINGLE_USE` token on payment creation, then there's no need to set a value for this field and it will be flagged as `FIRST_PAYMENT`. Otherwise, see the table below for all possible values.\n\n| paymentType     | Use case                                                                                                                       |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `FIRST_PAYMENT` | a customer-initiated payment which is the first in a series of recurring payments or subscription, or a card on file scenario. |\n| `ECOMMERCE`     | a customer-initiated payment using stored payment details where the cardholder is present.                                     |\n| `SUBSCRIPTION`  | a merchant-initiated payment as part of a series of payments on a fixed schedule and a set amount.                             |\n| `UNSCHEDULED`   | a merchant-initiated payment using stored payment details with no fixed schedule or amount.                                    |"
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Order Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalOrderTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Payment Session Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaPaymentSessionApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Ideal Pay Nl Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:IdealPayNlTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:PaymentResponsePaymentMethodOptionsApiSchema": {
        "name": "PaymentResponsePaymentMethodOptionsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "descriptor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The description of the payment, as it would typically appear on a bank statement."
            },
            {
              "key": "paymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment method token used to authorize the transaction."
            },
            {
              "key": "vaultedPaymentMethodToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "If the payment method token was vaulted, this is the new token. Use this token for recurring payments."
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type"
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchemaPaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "threeDSecureAuthentication",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CheckoutCustomerDetailsApiSchema": {
        "name": "CheckoutCustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address."
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address."
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      },
      "type_:CustomerDetailsApiSchema": {
        "name": "CustomerDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "emailAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Customer email address.\n\nNote: It is recommended to include this field if a 3DS check will be performed"
            },
            {
              "key": "mobileNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's mobile number"
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's first name"
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's last name"
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer billing address.\n\nNote: It is recommended to include this field if a 3DS check will be performed"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema"
                    }
                  }
                }
              },
              "description": "Customer shipping address"
            },
            {
              "key": "taxId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's tax id number for tax exemptions"
            },
            {
              "key": "nationalDocumentId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The customer's national identification number"
            }
          ]
        }
      },
      "type_:ClientSessionApiResponse": {
        "name": "ClientSessionApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "clientToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Client token used to initialize the SDK on all platforms."
            },
            {
              "key": "clientTokenExpirationDate",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Expiration date & time of the client token (UTC with no timezoneinfo)."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you are going to charge the customer, in minor units. This amount is calculated from the line items, shipping and other amounts provided in the `order`.\nIf a top-level amount is provided, it would override any calculated amount."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique identifier for your customer."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CheckoutPaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "Enable certain options associated with the payment methods."
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ClientSessionWarningsApiResponse"
                    }
                  }
                }
              },
              "description": "Warning messages to indicate missing information that are required for payment methods, checkout modules and other features; or when third-party services are unavailable."
            }
          ]
        }
      },
      "type_:ClientSessionWarningsApiResponse": {
        "name": "ClientSessionWarningsApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The type of the connection involved"
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A unique code describing the particular issue"
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "More information as to the reason for the warning"
            }
          ]
        }
      },
      "type_:CountryCodeEnum": {
        "name": "CountryCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AW"
            },
            {
              "value": "AF"
            },
            {
              "value": "AO"
            },
            {
              "value": "AI"
            },
            {
              "value": "AX"
            },
            {
              "value": "AL"
            },
            {
              "value": "AD"
            },
            {
              "value": "AE"
            },
            {
              "value": "AR"
            },
            {
              "value": "AM"
            },
            {
              "value": "AS"
            },
            {
              "value": "AQ"
            },
            {
              "value": "TF"
            },
            {
              "value": "AG"
            },
            {
              "value": "AU"
            },
            {
              "value": "AT"
            },
            {
              "value": "AZ"
            },
            {
              "value": "BI"
            },
            {
              "value": "BE"
            },
            {
              "value": "BJ"
            },
            {
              "value": "BQ"
            },
            {
              "value": "BF"
            },
            {
              "value": "BD"
            },
            {
              "value": "BG"
            },
            {
              "value": "BH"
            },
            {
              "value": "BS"
            },
            {
              "value": "BA"
            },
            {
              "value": "BL"
            },
            {
              "value": "BY"
            },
            {
              "value": "BZ"
            },
            {
              "value": "BM"
            },
            {
              "value": "BO"
            },
            {
              "value": "BR"
            },
            {
              "value": "BB"
            },
            {
              "value": "BN"
            },
            {
              "value": "BT"
            },
            {
              "value": "BV"
            },
            {
              "value": "BW"
            },
            {
              "value": "CF"
            },
            {
              "value": "CA"
            },
            {
              "value": "CC"
            },
            {
              "value": "CH"
            },
            {
              "value": "CL"
            },
            {
              "value": "CN"
            },
            {
              "value": "CI"
            },
            {
              "value": "CM"
            },
            {
              "value": "CD"
            },
            {
              "value": "CG"
            },
            {
              "value": "CK"
            },
            {
              "value": "CO"
            },
            {
              "value": "KM"
            },
            {
              "value": "CV"
            },
            {
              "value": "CR"
            },
            {
              "value": "CU"
            },
            {
              "value": "CW"
            },
            {
              "value": "CX"
            },
            {
              "value": "KY"
            },
            {
              "value": "CY"
            },
            {
              "value": "CZ"
            },
            {
              "value": "DE"
            },
            {
              "value": "DJ"
            },
            {
              "value": "DM"
            },
            {
              "value": "DK"
            },
            {
              "value": "DO"
            },
            {
              "value": "DZ"
            },
            {
              "value": "EC"
            },
            {
              "value": "EG"
            },
            {
              "value": "ER"
            },
            {
              "value": "EH"
            },
            {
              "value": "ES"
            },
            {
              "value": "EE"
            },
            {
              "value": "ET"
            },
            {
              "value": "FI"
            },
            {
              "value": "FJ"
            },
            {
              "value": "FK"
            },
            {
              "value": "FR"
            },
            {
              "value": "FO"
            },
            {
              "value": "FM"
            },
            {
              "value": "GA"
            },
            {
              "value": "GB"
            },
            {
              "value": "GE"
            },
            {
              "value": "GG"
            },
            {
              "value": "GH"
            },
            {
              "value": "GI"
            },
            {
              "value": "GN"
            },
            {
              "value": "GP"
            },
            {
              "value": "GM"
            },
            {
              "value": "GW"
            },
            {
              "value": "GQ"
            },
            {
              "value": "GR"
            },
            {
              "value": "GD"
            },
            {
              "value": "GL"
            },
            {
              "value": "GT"
            },
            {
              "value": "GF"
            },
            {
              "value": "GU"
            },
            {
              "value": "GY"
            },
            {
              "value": "HK"
            },
            {
              "value": "HM"
            },
            {
              "value": "HN"
            },
            {
              "value": "HR"
            },
            {
              "value": "HT"
            },
            {
              "value": "HU"
            },
            {
              "value": "ID"
            },
            {
              "value": "IM"
            },
            {
              "value": "IN"
            },
            {
              "value": "IO"
            },
            {
              "value": "IE"
            },
            {
              "value": "IR"
            },
            {
              "value": "IQ"
            },
            {
              "value": "IS"
            },
            {
              "value": "IL"
            },
            {
              "value": "IT"
            },
            {
              "value": "JM"
            },
            {
              "value": "JE"
            },
            {
              "value": "JO"
            },
            {
              "value": "JP"
            },
            {
              "value": "KZ"
            },
            {
              "value": "KE"
            },
            {
              "value": "KG"
            },
            {
              "value": "KH"
            },
            {
              "value": "KI"
            },
            {
              "value": "KN"
            },
            {
              "value": "KR"
            },
            {
              "value": "KW"
            },
            {
              "value": "LA"
            },
            {
              "value": "LB"
            },
            {
              "value": "LR"
            },
            {
              "value": "LY"
            },
            {
              "value": "LC"
            },
            {
              "value": "LI"
            },
            {
              "value": "LK"
            },
            {
              "value": "LS"
            },
            {
              "value": "LT"
            },
            {
              "value": "LU"
            },
            {
              "value": "LV"
            },
            {
              "value": "MO"
            },
            {
              "value": "MF"
            },
            {
              "value": "MA"
            },
            {
              "value": "MC"
            },
            {
              "value": "MD"
            },
            {
              "value": "MG"
            },
            {
              "value": "MV"
            },
            {
              "value": "MX"
            },
            {
              "value": "MH"
            },
            {
              "value": "MK"
            },
            {
              "value": "ML"
            },
            {
              "value": "MT"
            },
            {
              "value": "MM"
            },
            {
              "value": "ME"
            },
            {
              "value": "MN"
            },
            {
              "value": "MP"
            },
            {
              "value": "MZ"
            },
            {
              "value": "MR"
            },
            {
              "value": "MS"
            },
            {
              "value": "MQ"
            },
            {
              "value": "MU"
            },
            {
              "value": "MW"
            },
            {
              "value": "MY"
            },
            {
              "value": "YT"
            },
            {
              "value": "NA"
            },
            {
              "value": "NC"
            },
            {
              "value": "NE"
            },
            {
              "value": "NF"
            },
            {
              "value": "NG"
            },
            {
              "value": "NI"
            },
            {
              "value": "NU"
            },
            {
              "value": "NL"
            },
            {
              "value": "NO"
            },
            {
              "value": "NP"
            },
            {
              "value": "NR"
            },
            {
              "value": "NZ"
            },
            {
              "value": "OM"
            },
            {
              "value": "PK"
            },
            {
              "value": "PA"
            },
            {
              "value": "PN"
            },
            {
              "value": "PE"
            },
            {
              "value": "PH"
            },
            {
              "value": "PW"
            },
            {
              "value": "PG"
            },
            {
              "value": "PL"
            },
            {
              "value": "PR"
            },
            {
              "value": "KP"
            },
            {
              "value": "PT"
            },
            {
              "value": "PY"
            },
            {
              "value": "PS"
            },
            {
              "value": "PF"
            },
            {
              "value": "QA"
            },
            {
              "value": "RE"
            },
            {
              "value": "RO"
            },
            {
              "value": "RU"
            },
            {
              "value": "RW"
            },
            {
              "value": "SA"
            },
            {
              "value": "SD"
            },
            {
              "value": "SN"
            },
            {
              "value": "SG"
            },
            {
              "value": "GS"
            },
            {
              "value": "SH"
            },
            {
              "value": "SJ"
            },
            {
              "value": "SB"
            },
            {
              "value": "SL"
            },
            {
              "value": "SV"
            },
            {
              "value": "SM"
            },
            {
              "value": "SO"
            },
            {
              "value": "PM"
            },
            {
              "value": "RS"
            },
            {
              "value": "SS"
            },
            {
              "value": "ST"
            },
            {
              "value": "SR"
            },
            {
              "value": "SK"
            },
            {
              "value": "SI"
            },
            {
              "value": "SE"
            },
            {
              "value": "SZ"
            },
            {
              "value": "SX"
            },
            {
              "value": "SC"
            },
            {
              "value": "SY"
            },
            {
              "value": "TC"
            },
            {
              "value": "TD"
            },
            {
              "value": "TG"
            },
            {
              "value": "TH"
            },
            {
              "value": "TJ"
            },
            {
              "value": "TK"
            },
            {
              "value": "TM"
            },
            {
              "value": "TL"
            },
            {
              "value": "TO"
            },
            {
              "value": "TT"
            },
            {
              "value": "TN"
            },
            {
              "value": "TR"
            },
            {
              "value": "TV"
            },
            {
              "value": "TW"
            },
            {
              "value": "TZ"
            },
            {
              "value": "UG"
            },
            {
              "value": "UA"
            },
            {
              "value": "UM"
            },
            {
              "value": "UY"
            },
            {
              "value": "US"
            },
            {
              "value": "UZ"
            },
            {
              "value": "VA"
            },
            {
              "value": "VC"
            },
            {
              "value": "VE"
            },
            {
              "value": "VG"
            },
            {
              "value": "VI"
            },
            {
              "value": "VN"
            },
            {
              "value": "VU"
            },
            {
              "value": "WF"
            },
            {
              "value": "WS"
            },
            {
              "value": "YE"
            },
            {
              "value": "ZA"
            },
            {
              "value": "ZM"
            },
            {
              "value": "ZW"
            }
          ]
        }
      },
      "type_:Currency": {
        "name": "Currency",
        "description": "Enumerates all supported currencies",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "AED"
            },
            {
              "value": "AFN"
            },
            {
              "value": "ALL"
            },
            {
              "value": "AMD"
            },
            {
              "value": "ANG"
            },
            {
              "value": "AOA"
            },
            {
              "value": "ARS"
            },
            {
              "value": "AUD"
            },
            {
              "value": "AWG"
            },
            {
              "value": "AZN"
            },
            {
              "value": "BAM"
            },
            {
              "value": "BBD"
            },
            {
              "value": "BDT"
            },
            {
              "value": "BGN"
            },
            {
              "value": "BHD"
            },
            {
              "value": "BIF"
            },
            {
              "value": "BMD"
            },
            {
              "value": "BND"
            },
            {
              "value": "BOB"
            },
            {
              "value": "BOV"
            },
            {
              "value": "BRL"
            },
            {
              "value": "BSD"
            },
            {
              "value": "BTN"
            },
            {
              "value": "BWP"
            },
            {
              "value": "BYR"
            },
            {
              "value": "BYN"
            },
            {
              "value": "BZD"
            },
            {
              "value": "CAD"
            },
            {
              "value": "CDF"
            },
            {
              "value": "CHE"
            },
            {
              "value": "CHF"
            },
            {
              "value": "CHW"
            },
            {
              "value": "CLF"
            },
            {
              "value": "CLP"
            },
            {
              "value": "CNY"
            },
            {
              "value": "COP"
            },
            {
              "value": "COU"
            },
            {
              "value": "CRC"
            },
            {
              "value": "CUC"
            },
            {
              "value": "CUP"
            },
            {
              "value": "CVE"
            },
            {
              "value": "CZK"
            },
            {
              "value": "DJF"
            },
            {
              "value": "DKK"
            },
            {
              "value": "DOP"
            },
            {
              "value": "DZD"
            },
            {
              "value": "EGP"
            },
            {
              "value": "ERN"
            },
            {
              "value": "ETB"
            },
            {
              "value": "EUR"
            },
            {
              "value": "FJD"
            },
            {
              "value": "FKP"
            },
            {
              "value": "GBP"
            },
            {
              "value": "GEL"
            },
            {
              "value": "GHS"
            },
            {
              "value": "GIP"
            },
            {
              "value": "GMD"
            },
            {
              "value": "GNF"
            },
            {
              "value": "GTQ"
            },
            {
              "value": "GYD"
            },
            {
              "value": "HKD"
            },
            {
              "value": "HNL"
            },
            {
              "value": "HRK"
            },
            {
              "value": "HTG"
            },
            {
              "value": "HUF"
            },
            {
              "value": "IDR"
            },
            {
              "value": "ILS"
            },
            {
              "value": "INR"
            },
            {
              "value": "IQD"
            },
            {
              "value": "IRR"
            },
            {
              "value": "ISK"
            },
            {
              "value": "JMD"
            },
            {
              "value": "JOD"
            },
            {
              "value": "JPY"
            },
            {
              "value": "KES"
            },
            {
              "value": "KGS"
            },
            {
              "value": "KHR"
            },
            {
              "value": "KMF"
            },
            {
              "value": "KPW"
            },
            {
              "value": "KRW"
            },
            {
              "value": "KWD"
            },
            {
              "value": "KYD"
            },
            {
              "value": "KZT"
            },
            {
              "value": "LAK"
            },
            {
              "value": "LBP"
            },
            {
              "value": "LKR"
            },
            {
              "value": "LRD"
            },
            {
              "value": "LSL"
            },
            {
              "value": "LTL"
            },
            {
              "value": "LVL"
            },
            {
              "value": "LYD"
            },
            {
              "value": "MAD"
            },
            {
              "value": "MDL"
            },
            {
              "value": "MGA"
            },
            {
              "value": "MKD"
            },
            {
              "value": "MMK"
            },
            {
              "value": "MNT"
            },
            {
              "value": "MOP"
            },
            {
              "value": "MRO"
            },
            {
              "value": "MUR"
            },
            {
              "value": "MVR"
            },
            {
              "value": "MWK"
            },
            {
              "value": "MXN"
            },
            {
              "value": "MXV"
            },
            {
              "value": "MYR"
            },
            {
              "value": "MZN"
            },
            {
              "value": "NAD"
            },
            {
              "value": "NGN"
            },
            {
              "value": "NIO"
            },
            {
              "value": "NOK"
            },
            {
              "value": "NPR"
            },
            {
              "value": "NZD"
            },
            {
              "value": "OMR"
            },
            {
              "value": "PAB"
            },
            {
              "value": "PEN"
            },
            {
              "value": "PGK"
            },
            {
              "value": "PHP"
            },
            {
              "value": "PKR"
            },
            {
              "value": "PLN"
            },
            {
              "value": "PYG"
            },
            {
              "value": "QAR"
            },
            {
              "value": "RON"
            },
            {
              "value": "RSD"
            },
            {
              "value": "RUB"
            },
            {
              "value": "RWF"
            },
            {
              "value": "SAR"
            },
            {
              "value": "SBD"
            },
            {
              "value": "SCR"
            },
            {
              "value": "SDG"
            },
            {
              "value": "SEK"
            },
            {
              "value": "SGD"
            },
            {
              "value": "SHP"
            },
            {
              "value": "SLL"
            },
            {
              "value": "SOS"
            },
            {
              "value": "SRD"
            },
            {
              "value": "SSP"
            },
            {
              "value": "STD"
            },
            {
              "value": "SVC"
            },
            {
              "value": "SYP"
            },
            {
              "value": "SZL"
            },
            {
              "value": "THB"
            },
            {
              "value": "TJS"
            },
            {
              "value": "TMT"
            },
            {
              "value": "TND"
            },
            {
              "value": "TOP"
            },
            {
              "value": "TRY"
            },
            {
              "value": "TTD"
            },
            {
              "value": "TWD"
            },
            {
              "value": "TZS"
            },
            {
              "value": "UAH"
            },
            {
              "value": "UGX"
            },
            {
              "value": "USD"
            },
            {
              "value": "USN"
            },
            {
              "value": "USS"
            },
            {
              "value": "UYI"
            },
            {
              "value": "UYU"
            },
            {
              "value": "UZS"
            },
            {
              "value": "VEF"
            },
            {
              "value": "VND"
            },
            {
              "value": "VUV"
            },
            {
              "value": "WST"
            },
            {
              "value": "XAF"
            },
            {
              "value": "XAG"
            },
            {
              "value": "XAU"
            },
            {
              "value": "XBA"
            },
            {
              "value": "XBB"
            },
            {
              "value": "XBC"
            },
            {
              "value": "XBD"
            },
            {
              "value": "XCD"
            },
            {
              "value": "XDR"
            },
            {
              "value": "XFU"
            },
            {
              "value": "XOF"
            },
            {
              "value": "XPD"
            },
            {
              "value": "XPF"
            },
            {
              "value": "XPT"
            },
            {
              "value": "XSU"
            },
            {
              "value": "XTS"
            },
            {
              "value": "XUA"
            },
            {
              "value": "YER"
            },
            {
              "value": "ZAR"
            },
            {
              "value": "ZMW"
            },
            {
              "value": "ZWL"
            }
          ]
        }
      },
      "type_:PaymentResponseProcessorApiSchema": {
        "name": "PaymentResponseProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            },
            {
              "key": "amountCaptured",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no capture was performed, this value will be set to `0`.\n\nIf one or more partial captures were performed, this value will be a sum\nof all partial capture amounts."
            },
            {
              "key": "amountRefunded",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "If no refund was performed, this value will be set to `0`.\n\nIf one or more partial refunds were performed, this value will be a sum\nof all partial refund amounts."
            }
          ]
        }
      },
      "type_:GoCardlessMandateApiSchema": {
        "name": "GoCardlessMandateApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "gocardlessMandateId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Unique identifier of a GoCardless mandate agreement"
            }
          ]
        }
      },
      "type_:IdealPayNlTokenApiSchema": {
        "name": "IdealPayNlTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paymentMethodConfigId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaAddressApiSchema": {
        "name": "KlarnaAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "title",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "phoneNumber",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine3",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaCustomerTokenApiSchema": {
        "name": "KlarnaCustomerTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaCustomerToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaPaymentSessionApiSchema": {
        "name": "KlarnaPaymentSessionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "klarnaAuthorizationToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "sessionData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaSessionDetailsApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaSessionDetailsApiSchema": {
        "name": "KlarnaSessionDetailsApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "recurringDescription",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "billingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaAddressApiSchema"
                }
              }
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaAddressApiSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "purchaseCountry",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "purchaseCurrency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "locale",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "orderLines",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "tokenDetails",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:KlarnaTokenDetails"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:KlarnaTokenDetails": {
        "name": "KlarnaTokenDetails",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "brand",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "masked_number",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "expiry_date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalBillingAgreementApiSchema": {
        "name": "PayPalBillingAgreementApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalBillingAgreementId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "shippingAddress",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AddressApiSchema"
                    }
                  }
                }
              },
              "description": "The PayPal customer's shipping address"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalExternalPayerInfoApiSchema": {
        "name": "PayPalExternalPayerInfoApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "externalPayerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PayPalOrderTokenApiSchema": {
        "name": "PayPalOrderTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "paypalOrderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "externalPayerInfo",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PayPalExternalPayerInfoApiSchema"
                    }
                  }
                }
              },
              "description": "Information about the PayPal customer"
            },
            {
              "key": "paypalStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentApiResponse": {
        "name": "PaymentApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "The amount you charged the customer, in minor units."
            },
            {
              "key": "order",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:OrderDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the order."
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The unique identifier for your customer."
            },
            {
              "key": "customer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CustomerDetailsApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the customer."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle."
            },
            {
              "key": "paymentMethod",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponsePaymentMethodOptionsApiSchema"
                    }
                  }
                }
              },
              "description": "The payment method options provided in the request, as well as the token used to process the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentResponseProcessorApiSchema"
                    }
                  }
                }
              },
              "description": "More information associated with the payment processor, including the processor name."
            },
            {
              "key": "requiredAction",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentRequiredActionApiSchema"
                    }
                  }
                }
              },
              "description": "Required action to perform in order to resume the payment workflow. This can be requiring a 3DS check from the customer for instance."
            },
            {
              "key": "statusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "Check this field for more information regarding the payment's status. This is especially useful when the status is `DECLINED` or `FAILED`."
            },
            {
              "key": "transactions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TransactionOverviewApiSchema"
                        }
                      }
                    }
                  }
                }
              },
              "description": "A list summarizing the transactions that occurred while processing the payment.\n\nNote: a refund is a separate transaction and so will appear in this `transactions` list if a refund was performed."
            }
          ]
        }
      },
      "type_:PaymentCardTokenApiSchema": {
        "name": "PaymentCardTokenApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "first6Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last4Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cardholderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "isNetworkTokenized",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "binData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BinDataApiSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StatusReasonApiSchema": {
        "name": "StatusReasonApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatusTypeEnum"
                }
              },
              "description": "Type of the status."
            },
            {
              "key": "declineType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:DeclineTypeEnum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED` this will be returned.\n\nDeclines of type `SOFT_DECLINE` may be retried,\nwhereas declines of type `HARD_DECLINE` should not be retried."
            },
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionDeclineReasonV2Enum"
                    }
                  }
                }
              },
              "description": "If the error is of type `ISSUER_DECLINED`, this will be returned."
            },
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "In case of an error on the processor's part, we will return the message returned by the processor. This is usually a human readable error."
            }
          ]
        }
      },
      "type_:PaymentMethodTypeEnum": {
        "name": "PaymentMethodTypeEnum",
        "description": "Payment method type, where `OFF_SESSION_PAYMENT` is used for APM (Alternative Payment Method) payments and `PAYMENT_CARD` for traditional debit or credit cards. Please note that this list is different from one indicated on [available payment methods](https://primer.io/docs/payment-methods/available-payment-methods) page and values of this field will be changed in the future versions of the API.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PAYMENT_CARD"
            },
            {
              "value": "PAYPAL_ORDER"
            },
            {
              "value": "PAYPAL_BILLING_AGREEMENT"
            },
            {
              "value": "GOCARDLESS_MANDATE"
            },
            {
              "value": "KLARNA_AUTHORIZATION_TOKEN"
            },
            {
              "value": "KLARNA_CUSTOMER_TOKEN"
            },
            {
              "value": "PAY_NL_IDEAL"
            },
            {
              "value": "APAYA"
            },
            {
              "value": "OFF_SESSION_PAYMENT"
            },
            {
              "value": "CARD_OFF_SESSION_PAYMENT"
            },
            {
              "value": "APPLE_PAY"
            },
            {
              "value": "APPLE_PAY_ENCRYPTED_TOKEN"
            },
            {
              "value": "GOOGLE_PAY"
            }
          ]
        }
      },
      "type_:PaymentListApiResponse": {
        "name": "PaymentListApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PaymentSummaryApiSchema"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "nextCursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "prevCursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentRequiredActionApiSchema": {
        "name": "PaymentRequiredActionApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BlockingPaymentActionTypeEnum"
                }
              },
              "description": "Action name"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human description of the required action to perform."
            },
            {
              "key": "clientToken",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The client token to be returned to the SDK if a required action is returned."
            }
          ]
        }
      },
      "type_:PaymentSummaryApiSchema": {
        "name": "PaymentSummaryApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique payment ID.\n\nYou can use this ID to retrieve the payment details, or perform downstream\noperations."
            },
            {
              "key": "date",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "datetime"
                  }
                }
              },
              "description": "The date and time at which the payment was created in UTC format."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentStatus"
                }
              },
              "description": "See the payment [status table](../docs#payment-status) for more information."
            },
            {
              "key": "orderId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Your reference for the payment."
            },
            {
              "key": "processor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "currencyCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The three-letter currency code in [ISO 4217 format](https://en.wikipedia.org/wiki/ISO_4217#Active_codes). e.g. use `USD` for US dollars."
            },
            {
              "key": "amount",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              },
              "description": "The payment amount, in minor units. e.g. $7 would show as `700`."
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Additional data to be used throughout the payment lifecycle.\n\nA dictionary of key-value pairs where the values can only be strings or\nintegers.\n\ne.g. `{\"productId\": 1001, \"merchantId\": \"a13bsd62s\"}`"
            }
          ]
        }
      },
      "type_:PaymentSummaryProcessorApiSchema": {
        "name": "PaymentSummaryProcessorApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The payment processor used for this payment."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The merchant ID registered at the payment processor used for this payment."
            }
          ]
        }
      },
      "type_:PrepaidReloadableEnum": {
        "name": "PrepaidReloadableEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "RELOADABLE"
            },
            {
              "value": "NON_RELOADABLE"
            },
            {
              "value": "NOT_APPLICABLE"
            },
            {
              "value": "UNKNOWN"
            }
          ]
        }
      },
      "type_:RecurringTransactionTypeEnum": {
        "name": "RecurringTransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "FIRST_PAYMENT"
            },
            {
              "value": "ECOMMERCE"
            },
            {
              "value": "SUBSCRIPTION"
            },
            {
              "value": "UNSCHEDULED"
            }
          ]
        }
      },
      "type_:ProductTypeEnum": {
        "name": "ProductTypeEnum",
        "description": "An enumeration",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PHYSICAL"
            },
            {
              "value": "DIGITAL"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthResponseCodeEnum": {
        "name": "ThreeDSecureAuthResponseCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "NOT_PERFORMED"
            },
            {
              "value": "SKIPPED"
            },
            {
              "value": "AUTH_SUCCESS"
            },
            {
              "value": "AUTH_FAILED"
            },
            {
              "value": "CHALLENGE"
            },
            {
              "value": "METHOD"
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchemaReasonCode": {
        "name": "ThreeDSecureAuthenticationApiSchemaReasonCode",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Three D Secure Skipped Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureSkippedReasonCodeEnum"
                }
              }
            },
            {
              "displayName": "Three D Secure Failed Reason Code Enum",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureFailedReasonCodeEnum"
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureAuthenticationApiSchema": {
        "name": "ThreeDSecureAuthenticationApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "responseCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ThreeDSecureAuthResponseCodeEnum"
                }
              }
            },
            {
              "key": "reasonCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ThreeDSecureAuthenticationApiSchemaReasonCode"
                    }
                  }
                }
              }
            },
            {
              "key": "reasonText",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "protocolVersion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "challengeIssued",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ThreeDSecureFailedReasonCodeEnum": {
        "name": "ThreeDSecureFailedReasonCodeEnum",
        "description": "This enum is derived from the `transStatusReason` on page 218 of the\n[EMV Co 3DS protocol specification](https://www.emvco.com/terms-of-use/?u=/wp-content/uploads/documents/EMVCo_3DS_Spec_v220_122018.pdf)\n\n| Code | Description                             |\n| ---- | --------------------------------------- |\n| 01   | Card authentication failed              |\n| 02   | Unknown Device                          |\n| 03   | Unsupported Device                      |\n| 04   | Exceeds authentication frequency limit  |\n| 05   | Expired card                            |\n| 06   | Invalid card number                     |\n| 07   | Invalid transaction                     |\n| 08   | No Card record                          |\n| 09   | Security failure                        |\n| 10   | Stolen card                             |\n| 11   | Suspected fraud                         |\n| 12   | Transaction not permitted to cardholder |\n| 13   | Cardholder not enrolled in service      |\n| 14   | Transaction timed out at the ACS        |\n| 15   | Low confidence                          |\n| 16   | Medium confidence                       |",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "UNKNOWN"
            },
            {
              "value": "REJECTED_BY_ISSUER"
            },
            {
              "value": "CARD_AUTHENTICATION_FAILED"
            },
            {
              "value": "UNKNOWN_DEVICE"
            },
            {
              "value": "UNSUPPORTED_DEVICE"
            },
            {
              "value": "EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "INVALID_TRANSACTION"
            },
            {
              "value": "NO_CARD_RECORD"
            },
            {
              "value": "SECURITY_FAILURE"
            },
            {
              "value": "STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER"
            },
            {
              "value": "CARDHOLDER_NOT_ENROLLED_IN_SERVICE"
            },
            {
              "value": "TRANSACTION_TIMED_OUT_AT_THE_ACS"
            },
            {
              "value": "LOW_CONFIDENCE"
            },
            {
              "value": "MEDIUM_CONFIDENCE"
            },
            {
              "value": "HIGH_CONFIDENCE"
            },
            {
              "value": "VERY_HIGH_CONFIDENCE"
            },
            {
              "value": "EXCEEDS_ACS_MAXIMUM_CHALLENGES"
            },
            {
              "value": "NON_PAYMENT_NOT_SUPPORTED"
            },
            {
              "value": "THREE_RI_NOT_SUPPORTED"
            },
            {
              "value": "ACS_TECHNICAL_ISSUE"
            },
            {
              "value": "DECOUPLED_REQUIRED_BY_ACS"
            },
            {
              "value": "DECOUPLED_MAX_EXPIRY_EXCEEDED"
            },
            {
              "value": "DECOUPLED_AUTHENTICATION_INSUFFICIENT_TIME"
            },
            {
              "value": "AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED_BY_CARDHOLDER"
            },
            {
              "value": "ACS_TIMED_OUT"
            },
            {
              "value": "INVALID_ACS_RESPONSE"
            },
            {
              "value": "ACS_SYSTEM_ERROR_RESPONSE"
            },
            {
              "value": "ERROR_GENERATING_CAVV"
            },
            {
              "value": "PROTOCOL_VERSION_NOT_SUPPORTED"
            },
            {
              "value": "TRANSACTION_EXCLUDED_FROM_ATTEMPTS_PROCESSING"
            },
            {
              "value": "REQUESTED_PROGRAM_NOT_SUPPORTED"
            }
          ]
        }
      },
      "type_:ThreeDSecureSkippedReasonCodeEnum": {
        "name": "ThreeDSecureSkippedReasonCodeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "GATEWAY_UNAVAILABLE"
            },
            {
              "value": "DISABLED_BY_MERCHANT"
            },
            {
              "value": "NOT_SUPPORTED_BY_ISSUER"
            },
            {
              "value": "FAILED_TO_NEGOTIATE"
            },
            {
              "value": "UNKNOWN_ACS_RESPONSE"
            },
            {
              "value": "3DS_SERVER_ERROR"
            },
            {
              "value": "ACQUIRER_NOT_CONFIGURED"
            },
            {
              "value": "ACQUIRER_NOT_PARTICIPATING"
            }
          ]
        }
      },
      "type_:TokenTypeEnum": {
        "name": "TokenTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "MULTI_USE"
            },
            {
              "value": "SINGLE_USE"
            }
          ]
        }
      },
      "type_:DeclineTypeEnum": {
        "name": "DeclineTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SOFT_DECLINE"
            },
            {
              "value": "HARD_DECLINE"
            }
          ]
        }
      },
      "type_:TransactionDeclineReasonV2Enum": {
        "name": "TransactionDeclineReasonV2Enum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "ERROR"
            },
            {
              "value": "INVALID_CARD_NUMBER"
            },
            {
              "value": "EXPIRED_CARD"
            },
            {
              "value": "LOST_OR_STOLEN_CARD"
            },
            {
              "value": "SUSPECTED_FRAUD"
            },
            {
              "value": "UNKNOWN"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "REFER_TO_CARD_ISSUER"
            },
            {
              "value": "DO_NOT_HONOR"
            },
            {
              "value": "INSUFFICIENT_FUNDS"
            },
            {
              "value": "WITHDRAWAL_LIMIT_EXCEEDED"
            },
            {
              "value": "ISSUER_TEMPORARILY_UNAVAILABLE"
            },
            {
              "value": "AUTHENTICATION_REQUIRED"
            }
          ]
        }
      },
      "type_:TransactionOverviewApiSchema": {
        "name": "TransactionOverviewApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "transactionType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TransactionTypeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "processorTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Processor's unique identifier for the transaction"
            },
            {
              "key": "processorName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An identifier of a processor."
            },
            {
              "key": "processorMerchantId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Processor's main account identifier.\n\n- Adyen: Account code\n- Braintree: Merchant ID\n- Stripe: Account ID\""
            },
            {
              "key": "processorStatus",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentStatus"
                    }
                  }
                }
              },
              "description": "Transaction status, please refer to the [Transaction Status Codes](#section/API-Usage-Guide/Payment-Status) table for more information"
            },
            {
              "key": "processorStatusReason",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StatusReasonApiSchema"
                    }
                  }
                }
              },
              "description": "If the transaction has a declined or failed status.\n\nOnly if the status is `DECLINED` or `FAILED`, otherwise `null`."
            }
          ]
        }
      },
      "type_:PaymentStatus": {
        "name": "PaymentStatus",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "PENDING"
            },
            {
              "value": "FAILED"
            },
            {
              "value": "AUTHORIZED"
            },
            {
              "value": "SETTLING"
            },
            {
              "value": "PARTIALLY_SETTLED"
            },
            {
              "value": "SETTLED"
            },
            {
              "value": "DECLINED"
            },
            {
              "value": "CANCELLED"
            }
          ]
        }
      },
      "type_:PaymentStatusTypeEnum": {
        "name": "PaymentStatusTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "APPLICATION_ERROR"
            },
            {
              "value": "GATEWAY_REJECTED"
            },
            {
              "value": "ISSUER_DECLINED"
            }
          ]
        }
      },
      "type_:TransactionTypeEnum": {
        "name": "TransactionTypeEnum",
        "description": "An enumeration.",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "SALE"
            },
            {
              "value": "REFUND"
            }
          ]
        }
      },
      "type_:CoreApiApiCommonsSchemasAddessAddressApiSchema": {
        "name": "CoreApiApiCommonsSchemasAddessAddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CountryCodeEnum"
                    }
                  }
                }
              }
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:AddressApiSchema": {
        "name": "AddressApiSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "firstName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "lastName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "addressLine1",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Street name, Company name or PO Box"
            },
            {
              "key": "addressLine2",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Apartment, Unit or Building number"
            },
            {
              "key": "city",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Name of the city, district, town or village"
            },
            {
              "key": "state",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "State, County or Province"
            },
            {
              "key": "countryCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:CountryCodeEnum"
                }
              },
              "description": "Two letter ISO country code"
            },
            {
              "key": "postalCode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Postal or ZIP code"
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData": {
        "name": "MerchantPaymentMethodTokenApiResponsePaymentMethodData",
        "description": "Payment method data",
        "shape": {
          "type": "undiscriminatedUnion",
          "variants": [
            {
              "displayName": "Payment Card Token Api Schema Payment Methods Api",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PaymentCardTokenApiSchemaPaymentMethodsApi"
                }
              }
            },
            {
              "displayName": "Pay Pal Billing Agreement Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:PayPalBillingAgreementApiSchema"
                }
              }
            },
            {
              "displayName": "Go Cardless Mandate Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:GoCardlessMandateApiSchema"
                }
              }
            },
            {
              "displayName": "Klarna Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:KlarnaCustomerTokenApiSchema"
                }
              }
            },
            {
              "displayName": "Apaya Customer Token Api Schema",
              "shape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ApayaCustomerTokenApiSchema"
                }
              }
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenApiResponse": {
        "name": "MerchantPaymentMethodTokenApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "createdAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Creation date & time of the object (UTC)"
            },
            {
              "key": "deletedAt",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              },
              "description": "Date & time when this object was revoked. (UTC)"
            },
            {
              "key": "deleted",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this object has been revoked."
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The vaulted payment method token."
            },
            {
              "key": "tokenType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "- `MULTI_USE` a vaulted token that can be re-used with subsequent payments"
            },
            {
              "key": "analyticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Unique analytics identifier corresponding to a payment method"
            },
            {
              "key": "paymentMethodType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PaymentMethodTypeEnum"
                    }
                  }
                }
              },
              "description": "Payment method type associated with a token."
            },
            {
              "key": "paymentMethodData",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:MerchantPaymentMethodTokenApiResponsePaymentMethodData"
                    }
                  }
                }
              },
              "description": "Payment method data"
            },
            {
              "key": "customerId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The ID representing the customer"
            },
            {
              "key": "default",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "description": "Whether or not this payment method is the default"
            }
          ]
        }
      },
      "type_:MerchantPaymentMethodTokenListApiResponse": {
        "name": "MerchantPaymentMethodTokenListApiResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:MerchantPaymentMethodTokenApiResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PaymentCardTokenApiSchemaPaymentMethodsApi": {
        "name": "PaymentCardTokenApiSchemaPaymentMethodsApi",
        "description": "Used exclusively by the Payment Methods API",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "last4Digits",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationMonth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "expirationYear",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "cardholderName",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "network",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "networkTransactionId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An ID for the transaction assigned by the card network. Used to correlate recurring payments."
            },
            {
              "key": "accountFundingType",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:AccountFundingTypeEnum"
                    }
                  }
                }
              },
              "description": "The type of card, e.g. Debit, Credit"
            }
          ]
        }
      },
      "type_:ErrorObject": {
        "name": "ErrorObject",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "errorId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An error ID"
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A human description of the error"
            },
            {
              "key": "recoverySuggestion",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "A human readable recovery suggestion of the error"
            },
            {
              "key": "diagnosticsId",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "An ID that you can quote when contacting the Primer support team via our [JIRA Service Desk](https://primerapi.atlassian.net/servicedesk/customer/portal/11)."
            }
          ]
        }
      },
      "type_:four_hundred_ErrorResponse": {
        "name": "four_hundred_ErrorResponse",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:ErrorObject"
          }
        }
      },
      "type_:four_hundred_twenty_two_ErrorResponse": {
        "name": "four_hundred_twenty_two_ErrorResponse",
        "shape": {
          "type": "alias",
          "value": {
            "type": "id",
            "id": "type_:ErrorObject"
          }
        }
      }
    },
    "subpackages": {
      "subpackage_clientSessionApi": {
        "id": "subpackage_clientSessionApi",
        "name": "Client Session API"
      },
      "subpackage_paymentsApi": {
        "id": "subpackage_paymentsApi",
        "name": "Payments API"
      },
      "subpackage_paymentMethodsApi": {
        "id": "subpackage_paymentMethodsApi",
        "name": "Payment Methods API"
      }
    },
    "auths": {
      "default": {
        "type": "header",
        "headerWireValue": "X-API-KEY",
        "nameOverride": "apiKey"
      }
    }
  }
]