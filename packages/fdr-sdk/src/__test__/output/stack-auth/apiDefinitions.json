[
  {
    "id": "4f0a40b7-799b-4d5d-b569-9a0888910a39",
    "endpoints": {
      "endpoint_.apiV1": {
        "id": "endpoint_.apiV1",
        "namespace": [],
        "displayName": "/api/v1",
        "operationId": "api-v-1",
        "description": "Returns a human-readable message with some useful information about the API.",
        "method": "GET",
        "path": [],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Stack-Project-Id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The unique identifier of the project"
          },
          {
            "key": "X-Stack-Access-Type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Access-Token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Refresh-Token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Publishable-Client-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Secret-Server-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Super-Secret-Admin-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Stack-Project-Id": "string",
              "X-Stack-Access-Type": "string",
              "X-Stack-Access-Token": "string",
              "X-Stack-Refresh-Token": "string",
              "X-Stack-Publishable-Client-Key": "string",
              "X-Stack-Secret-Server-Key": "string",
              "X-Stack-Super-Secret-Admin-Key": "string"
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1 \\\n     -H \"X-Stack-Project-Id: string\" \\\n     -H \"X-Stack-Access-Type: string\" \\\n     -H \"X-Stack-Access-Token: string\" \\\n     -H \"X-Stack-Refresh-Token: string\" \\\n     -H \"X-Stack-Publishable-Client-Key: string\" \\\n     -H \"X-Stack-Secret-Server-Key: string\" \\\n     -H \"X-Stack-Super-Secret-Admin-Key: string\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.listContactChannels": {
        "id": "endpoint_contactChannels.listContactChannels",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "List contact channels",
        "operationId": "list-contact-channels",
        "description": "",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:GetContactChannelsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                    "id": "b3d396b8-c574-4c80-97b3-50031675ceb2",
                    "value": "johndoe@example.com",
                    "type": "email",
                    "used_for_auth": true,
                    "is_verified": true,
                    "is_primary": true
                  }
                ],
                "pagination": {
                  "next_cursor": "b3d396b8-c574-4c80-97b3-50031675ceb2"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/contact-channels \\\n     -d user_id=3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.createAContactChannel": {
        "id": "endpoint_contactChannels.createAContactChannel",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Create a contact channel",
        "operationId": "create-a-contact-channel",
        "description": "",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "user_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The ID of the user, or the special value `me` for the currently authenticated user"
                },
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The value of the contact channel. For email, this should be a valid email address."
                },
                {
                  "key": "type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The type of the contact channel. Currently only \"email\" is supported."
                },
                {
                  "key": "used_for_auth",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  },
                  "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
                },
                {
                  "key": "is_primary",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PostContactChannelsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_primary": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "id": "b3d396b8-c574-4c80-97b3-50031675ceb2",
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_verified": true,
                "is_primary": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://api.stack-auth.com/api/v1/contact-channels?user_id=3241a285-8329-4d69-8f3d-316e08cf140c\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"user_id\": \"3241a285-8329-4d69-8f3d-316e08cf140c\",\n  \"value\": \"johndoe@example.com\",\n  \"type\": \"email\",\n  \"used_for_auth\": true,\n  \"is_primary\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.verifyAnEmail": {
        "id": "endpoint_contactChannels.verifyAnEmail",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Verify an email",
        "operationId": "verify-an-email",
        "description": "Verify an email address of a user",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/verify"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PostContactChannelsVerifyResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/verify",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/contact-channels/verify \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.checkEmailVerificationCode": {
        "id": "endpoint_contactChannels.checkEmailVerificationCode",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Check email verification code",
        "operationId": "check-email-verification-code",
        "description": "Check if an email verification code is valid without using it",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/verify/check-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PostContactChannelsVerifyCheckCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/verify/check-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "is_code_valid": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/contact-channels/verify/check-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.getAContactChannel": {
        "id": "endpoint_contactChannels.getAContactChannel",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Get a contact channel",
        "operationId": "get-a-contact-channel",
        "description": "",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "contact_channel_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the user that the contact channel belongs to"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the target contact channel"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:GetContactChannelsUserIdContactChannelIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "me",
              "contact_channel_id": "b3d396b8-c574-4c80-97b3-50031675ceb2"
            },
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "id": "b3d396b8-c574-4c80-97b3-50031675ceb2",
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_verified": true,
                "is_primary": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2 \\\n     -d user_id=3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.deleteAContactChannel": {
        "id": "endpoint_contactChannels.deleteAContactChannel",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Delete a contact channel",
        "operationId": "delete-a-contact-channel",
        "description": "",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "contact_channel_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the user that the contact channel belongs to"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the target contact channel"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:DeleteContactChannelsUserIdContactChannelIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "me",
              "contact_channel_id": "b3d396b8-c574-4c80-97b3-50031675ceb2"
            },
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.stack-auth.com/api/v1/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2?user_id=3241a285-8329-4d69-8f3d-316e08cf140c\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.updateAContactChannel": {
        "id": "endpoint_contactChannels.updateAContactChannel",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Update a contact channel",
        "operationId": "update-a-contact-channel",
        "description": "",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "contact_channel_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the user that the contact channel belongs to"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the target contact channel"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The value of the contact channel. For email, this should be a valid email address."
                },
                {
                  "key": "type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The type of the contact channel. Currently only \"email\" is supported."
                },
                {
                  "key": "used_for_auth",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
                },
                {
                  "key": "is_primary",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PatchContactChannelsUserIdContactChannelIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "me",
              "contact_channel_id": "b3d396b8-c574-4c80-97b3-50031675ceb2"
            },
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_primary": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "id": "b3d396b8-c574-4c80-97b3-50031675ceb2",
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_verified": true,
                "is_primary": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://api.stack-auth.com/api/v1/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2?user_id=3241a285-8329-4d69-8f3d-316e08cf140c\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"value\": \"johndoe@example.com\",\n  \"type\": \"email\",\n  \"used_for_auth\": true,\n  \"is_primary\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.sendContactChannelVerificationCode": {
        "id": "endpoint_contactChannels.sendContactChannelVerificationCode",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Send contact channel verification code",
        "operationId": "send-contact-channel-verification-code",
        "description": "Send a code to the user's contact channel for verifying the contact channel.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "contact_channel_id"
          },
          {
            "type": "literal",
            "value": "/send-verification-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The user to send the verification code to."
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The contact channel to send the verification code to."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The base callback URL to construct a verification link for the verification e-mail. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/contact-channels/verify` endpoint."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PostContactChannelsUserIdContactChannelIdSendVerificationCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2/send-verification-code",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "me",
              "contact_channel_id": "b3d396b8-c574-4c80-97b3-50031675ceb2"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "callback_url": "https://example.com/handler/email-verification"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2/send-verification-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"callback_url\": \"https://example.com/handler/email-verification\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_oauth.oAuthTokenEndpoints": {
        "id": "endpoint_oauth.oAuthTokenEndpoints",
        "namespace": [
          "subpackage_oauth"
        ],
        "displayName": "OAuth token endpoints",
        "operationId": "o-auth-token-endpoints",
        "description": "This endpoint is used to exchange an authorization code or refresh token for an access token.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/oauth/token"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "grant_type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/oauth/token",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "grant_type": "grant_type"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "key": "value"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/oauth/token \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"grant_type\": \"grant_type\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_oauth.oAuthAuthorizeEndpoint": {
        "id": "endpoint_oauth.oAuthAuthorizeEndpoint",
        "namespace": [
          "subpackage_oauth"
        ],
        "displayName": "OAuth authorize endpoint",
        "operationId": "o-auth-authorize-endpoint",
        "description": "This endpoint is used to initiate the OAuth authorization flow. there are two purposes for this endpoint: 1. Authenticate a user with an OAuth provider. 2. Link an existing user with an OAuth provider.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/auth/oauth/authorize/"
          },
          {
            "type": "pathParameter",
            "value": "provider_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "provider_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "provider_scope",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "error_redirect_uri",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "after_callback_redirect_url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "client_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "client_secret",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "redirect_uri",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "scope",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "state",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "grant_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code_challenge",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code_challenge_method",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "response_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/auth/oauth/authorize/provider_id",
            "responseStatusCode": 204,
            "pathParameters": {
              "provider_id": "provider_id"
            },
            "queryParameters": {
              "client_id": "client_id",
              "client_secret": "client_secret",
              "redirect_uri": "redirect_uri",
              "scope": "scope",
              "state": "state",
              "grant_type": "grant_type",
              "code_challenge": "code_challenge",
              "code_challenge_method": "code_challenge_method",
              "response_type": "response_type"
            },
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/auth/oauth/authorize/provider_id \\\n     -d client_id=client_id \\\n     -d client_secret=client_secret \\\n     -d redirect_uri=redirect_uri \\\n     -d scope=scope \\\n     -d state=state \\\n     -d grant_type=grant_type \\\n     -d code_challenge=code_challenge \\\n     -d code_challenge_method=code_challenge_method \\\n     -d response_type=response_type",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_otp.signInWithACode": {
        "id": "endpoint_otp.signInWithACode",
        "namespace": [
          "subpackage_otp"
        ],
        "displayName": "Sign in with a code",
        "operationId": "sign-in-with-a-code",
        "description": "Sign in with a code",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/otp/sign-in"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_otp:PostAuthOtpSignInResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/otp/sign-in",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "refresh_token": "i8ns3aq2...14y",
                "access_token": "eyJhmMiJB2TO...diI4QT",
                "is_new_user": true,
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/otp/sign-in \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_otp.sendSignInCode": {
        "id": "endpoint_otp.sendSignInCode",
        "namespace": [
          "subpackage_otp"
        ],
        "displayName": "Send sign-in code",
        "operationId": "send-sign-in-code",
        "description": "Send a code to the user's email address for sign-in.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/otp/send-sign-in-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The email to sign in with."
                },
                {
                  "key": "callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The base callback URL to construct the magic link from. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/auth/otp/sign-in` endpoint."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_otp:PostAuthOtpSendSignInCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/otp/send-sign-in-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "johndoe@example.com",
                "callback_url": "https://example.com/handler/magic-link-callback"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "nonce": "nonce"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/otp/send-sign-in-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"johndoe@example.com\",\n  \"callback_url\": \"https://example.com/handler/magic-link-callback\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_otp.mfaSignIn": {
        "id": "endpoint_otp.mfaSignIn",
        "namespace": [
          "subpackage_otp"
        ],
        "displayName": "MFA sign in",
        "operationId": "mfa-sign-in",
        "description": "Complete multi-factor authorization to sign in, with a TOTP and an MFA attempt code",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/mfa/sign-in"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "totp",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_otp:PostAuthMfaSignInResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/mfa/sign-in",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "type": "type",
                "totp": "totp",
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "refresh_token": "i8ns3aq2...14y",
                "access_token": "eyJhmMiJB2TO...diI4QT",
                "is_new_user": true,
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/mfa/sign-in \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"type\",\n  \"totp\": \"totp\",\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_otp.checkSignInCode": {
        "id": "endpoint_otp.checkSignInCode",
        "namespace": [
          "subpackage_otp"
        ],
        "displayName": "Check sign in code",
        "operationId": "check-sign-in-code",
        "description": "Check if a sign in code is valid without using it",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/otp/sign-in/check-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_otp:PostAuthOtpSignInCheckCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/otp/sign-in/check-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "is_code_valid": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/otp/sign-in/check-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.updatePassword": {
        "id": "endpoint_password.updatePassword",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Update password",
        "operationId": "update-password",
        "description": "Update the password of the current user, requires the old password",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/update"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requestHeaders": [
          {
            "key": "x-stack-refresh-token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "old_password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "new_password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordUpdateResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/update",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "old_password": "old_password",
                "new_password": "new_password"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/update \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"old_password\": \"old_password\",\n  \"new_password\": \"new_password\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.signUpWithEmailAndPassword": {
        "id": "endpoint_password.signUpWithEmailAndPassword",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Sign up with email and password",
        "operationId": "sign-up-with-email-and-password",
        "description": "Create a new account with email and password",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/sign-up"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The email to sign in with."
                },
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "verification_callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The base callback URL to construct a verification link for the verification e-mail. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/contact-channels/verify` endpoint."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordSignUpResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/sign-up",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "johndoe@example.com",
                "password": "password",
                "verification_callback_url": "https://example.com/handler/email-verification"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "access_token": "access_token",
                "refresh_token": "refresh_token",
                "user_id": "user_id"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/sign-up \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"johndoe@example.com\",\n  \"password\": \"password\",\n  \"verification_callback_url\": \"https://example.com/handler/email-verification\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.signInWithEmailAndPassword": {
        "id": "endpoint_password.signInWithEmailAndPassword",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Sign in with email and password",
        "operationId": "sign-in-with-email-and-password",
        "description": "Sign in to an account with email and password",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/sign-in"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordSignInResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/sign-in",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "email",
                "password": "password"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "access_token": "access_token",
                "refresh_token": "refresh_token",
                "user_id": "user_id"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/sign-in \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"email\",\n  \"password\": \"password\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.setPassword": {
        "id": "endpoint_password.setPassword",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Set password",
        "operationId": "set-password",
        "description": "Set a new password for the current user",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/set"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordSetResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/set",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "password": "password"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/set \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"password\": \"password\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.sendResetPasswordCode": {
        "id": "endpoint_password.sendResetPasswordCode",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Send reset password code",
        "operationId": "send-reset-password-code",
        "description": "Send a code to the user's email address for resetting the password.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/send-reset-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordSendResetCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/send-reset-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "email",
                "callback_url": "callback_url"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": "success"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/send-reset-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"email\",\n  \"callback_url\": \"callback_url\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.resetPasswordWithACode": {
        "id": "endpoint_password.resetPasswordWithACode",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Reset password with a code",
        "operationId": "reset-password-with-a-code",
        "description": "Reset password with a code",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/reset"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordResetResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/reset",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "password": "password",
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/reset \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"password\": \"password\",\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.checkResetPasswordCode": {
        "id": "endpoint_password.checkResetPasswordCode",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Check reset password code",
        "operationId": "check-reset-password-code",
        "description": "Check if a reset password code is valid without using it",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/reset/check-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordResetCheckCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/reset/check-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "is_code_valid": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/reset/check-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions.listTeamPermissions": {
        "id": "endpoint_permissions.listTeamPermissions",
        "namespace": [
          "subpackage_permissions"
        ],
        "displayName": "List team permissions",
        "operationId": "list-team-permissions",
        "description": "List team permissions of the current user. `user_id=me` must be set for client requests. Note that this might contain the permissions with the same permission ID across different teams. `(team_id, user_id, permission_id)` together uniquely identify a permission.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/team-permissions"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the team ID. If set, only the permissions of the members in a specific team will be returned."
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the user ID. If set, only the permissions this user has will be returned. Client request must set `user_id=me`"
          },
          {
            "key": "permission_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the permission ID. If set, only the permissions with this specific ID will be returned"
          },
          {
            "key": "recursive",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Whether to list permissions recursively. If set to `false`, only the permission the users directly have will be listed. If set to `true` all the direct and indirect permissions will be listed."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_permissions:GetTeamPermissionsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-permissions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "team_id": "cce084a3-28b7-418e-913e-c8ee6d802ea4",
              "user_id": "me",
              "permission_id": "16399452-c4f3-4554-8e44-c2d67bb60360",
              "recursive": "true"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "id": "read_secret_info",
                    "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                    "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e"
                  }
                ],
                "pagination": {
                  "next_cursor": "b3d396b8-c574-4c80-97b3-50031675ceb2"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/team-permissions \\\n     -d team_id=cce084a3-28b7-418e-913e-c8ee6d802ea4 \\\n     -d user_id=me \\\n     -d permission_id=16399452-c4f3-4554-8e44-c2d67bb60360 \\\n     -d recursive=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_projects.getTheCurrentProject": {
        "id": "endpoint_projects.getTheCurrentProject",
        "namespace": [
          "subpackage_projects"
        ],
        "displayName": "Get the current project",
        "operationId": "get-the-current-project",
        "description": "Get the current project information including display name, oauth providers and authentication methods. Useful for display the available login options to the user.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/projects/current"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_projects:GetProjectsCurrentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/projects/current",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "e0b52f4d-dece-408c-af49-d23061bb0f8d",
                "display_name": "MyMusic",
                "config": {
                  "sign_up_enabled": true,
                  "credential_enabled": true,
                  "magic_link_enabled": true,
                  "passkey_enabled": true,
                  "client_team_creation_enabled": true,
                  "client_user_deletion_enabled": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/projects/current",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sessions.signOutOfTheCurrentSession": {
        "id": "endpoint_sessions.signOutOfTheCurrentSession",
        "namespace": [
          "subpackage_sessions"
        ],
        "displayName": "Sign out of the current session",
        "operationId": "sign-out-of-the-current-session",
        "description": "Sign out of the current session and invalidate the refresh token",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/auth/sessions/current"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requestHeaders": [
          {
            "key": "x-stack-refresh-token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_sessions:DeleteAuthSessionsCurrentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/sessions/current",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "x-stack-refresh-token": "x-stack-refresh-token"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.stack-auth.com/api/v1/auth/sessions/current \\\n     -H \"x-stack-refresh-token: x-stack-refresh-token\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sessions.refreshAccessToken": {
        "id": "endpoint_sessions.refreshAccessToken",
        "namespace": [
          "subpackage_sessions"
        ],
        "displayName": "Refresh access token",
        "operationId": "refresh-access-token",
        "description": "Get a new access token using a refresh token",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/sessions/current/refresh"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requestHeaders": [
          {
            "key": "x-stack-refresh-token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_sessions:PostAuthSessionsCurrentRefreshResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/sessions/current/refresh",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "x-stack-refresh-token": "x-stack-refresh-token"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "access_token": "access_token"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/sessions/current/refresh \\\n     -H \"x-stack-refresh-token: x-stack-refresh-token\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.listTeams": {
        "id": "endpoint_teams.listTeams",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "List teams",
        "operationId": "list-teams",
        "description": "List all the teams that the current user is a member of. `user_id=me` must be passed in the query parameters.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/teams"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter for the teams that the user is a member of. Can be either `me` or an ID. Must be `me` in the client API"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:GetTeamsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "user_id": "me"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                    "display_name": "My Team",
                    "profile_image_url": "https://example.com/image.jpg",
                    "client_metadata": {
                      "key": "value"
                    },
                    "client_read_only_metadata": {
                      "key": "value"
                    }
                  }
                ],
                "pagination": {
                  "next_cursor": "b3d396b8-c574-4c80-97b3-50031675ceb2"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/teams \\\n     -d user_id=me",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.createATeam": {
        "id": "endpoint_teams.createATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Create a team",
        "operationId": "create-a-team",
        "description": "Create a new team and optionally add the current user as a member.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/teams"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Human-readable team display name. This is not a unique identifier."
                },
                {
                  "key": "creator_user_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The ID of the creator of the team. If not specified, the user will not be added to the team. Can be either \"me\" or the ID of the user. Only used on the client side."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                },
                {
                  "key": "client_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display_name": "My Team",
                "creator_user_id": "me",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "display_name": "My Team",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/teams \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display_name\": \"My Team\",\n  \"creator_user_id\": \"me\",\n  \"profile_image_url\": \"https://example.com/image.jpg\",\n  \"client_metadata\": {\n    \"key\": \"value\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.listTeamMembersProfiles": {
        "id": "endpoint_teams.listTeamMembersProfiles",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "List team members profiles",
        "operationId": "list-team-members-profiles",
        "description": "List team members profiles. You always need to specify a `team_id` that your are a member of on the client. You can always filter for your own profile by setting `me` as the `user_id` in the path parameters. If you want list all the profiles in a team, you need to have the `$read_members` permission in that team.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/team-member-profiles"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:GetTeamMemberProfilesResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-member-profiles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                    "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                    "display_name": "John Doe",
                    "profile_image_url": "https://example.com/image.jpg"
                  }
                ],
                "pagination": {
                  "next_cursor": "b3d396b8-c574-4c80-97b3-50031675ceb2"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/team-member-profiles",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.getATeam": {
        "id": "endpoint_teams.getATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Get a team",
        "operationId": "get-a-team",
        "description": "Get a team that the current user is a member of.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:GetTeamsTeamIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams/team_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "display_name": "My Team",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/teams/team_id",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.deleteATeam": {
        "id": "endpoint_teams.deleteATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Delete a team",
        "operationId": "delete-a-team",
        "description": "Delete a team. Only allowed if the current user is a member of the team and has the `$delete_team` permission.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:DeleteTeamsTeamIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams/team_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.stack-auth.com/api/v1/teams/team_id",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.updateATeam": {
        "id": "endpoint_teams.updateATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Update a team",
        "operationId": "update-a-team",
        "description": "Update the team information. Only allowed if the current user is a member of the team and has the `$update_team` permission.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Human-readable team display name. This is not a unique identifier."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                },
                {
                  "key": "client_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PatchTeamsTeamIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams/team_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display_name": "My Team",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "display_name": "My Team",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.stack-auth.com/api/v1/teams/team_id \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display_name\": \"My Team\",\n  \"profile_image_url\": \"https://example.com/image.jpg\",\n  \"client_metadata\": {\n    \"key\": \"value\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.sendAnEmailToInviteAUserToATeam": {
        "id": "endpoint_teams.sendAnEmailToInviteAUserToATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Send an email to invite a user to a team",
        "operationId": "send-an-email-to-invite-a-user-to-a-team",
        "description": "The user receiving this email can join the team by clicking on the link in the email. If the user does not have an account yet, they will be prompted to create one.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-invitations/send-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "team_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The unique identifier of the team"
                },
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The email of the user to invite."
                },
                {
                  "key": "callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The base callback URL to construct an invite link with. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/team-invitations/accept` endpoint."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamInvitationsSendCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-invitations/send-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "email": "johndoe@example.com",
                "callback_url": "https://example.com/handler/team-invitation"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/team-invitations/send-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"team_id\": \"ad962777-8244-496a-b6a2-e0c6a449c79e\",\n  \"email\": \"johndoe@example.com\",\n  \"callback_url\": \"https://example.com/handler/team-invitation\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.inviteAUserToATeam": {
        "id": "endpoint_teams.inviteAUserToATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Invite a user to a team",
        "operationId": "invite-a-user-to-a-team",
        "description": "Send an email to a user to invite them to a team",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-invitations/accept"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamInvitationsAcceptResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-invitations/accept",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/team-invitations/accept \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.removeAUserFromATeam": {
        "id": "endpoint_teams.removeAUserFromATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Remove a user from a team",
        "operationId": "remove-a-user-from-a-team",
        "description": "All the users are allowed to remove themselves from a team (`user_id=me`). Only the users who have the `$remove_members` permission are allowed to remove other users from a team. `team_id` is must an ID of a team that the user is a member of.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/team-memberships/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:DeleteTeamMembershipsTeamIdUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-memberships/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id",
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.stack-auth.com/api/v1/team-memberships/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.getATeamMemberProfile": {
        "id": "endpoint_teams.getATeamMemberProfile",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Get a team member profile",
        "operationId": "get-a-team-member-profile",
        "description": "Get a team member profile. you can always get your own profile by setting `me` as the `user_id` in the path parameters on the client. If you want to get someone else's profile in a team, you need to have the `$read_members` permission in that team.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/team-member-profiles/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:GetTeamMemberProfilesTeamIdUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-member-profiles/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id",
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/team-member-profiles/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.updateYourTeamMemberProfile": {
        "id": "endpoint_teams.updateYourTeamMemberProfile",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Update your team member profile",
        "operationId": "update-your-team-member-profile",
        "description": "Update your own team member profile. `user_id` must be `me` in the path parameters on the client.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/team-member-profiles/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Human-readable team member display name. This is not a unique identifier. Note that this is separate from the display_name of the user."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for team member. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PatchTeamMemberProfilesTeamIdUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-member-profiles/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id",
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.stack-auth.com/api/v1/team-member-profiles/team_id/3241a285-8329-4d69-8f3d-316e08cf140c \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display_name\": \"John Doe\",\n  \"profile_image_url\": \"https://example.com/image.jpg\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.getTeamInvitationDetails": {
        "id": "endpoint_teams.getTeamInvitationDetails",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Get team invitation details",
        "operationId": "get-team-invitation-details",
        "description": "Get additional information about a team invitation code",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-invitations/accept/details"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamInvitationsAcceptDetailsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-invitations/accept/details",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "team_id": "team_id",
                "team_display_name": "team_display_name"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/team-invitations/accept/details \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.checkIfATeamInvitationCodeIsValid": {
        "id": "endpoint_teams.checkIfATeamInvitationCodeIsValid",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Check if a team invitation code is valid",
        "operationId": "check-if-a-team-invitation-code-is-valid",
        "description": "Check if a team invitation code is valid without using it",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-invitations/accept/check-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamInvitationsAcceptCheckCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-invitations/accept/check-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "is_code_valid": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/team-invitations/accept/check-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.getCurrentUser": {
        "id": "endpoint_users.getCurrentUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Get current user",
        "operationId": "get-current-user",
        "description": "Gets the currently authenticated user.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/users/me"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:GetUsersMeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "primary_email_verified": true,
                "signed_up_at_millis": 1630000000000,
                "selected_team": {
                  "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                  "display_name": "My Team",
                  "profile_image_url": "https://example.com/image.jpg",
                  "client_metadata": {
                    "key": "value"
                  },
                  "client_read_only_metadata": {
                    "key": "value"
                  }
                },
                "primary_email": "johndoe@example.com",
                "display_name": "John Doe",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "profile_image_url": "https://example.com/image.jpg",
                "selected_team_id": "team-id"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/users/me",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.deleteCurrentUser": {
        "id": "endpoint_users.deleteCurrentUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Delete current user",
        "operationId": "delete-current-user",
        "description": "Deletes the currently authenticated user. Use this with caution.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/users/me"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:DeleteUsersMeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.stack-auth.com/api/v1/users/me",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.updateCurrentUser": {
        "id": "endpoint_users.updateCurrentUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Update current user",
        "operationId": "update-current-user",
        "description": "Updates the currently authenticated user. Only the values provided will be updated.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/users/me"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Human-readable user display name. This is not a unique identifier."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                },
                {
                  "key": "client_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                },
                {
                  "key": "selected_team_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "ID of the team currently selected by the user"
                },
                {
                  "key": "totp_secret_base64",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Enables 2FA and sets a TOTP secret for the user. Set to null to disable 2FA."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:PatchUsersMeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "selected_team_id": "team-id",
                "totp_secret_base64": "dG90cC1zZWNyZXQ="
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "primary_email_verified": true,
                "signed_up_at_millis": 1630000000000,
                "selected_team": {
                  "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                  "display_name": "My Team",
                  "profile_image_url": "https://example.com/image.jpg",
                  "client_metadata": {
                    "key": "value"
                  },
                  "client_read_only_metadata": {
                    "key": "value"
                  }
                },
                "primary_email": "johndoe@example.com",
                "display_name": "John Doe",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "profile_image_url": "https://example.com/image.jpg",
                "selected_team_id": "team-id"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.stack-auth.com/api/v1/users/me \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display_name\": \"John Doe\",\n  \"profile_image_url\": \"https://example.com/image.jpg\",\n  \"client_metadata\": {\n    \"key\": \"value\"\n  },\n  \"selected_team_id\": \"team-id\",\n  \"totp_secret_base64\": \"dG90cC1zZWNyZXQ=\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_contactChannels:GetContactChannelsResponseItemsItem": {
        "name": "GetContactChannelsResponseItemsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the contact channel"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The value of the contact channel. For email, this should be a valid email address."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of the contact channel. Currently only \"email\" is supported."
            },
            {
              "key": "used_for_auth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
            },
            {
              "key": "is_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
            },
            {
              "key": "is_primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
            }
          ]
        }
      },
      "type_contactChannels:GetContactChannelsResponsePagination": {
        "name": "GetContactChannelsResponsePagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "next_cursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cursor to fetch the next page of results. null if there is no next page."
            }
          ]
        }
      },
      "type_contactChannels:GetContactChannelsResponse": {
        "name": "GetContactChannelsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_contactChannels:GetContactChannelsResponseItemsItem"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_contactChannels:GetContactChannelsResponsePagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_contactChannels:PostContactChannelsResponse": {
        "name": "PostContactChannelsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the contact channel"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The value of the contact channel. For email, this should be a valid email address."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of the contact channel. Currently only \"email\" is supported."
            },
            {
              "key": "used_for_auth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
            },
            {
              "key": "is_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
            },
            {
              "key": "is_primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
            }
          ]
        }
      },
      "type_contactChannels:PostContactChannelsVerifyResponse": {
        "name": "PostContactChannelsVerifyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_contactChannels:PostContactChannelsVerifyCheckCodeResponse": {
        "name": "PostContactChannelsVerifyCheckCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "is_code_valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_contactChannels:GetContactChannelsUserIdContactChannelIdResponse": {
        "name": "GetContactChannelsUserIdContactChannelIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the contact channel"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The value of the contact channel. For email, this should be a valid email address."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of the contact channel. Currently only \"email\" is supported."
            },
            {
              "key": "used_for_auth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
            },
            {
              "key": "is_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
            },
            {
              "key": "is_primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
            }
          ]
        }
      },
      "type_contactChannels:DeleteContactChannelsUserIdContactChannelIdResponse": {
        "name": "DeleteContactChannelsUserIdContactChannelIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_contactChannels:PatchContactChannelsUserIdContactChannelIdResponse": {
        "name": "PatchContactChannelsUserIdContactChannelIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the contact channel"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The value of the contact channel. For email, this should be a valid email address."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of the contact channel. Currently only \"email\" is supported."
            },
            {
              "key": "used_for_auth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
            },
            {
              "key": "is_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
            },
            {
              "key": "is_primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
            }
          ]
        }
      },
      "type_contactChannels:PostContactChannelsUserIdContactChannelIdSendVerificationCodeResponse": {
        "name": "PostContactChannelsUserIdContactChannelIdSendVerificationCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_otp:PostAuthOtpSignInResponse": {
        "name": "PostAuthOtpSignInResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "refresh_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Long-lived refresh token that can be used to obtain a new access token"
            },
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Short-lived access token that can be used to authenticate the user"
            },
            {
              "key": "is_new_user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the user is a new user"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            }
          ]
        }
      },
      "type_otp:PostAuthOtpSendSignInCodeResponse": {
        "name": "PostAuthOtpSendSignInCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "nonce",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_otp:PostAuthMfaSignInResponse": {
        "name": "PostAuthMfaSignInResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "refresh_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Long-lived refresh token that can be used to obtain a new access token"
            },
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Short-lived access token that can be used to authenticate the user"
            },
            {
              "key": "is_new_user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the user is a new user"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            }
          ]
        }
      },
      "type_otp:PostAuthOtpSignInCheckCodeResponse": {
        "name": "PostAuthOtpSignInCheckCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "is_code_valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_password:PostAuthPasswordUpdateResponse": {
        "name": "PostAuthPasswordUpdateResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_password:PostAuthPasswordSignUpResponse": {
        "name": "PostAuthPasswordSignUpResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "refresh_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_password:PostAuthPasswordSignInResponse": {
        "name": "PostAuthPasswordSignInResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "refresh_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_password:PostAuthPasswordSetResponse": {
        "name": "PostAuthPasswordSetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_password:PostAuthPasswordSendResetCodeResponse": {
        "name": "PostAuthPasswordSendResetCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_password:PostAuthPasswordResetResponse": {
        "name": "PostAuthPasswordResetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_password:PostAuthPasswordResetCheckCodeResponse": {
        "name": "PostAuthPasswordResetCheckCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "is_code_valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_permissions:GetTeamPermissionsResponseItemsItem": {
        "name": "GetTeamPermissionsResponseItemsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The permission ID used to uniquely identify a permission. Can either be a custom permission with lowercase letters, numbers, `:`, and `_` characters, or one of the system permissions: `$update_team`, `$delete_team`, `$read_members`, `$remove_members`, `$invite_members`"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            }
          ]
        }
      },
      "type_permissions:GetTeamPermissionsResponsePagination": {
        "name": "GetTeamPermissionsResponsePagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "next_cursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cursor to fetch the next page of results. null if there is no next page."
            }
          ]
        }
      },
      "type_permissions:GetTeamPermissionsResponse": {
        "name": "GetTeamPermissionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_permissions:GetTeamPermissionsResponseItemsItem"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_permissions:GetTeamPermissionsResponsePagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_projects:GetProjectsCurrentResponseConfig": {
        "name": "GetProjectsCurrentResponseConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sign_up_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether users can sign up new accounts, or whether they are only allowed to sign in to existing accounts. Regardless of this option, the server API can always create new users with the `POST /users` endpoint."
            },
            {
              "key": "credential_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether email password authentication is enabled for this project"
            },
            {
              "key": "magic_link_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether magic link authentication is enabled for this project"
            },
            {
              "key": "passkey_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether passkey authentication is enabled for this project"
            },
            {
              "key": "client_team_creation_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether client users can create teams"
            },
            {
              "key": "client_user_deletion_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether client users can delete their own account from the client"
            }
          ]
        }
      },
      "type_projects:GetProjectsCurrentResponse": {
        "name": "GetProjectsCurrentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the project"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable project display name. This is not a unique identifier."
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_projects:GetProjectsCurrentResponseConfig"
                }
              }
            }
          ]
        }
      },
      "type_sessions:DeleteAuthSessionsCurrentResponse": {
        "name": "DeleteAuthSessionsCurrentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_sessions:PostAuthSessionsCurrentRefreshResponse": {
        "name": "PostAuthSessionsCurrentRefreshResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:GetTeamsResponseItemsItem": {
        "name": "GetTeamsResponseItemsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:GetTeamsResponsePagination": {
        "name": "GetTeamsResponsePagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "next_cursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cursor to fetch the next page of results. null if there is no next page."
            }
          ]
        }
      },
      "type_teams:GetTeamsResponse": {
        "name": "GetTeamsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamsResponseItemsItem"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamsResponsePagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:PostTeamsResponse": {
        "name": "PostTeamsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesResponseItemsItem": {
        "name": "GetTeamMemberProfilesResponseItemsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable team member display name. This is not a unique identifier. Note that this is separate from the display_name of the user."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team member. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesResponsePagination": {
        "name": "GetTeamMemberProfilesResponsePagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "next_cursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cursor to fetch the next page of results. null if there is no next page."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesResponse": {
        "name": "GetTeamMemberProfilesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamMemberProfilesResponseItemsItem"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamMemberProfilesResponsePagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:GetTeamsTeamIdResponse": {
        "name": "GetTeamsTeamIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:DeleteTeamsTeamIdResponse": {
        "name": "DeleteTeamsTeamIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_teams:PatchTeamsTeamIdResponse": {
        "name": "PatchTeamsTeamIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:PostTeamInvitationsSendCodeResponse": {
        "name": "PostTeamInvitationsSendCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_teams:PostTeamInvitationsAcceptResponse": {
        "name": "PostTeamInvitationsAcceptResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_teams:DeleteTeamMembershipsTeamIdUserIdResponse": {
        "name": "DeleteTeamMembershipsTeamIdUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesTeamIdUserIdResponse": {
        "name": "GetTeamMemberProfilesTeamIdUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable team member display name. This is not a unique identifier. Note that this is separate from the display_name of the user."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team member. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            }
          ]
        }
      },
      "type_teams:PatchTeamMemberProfilesTeamIdUserIdResponse": {
        "name": "PatchTeamMemberProfilesTeamIdUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable team member display name. This is not a unique identifier. Note that this is separate from the display_name of the user."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team member. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            }
          ]
        }
      },
      "type_teams:PostTeamInvitationsAcceptDetailsResponse": {
        "name": "PostTeamInvitationsAcceptDetailsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "team_display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:PostTeamInvitationsAcceptCheckCodeResponse": {
        "name": "PostTeamInvitationsAcceptCheckCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "is_code_valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_users:GetUsersMeResponseSelectedTeam": {
        "name": "GetUsersMeResponseSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:GetUsersMeResponse": {
        "name": "GetUsersMeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:GetUsersMeResponseSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            }
          ]
        }
      },
      "type_users:DeleteUsersMeResponse": {
        "name": "DeleteUsersMeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_users:PatchUsersMeResponseSelectedTeam": {
        "name": "PatchUsersMeResponseSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:PatchUsersMeResponse": {
        "name": "PatchUsersMeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:PatchUsersMeResponseSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_contactChannels": {
        "id": "subpackage_contactChannels",
        "name": "contactChannels"
      },
      "subpackage_oauth": {
        "id": "subpackage_oauth",
        "name": "oauth"
      },
      "subpackage_otp": {
        "id": "subpackage_otp",
        "name": "otp"
      },
      "subpackage_password": {
        "id": "subpackage_password",
        "name": "password"
      },
      "subpackage_permissions": {
        "id": "subpackage_permissions",
        "name": "permissions"
      },
      "subpackage_projects": {
        "id": "subpackage_projects",
        "name": "projects"
      },
      "subpackage_sessions": {
        "id": "subpackage_sessions",
        "name": "sessions"
      },
      "subpackage_teams": {
        "id": "subpackage_teams",
        "name": "teams"
      },
      "subpackage_users": {
        "id": "subpackage_users",
        "name": "users"
      }
    },
    "auths": {}
  },
  {
    "id": "8c451807-ffb6-4876-9831-21d410bcb716",
    "endpoints": {},
    "websockets": {},
    "webhooks": {
      "subpackage_users.user.created": {
        "id": "subpackage_users.user.created",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "user.created",
        "operationId": "user-created",
        "description": "This event is triggered when a user is created.",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_users:UserCreatedPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "type": "string",
              "data": {
                "id": "string",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "signed_up_at_millis": 1,
                "last_active_at_millis": 1,
                "primary_email": "string",
                "display_name": "string",
                "selected_team": {
                  "created_at_millis": 1,
                  "id": "string",
                  "display_name": "string",
                  "server_metadata": {
                    "string": {}
                  },
                  "profile_image_url": "string",
                  "client_metadata": {
                    "string": {}
                  },
                  "client_read_only_metadata": {
                    "string": {}
                  }
                },
                "selected_team_id": "string",
                "profile_image_url": "string",
                "client_metadata": {
                  "string": {}
                },
                "client_read_only_metadata": {
                  "string": {}
                },
                "server_metadata": {
                  "string": {}
                }
              }
            }
          }
        ]
      },
      "subpackage_users.user.updated": {
        "id": "subpackage_users.user.updated",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "user.updated",
        "operationId": "user-updated",
        "description": "This event is triggered when a user is updated.",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_users:UserUpdatedPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "type": "string",
              "data": {
                "id": "string",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "signed_up_at_millis": 1,
                "last_active_at_millis": 1,
                "primary_email": "string",
                "display_name": "string",
                "selected_team": {
                  "created_at_millis": 1,
                  "id": "string",
                  "display_name": "string",
                  "server_metadata": {
                    "string": {}
                  },
                  "profile_image_url": "string",
                  "client_metadata": {
                    "string": {}
                  },
                  "client_read_only_metadata": {
                    "string": {}
                  }
                },
                "selected_team_id": "string",
                "profile_image_url": "string",
                "client_metadata": {
                  "string": {}
                },
                "client_read_only_metadata": {
                  "string": {}
                },
                "server_metadata": {
                  "string": {}
                }
              }
            }
          }
        ]
      },
      "subpackage_users.user.deleted": {
        "id": "subpackage_users.user.deleted",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "user.deleted",
        "operationId": "user-deleted",
        "description": "This event is triggered when a user is deleted.",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_users:UserDeletedPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "type": "string",
              "data": {
                "id": "string",
                "teams": [
                  {
                    "id": "string"
                  }
                ]
              }
            }
          }
        ]
      },
      "subpackage_teams.team.created": {
        "id": "subpackage_teams.team.created",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "team.created",
        "operationId": "team-created",
        "description": "This event is triggered when a team is created.",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_teams:TeamCreatedPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "type": "string",
              "data": {
                "created_at_millis": 1,
                "id": "string",
                "display_name": "string",
                "server_metadata": {
                  "string": {}
                },
                "profile_image_url": "string",
                "client_metadata": {
                  "string": {}
                },
                "client_read_only_metadata": {
                  "string": {}
                }
              }
            }
          }
        ]
      },
      "subpackage_teams.team.updated": {
        "id": "subpackage_teams.team.updated",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "team.updated",
        "operationId": "team-updated",
        "description": "This event is triggered when a team is updated.",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_teams:TeamUpdatedPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "type": "string",
              "data": {
                "created_at_millis": 1,
                "id": "string",
                "display_name": "string",
                "server_metadata": {
                  "string": {}
                },
                "profile_image_url": "string",
                "client_metadata": {
                  "string": {}
                },
                "client_read_only_metadata": {
                  "string": {}
                }
              }
            }
          }
        ]
      },
      "subpackage_teams.team.deleted": {
        "id": "subpackage_teams.team.deleted",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "team.deleted",
        "operationId": "team-deleted",
        "description": "This event is triggered when a team is deleted.",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_teams:TeamDeletedPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "type": "string",
              "data": {
                "id": "string"
              }
            }
          }
        ]
      },
      "subpackage_teams.team_membership.created": {
        "id": "subpackage_teams.team_membership.created",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "team_membership.created",
        "operationId": "team-membership-created",
        "description": "This event is triggered when a user is added to a team.",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_teams:TeamMembershipCreatedPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "type": "string",
              "data": {
                "team_id": "string",
                "user_id": "string"
              }
            }
          }
        ]
      },
      "subpackage_teams.team_membership.deleted": {
        "id": "subpackage_teams.team_membership.deleted",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "team_membership.deleted",
        "operationId": "team-membership-deleted",
        "description": "This event is triggered when a user is removed from a team.",
        "method": "POST",
        "path": [],
        "payload": {
          "shape": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_teams:TeamMembershipDeletedPayload"
            }
          }
        },
        "examples": [
          {
            "payload": {
              "type": "string",
              "data": {
                "team_id": "string",
                "user_id": "string"
              }
            }
          }
        ]
      }
    },
    "types": {
      "type_users:UserCreatedPayloadDataSelectedTeam": {
        "name": "UserCreatedPayloadDataSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:UserCreatedPayloadData": {
        "name": "UserCreatedPayloadData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:UserCreatedPayloadDataSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_users:UserCreatedPayload": {
        "name": "UserCreatedPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "user.created"
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_users:UserCreatedPayloadData"
                }
              }
            }
          ]
        }
      },
      "type_users:UserUpdatedPayloadDataSelectedTeam": {
        "name": "UserUpdatedPayloadDataSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:UserUpdatedPayloadData": {
        "name": "UserUpdatedPayloadData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:UserUpdatedPayloadDataSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_users:UserUpdatedPayload": {
        "name": "UserUpdatedPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "user.updated"
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_users:UserUpdatedPayloadData"
                }
              }
            }
          ]
        }
      },
      "type_users:UserDeletedPayloadDataTeamsItem": {
        "name": "UserDeletedPayloadDataTeamsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_users:UserDeletedPayloadData": {
        "name": "UserDeletedPayloadData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "teams",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:UserDeletedPayloadDataTeamsItem"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_users:UserDeletedPayload": {
        "name": "UserDeletedPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "user.deleted"
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_users:UserDeletedPayloadData"
                }
              }
            }
          ]
        }
      },
      "type_teams:TeamCreatedPayloadData": {
        "name": "TeamCreatedPayloadData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:TeamCreatedPayload": {
        "name": "TeamCreatedPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "team.created"
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_teams:TeamCreatedPayloadData"
                }
              }
            }
          ]
        }
      },
      "type_teams:TeamUpdatedPayloadData": {
        "name": "TeamUpdatedPayloadData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:TeamUpdatedPayload": {
        "name": "TeamUpdatedPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "team.updated"
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_teams:TeamUpdatedPayloadData"
                }
              }
            }
          ]
        }
      },
      "type_teams:TeamDeletedPayloadData": {
        "name": "TeamDeletedPayloadData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            }
          ]
        }
      },
      "type_teams:TeamDeletedPayload": {
        "name": "TeamDeletedPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "team.deleted"
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_teams:TeamDeletedPayloadData"
                }
              }
            }
          ]
        }
      },
      "type_teams:TeamMembershipCreatedPayloadData": {
        "name": "TeamMembershipCreatedPayloadData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:TeamMembershipCreatedPayload": {
        "name": "TeamMembershipCreatedPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "team_membership.created"
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_teams:TeamMembershipCreatedPayloadData"
                }
              }
            }
          ]
        }
      },
      "type_teams:TeamMembershipDeletedPayloadData": {
        "name": "TeamMembershipDeletedPayloadData",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:TeamMembershipDeletedPayload": {
        "name": "TeamMembershipDeletedPayload",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "team_membership.deleted"
            },
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_teams:TeamMembershipDeletedPayloadData"
                }
              }
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_users": {
        "id": "subpackage_users",
        "name": "users"
      },
      "subpackage_teams": {
        "id": "subpackage_teams",
        "name": "teams"
      }
    },
    "auths": {}
  },
  {
    "id": "e3e3def3-a1a3-4749-a69a-fa4dbe581533",
    "endpoints": {
      "endpoint_.apiV1": {
        "id": "endpoint_.apiV1",
        "namespace": [],
        "displayName": "/api/v1",
        "operationId": "api-v-1",
        "description": "Returns a human-readable message with some useful information about the API.",
        "method": "GET",
        "path": [],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requestHeaders": [
          {
            "key": "X-Stack-Project-Id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The unique identifier of the project"
          },
          {
            "key": "X-Stack-Access-Type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Access-Token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Refresh-Token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Publishable-Client-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Secret-Server-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "X-Stack-Super-Secret-Admin-Key",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Stack-Project-Id": "string",
              "X-Stack-Access-Type": "string",
              "X-Stack-Access-Token": "string",
              "X-Stack-Refresh-Token": "string",
              "X-Stack-Publishable-Client-Key": "string",
              "X-Stack-Secret-Server-Key": "string",
              "X-Stack-Super-Secret-Admin-Key": "string"
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1 \\\n     -H \"X-Stack-Project-Id: string\" \\\n     -H \"X-Stack-Access-Type: string\" \\\n     -H \"X-Stack-Access-Token: string\" \\\n     -H \"X-Stack-Refresh-Token: string\" \\\n     -H \"X-Stack-Publishable-Client-Key: string\" \\\n     -H \"X-Stack-Secret-Server-Key: string\" \\\n     -H \"X-Stack-Super-Secret-Admin-Key: string\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.listContactChannels": {
        "id": "endpoint_contactChannels.listContactChannels",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "List contact channels",
        "operationId": "list-contact-channels",
        "description": "",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:GetContactChannelsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                    "id": "b3d396b8-c574-4c80-97b3-50031675ceb2",
                    "value": "johndoe@example.com",
                    "type": "email",
                    "used_for_auth": true,
                    "is_verified": true,
                    "is_primary": true
                  }
                ],
                "pagination": {
                  "next_cursor": "b3d396b8-c574-4c80-97b3-50031675ceb2"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/contact-channels \\\n     -d user_id=3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.createAContactChannel": {
        "id": "endpoint_contactChannels.createAContactChannel",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Create a contact channel",
        "operationId": "create-a-contact-channel",
        "description": "",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "is_verified",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
                },
                {
                  "key": "user_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The ID of the user, or the special value `me` for the currently authenticated user"
                },
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The value of the contact channel. For email, this should be a valid email address."
                },
                {
                  "key": "type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The type of the contact channel. Currently only \"email\" is supported."
                },
                {
                  "key": "used_for_auth",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  },
                  "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
                },
                {
                  "key": "is_primary",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PostContactChannelsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_verified": true,
                "is_primary": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "id": "b3d396b8-c574-4c80-97b3-50031675ceb2",
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_verified": true,
                "is_primary": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://api.stack-auth.com/api/v1/contact-channels?user_id=3241a285-8329-4d69-8f3d-316e08cf140c\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"user_id\": \"3241a285-8329-4d69-8f3d-316e08cf140c\",\n  \"value\": \"johndoe@example.com\",\n  \"type\": \"email\",\n  \"used_for_auth\": true,\n  \"is_verified\": true,\n  \"is_primary\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.verifyAnEmail": {
        "id": "endpoint_contactChannels.verifyAnEmail",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Verify an email",
        "operationId": "verify-an-email",
        "description": "Verify an email address of a user",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/verify"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PostContactChannelsVerifyResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/verify",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/contact-channels/verify \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.checkEmailVerificationCode": {
        "id": "endpoint_contactChannels.checkEmailVerificationCode",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Check email verification code",
        "operationId": "check-email-verification-code",
        "description": "Check if an email verification code is valid without using it",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/verify/check-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PostContactChannelsVerifyCheckCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/verify/check-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "is_code_valid": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/contact-channels/verify/check-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.getAContactChannel": {
        "id": "endpoint_contactChannels.getAContactChannel",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Get a contact channel",
        "operationId": "get-a-contact-channel",
        "description": "",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "contact_channel_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the user that the contact channel belongs to"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the target contact channel"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:GetContactChannelsUserIdContactChannelIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "me",
              "contact_channel_id": "b3d396b8-c574-4c80-97b3-50031675ceb2"
            },
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "id": "b3d396b8-c574-4c80-97b3-50031675ceb2",
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_verified": true,
                "is_primary": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2 \\\n     -d user_id=3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.deleteAContactChannel": {
        "id": "endpoint_contactChannels.deleteAContactChannel",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Delete a contact channel",
        "operationId": "delete-a-contact-channel",
        "description": "",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "contact_channel_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the user that the contact channel belongs to"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the target contact channel"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:DeleteContactChannelsUserIdContactChannelIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "me",
              "contact_channel_id": "b3d396b8-c574-4c80-97b3-50031675ceb2"
            },
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.stack-auth.com/api/v1/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2?user_id=3241a285-8329-4d69-8f3d-316e08cf140c\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.updateAContactChannel": {
        "id": "endpoint_contactChannels.updateAContactChannel",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Update a contact channel",
        "operationId": "update-a-contact-channel",
        "description": "",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "contact_channel_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the user that the contact channel belongs to"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "the target contact channel"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "is_verified",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
                },
                {
                  "key": "value",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The value of the contact channel. For email, this should be a valid email address."
                },
                {
                  "key": "type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The type of the contact channel. Currently only \"email\" is supported."
                },
                {
                  "key": "used_for_auth",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
                },
                {
                  "key": "is_primary",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PatchContactChannelsUserIdContactChannelIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "me",
              "contact_channel_id": "b3d396b8-c574-4c80-97b3-50031675ceb2"
            },
            "queryParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "is_verified": true,
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_primary": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "id": "b3d396b8-c574-4c80-97b3-50031675ceb2",
                "value": "johndoe@example.com",
                "type": "email",
                "used_for_auth": true,
                "is_verified": true,
                "is_primary": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://api.stack-auth.com/api/v1/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2?user_id=3241a285-8329-4d69-8f3d-316e08cf140c\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"is_verified\": true,\n  \"value\": \"johndoe@example.com\",\n  \"type\": \"email\",\n  \"used_for_auth\": true,\n  \"is_primary\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_contactChannels.sendContactChannelVerificationCode": {
        "id": "endpoint_contactChannels.sendContactChannelVerificationCode",
        "namespace": [
          "subpackage_contactChannels"
        ],
        "displayName": "Send contact channel verification code",
        "operationId": "send-contact-channel-verification-code",
        "description": "Send a code to the user's contact channel for verifying the contact channel.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/contact-channels/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "contact_channel_id"
          },
          {
            "type": "literal",
            "value": "/send-verification-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The user to send the verification code to."
          },
          {
            "key": "contact_channel_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The contact channel to send the verification code to."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The base callback URL to construct a verification link for the verification e-mail. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/contact-channels/verify` endpoint."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_contactChannels:PostContactChannelsUserIdContactChannelIdSendVerificationCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2/send-verification-code",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "me",
              "contact_channel_id": "b3d396b8-c574-4c80-97b3-50031675ceb2"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "callback_url": "https://example.com/handler/email-verification"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/contact-channels/me/b3d396b8-c574-4c80-97b3-50031675ceb2/send-verification-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"callback_url\": \"https://example.com/handler/email-verification\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_oauth.oAuthTokenEndpoints": {
        "id": "endpoint_oauth.oAuthTokenEndpoints",
        "namespace": [
          "subpackage_oauth"
        ],
        "displayName": "OAuth token endpoints",
        "operationId": "o-auth-token-endpoints",
        "description": "This endpoint is used to exchange an authorization code or refresh token for an access token.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/oauth/token"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "grant_type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/oauth/token",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "grant_type": "grant_type"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "key": "value"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/oauth/token \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"grant_type\": \"grant_type\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_oauth.oAuthAuthorizeEndpoint": {
        "id": "endpoint_oauth.oAuthAuthorizeEndpoint",
        "namespace": [
          "subpackage_oauth"
        ],
        "displayName": "OAuth authorize endpoint",
        "operationId": "o-auth-authorize-endpoint",
        "description": "This endpoint is used to initiate the OAuth authorization flow. there are two purposes for this endpoint: 1. Authenticate a user with an OAuth provider. 2. Link an existing user with an OAuth provider.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/auth/oauth/authorize/"
          },
          {
            "type": "pathParameter",
            "value": "provider_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "provider_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "provider_scope",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "error_redirect_uri",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "after_callback_redirect_url",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "client_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "client_secret",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "redirect_uri",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "scope",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "state",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "grant_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code_challenge",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code_challenge_method",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "response_type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [],
        "examples": [
          {
            "path": "/auth/oauth/authorize/provider_id",
            "responseStatusCode": 204,
            "pathParameters": {
              "provider_id": "provider_id"
            },
            "queryParameters": {
              "client_id": "client_id",
              "client_secret": "client_secret",
              "redirect_uri": "redirect_uri",
              "scope": "scope",
              "state": "state",
              "grant_type": "grant_type",
              "code_challenge": "code_challenge",
              "code_challenge_method": "code_challenge_method",
              "response_type": "response_type"
            },
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/auth/oauth/authorize/provider_id \\\n     -d client_id=client_id \\\n     -d client_secret=client_secret \\\n     -d redirect_uri=redirect_uri \\\n     -d scope=scope \\\n     -d state=state \\\n     -d grant_type=grant_type \\\n     -d code_challenge=code_challenge \\\n     -d code_challenge_method=code_challenge_method \\\n     -d response_type=response_type",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_otp.signInWithACode": {
        "id": "endpoint_otp.signInWithACode",
        "namespace": [
          "subpackage_otp"
        ],
        "displayName": "Sign in with a code",
        "operationId": "sign-in-with-a-code",
        "description": "Sign in with a code",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/otp/sign-in"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_otp:PostAuthOtpSignInResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/otp/sign-in",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "refresh_token": "i8ns3aq2...14y",
                "access_token": "eyJhmMiJB2TO...diI4QT",
                "is_new_user": true,
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/otp/sign-in \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_otp.sendSignInCode": {
        "id": "endpoint_otp.sendSignInCode",
        "namespace": [
          "subpackage_otp"
        ],
        "displayName": "Send sign-in code",
        "operationId": "send-sign-in-code",
        "description": "Send a code to the user's email address for sign-in.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/otp/send-sign-in-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The email to sign in with."
                },
                {
                  "key": "callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The base callback URL to construct the magic link from. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/auth/otp/sign-in` endpoint."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_otp:PostAuthOtpSendSignInCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/otp/send-sign-in-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "johndoe@example.com",
                "callback_url": "https://example.com/handler/magic-link-callback"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "nonce": "nonce"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/otp/send-sign-in-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"johndoe@example.com\",\n  \"callback_url\": \"https://example.com/handler/magic-link-callback\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_otp.mfaSignIn": {
        "id": "endpoint_otp.mfaSignIn",
        "namespace": [
          "subpackage_otp"
        ],
        "displayName": "MFA sign in",
        "operationId": "mfa-sign-in",
        "description": "Complete multi-factor authorization to sign in, with a TOTP and an MFA attempt code",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/mfa/sign-in"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "type",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "totp",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_otp:PostAuthMfaSignInResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/mfa/sign-in",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "type": "type",
                "totp": "totp",
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "refresh_token": "i8ns3aq2...14y",
                "access_token": "eyJhmMiJB2TO...diI4QT",
                "is_new_user": true,
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/mfa/sign-in \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"type\": \"type\",\n  \"totp\": \"totp\",\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_otp.checkSignInCode": {
        "id": "endpoint_otp.checkSignInCode",
        "namespace": [
          "subpackage_otp"
        ],
        "displayName": "Check sign in code",
        "operationId": "check-sign-in-code",
        "description": "Check if a sign in code is valid without using it",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/otp/sign-in/check-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_otp:PostAuthOtpSignInCheckCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/otp/sign-in/check-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "is_code_valid": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/otp/sign-in/check-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.updatePassword": {
        "id": "endpoint_password.updatePassword",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Update password",
        "operationId": "update-password",
        "description": "Update the password of the current user, requires the old password",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/update"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requestHeaders": [
          {
            "key": "x-stack-refresh-token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "old_password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "new_password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordUpdateResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/update",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "old_password": "old_password",
                "new_password": "new_password"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/update \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"old_password\": \"old_password\",\n  \"new_password\": \"new_password\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.signUpWithEmailAndPassword": {
        "id": "endpoint_password.signUpWithEmailAndPassword",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Sign up with email and password",
        "operationId": "sign-up-with-email-and-password",
        "description": "Create a new account with email and password",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/sign-up"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The email to sign in with."
                },
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "verification_callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The base callback URL to construct a verification link for the verification e-mail. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/contact-channels/verify` endpoint."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordSignUpResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/sign-up",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "johndoe@example.com",
                "password": "password",
                "verification_callback_url": "https://example.com/handler/email-verification"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "access_token": "access_token",
                "refresh_token": "refresh_token",
                "user_id": "user_id"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/sign-up \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"johndoe@example.com\",\n  \"password\": \"password\",\n  \"verification_callback_url\": \"https://example.com/handler/email-verification\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.signInWithEmailAndPassword": {
        "id": "endpoint_password.signInWithEmailAndPassword",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Sign in with email and password",
        "operationId": "sign-in-with-email-and-password",
        "description": "Sign in to an account with email and password",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/sign-in"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordSignInResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/sign-in",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "email",
                "password": "password"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "access_token": "access_token",
                "refresh_token": "refresh_token",
                "user_id": "user_id"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/sign-in \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"email\",\n  \"password\": \"password\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.setPassword": {
        "id": "endpoint_password.setPassword",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Set password",
        "operationId": "set-password",
        "description": "Set a new password for the current user",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/set"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordSetResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/set",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "password": "password"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/set \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"password\": \"password\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.sendResetPasswordCode": {
        "id": "endpoint_password.sendResetPasswordCode",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Send reset password code",
        "operationId": "send-reset-password-code",
        "description": "Send a code to the user's email address for resetting the password.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/send-reset-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordSendResetCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/send-reset-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "email",
                "callback_url": "callback_url"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": "success"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/send-reset-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"email\",\n  \"callback_url\": \"callback_url\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.resetPasswordWithACode": {
        "id": "endpoint_password.resetPasswordWithACode",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Reset password with a code",
        "operationId": "reset-password-with-a-code",
        "description": "Reset password with a code",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/reset"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordResetResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/reset",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "password": "password",
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/reset \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"password\": \"password\",\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_password.checkResetPasswordCode": {
        "id": "endpoint_password.checkResetPasswordCode",
        "namespace": [
          "subpackage_password"
        ],
        "displayName": "Check reset password code",
        "operationId": "check-reset-password-code",
        "description": "Check if a reset password code is valid without using it",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/password/reset/check-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_password:PostAuthPasswordResetCheckCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/password/reset/check-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "is_code_valid": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/password/reset/check-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions.listTeamPermissionsOfAUser": {
        "id": "endpoint_permissions.listTeamPermissionsOfAUser",
        "namespace": [
          "subpackage_permissions"
        ],
        "displayName": "List team permissions of a user",
        "operationId": "list-team-permissions-of-a-user",
        "description": "Query and filter the permission with `team_id`, `user_id`, and `permission_id`. Note that this might contain the permissions with the same permission ID across different teams and users. `(team_id, user_id, permission_id)` together uniquely identify a permission.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/team-permissions"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the team ID. If set, only the permissions of the members in a specific team will be returned."
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the user ID. If set, only the permissions this user has will be returned. Client request must set `user_id=me`"
          },
          {
            "key": "permission_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the permission ID. If set, only the permissions with this specific ID will be returned"
          },
          {
            "key": "recursive",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Whether to list permissions recursively. If set to `false`, only the permission the users directly have will be listed. If set to `true` all the direct and indirect permissions will be listed."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_permissions:GetTeamPermissionsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-permissions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "team_id": "cce084a3-28b7-418e-913e-c8ee6d802ea4",
              "user_id": "me",
              "permission_id": "16399452-c4f3-4554-8e44-c2d67bb60360",
              "recursive": "true"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "id": "read_secret_info",
                    "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                    "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e"
                  }
                ],
                "pagination": {
                  "next_cursor": "b3d396b8-c574-4c80-97b3-50031675ceb2"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/team-permissions \\\n     -d team_id=cce084a3-28b7-418e-913e-c8ee6d802ea4 \\\n     -d user_id=me \\\n     -d permission_id=16399452-c4f3-4554-8e44-c2d67bb60360 \\\n     -d recursive=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions.grantATeamPermissionToAUser": {
        "id": "endpoint_permissions.grantATeamPermissionToAUser",
        "namespace": [
          "subpackage_permissions"
        ],
        "displayName": "Grant a team permission to a user",
        "operationId": "grant-a-team-permission-to-a-user",
        "description": "Grant a team permission to a user (the team permission must be created first on the Stack dashboard)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-permissions/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "permission_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "permission_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The permission ID used to uniquely identify a permission. Can either be a custom permission with lowercase letters, numbers, `:`, and `_` characters, or one of the system permissions: `$update_team`, `$delete_team`, `$read_members`, `$remove_members`, `$invite_members`"
          }
        ],
        "queryParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the team ID. If set, only the permissions of the members in a specific team will be returned."
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the user ID. If set, only the permissions this user has will be returned. Client request must set `user_id=me`"
          },
          {
            "key": "permission_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the permission ID. If set, only the permissions with this specific ID will be returned"
          },
          {
            "key": "recursive",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Whether to list permissions recursively. If set to `false`, only the permission the users directly have will be listed. If set to `true` all the direct and indirect permissions will be listed."
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_permissions:PostTeamPermissionsTeamIdUserIdPermissionIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-permissions/{team_id}/3241a285-8329-4d69-8f3d-316e08cf140c/read_secret_info",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
              "permission_id": "read_secret_info"
            },
            "queryParameters": {
              "team_id": "cce084a3-28b7-418e-913e-c8ee6d802ea4",
              "user_id": "me",
              "permission_id": "16399452-c4f3-4554-8e44-c2d67bb60360",
              "recursive": "true"
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "read_secret_info",
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://api.stack-auth.com/api/v1/team-permissions/{team_id}/3241a285-8329-4d69-8f3d-316e08cf140c/read_secret_info?team_id=cce084a3-28b7-418e-913e-c8ee6d802ea4&user_id=me&permission_id=16399452-c4f3-4554-8e44-c2d67bb60360&recursive=true\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions.revokeATeamPermissionFromAUser": {
        "id": "endpoint_permissions.revokeATeamPermissionFromAUser",
        "namespace": [
          "subpackage_permissions"
        ],
        "displayName": "Revoke a team permission from a user",
        "operationId": "revoke-a-team-permission-from-a-user",
        "description": "Revoke a team permission from a user",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/team-permissions/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "permission_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          },
          {
            "key": "permission_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The permission ID used to uniquely identify a permission. Can either be a custom permission with lowercase letters, numbers, `:`, and `_` characters, or one of the system permissions: `$update_team`, `$delete_team`, `$read_members`, `$remove_members`, `$invite_members`"
          }
        ],
        "queryParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the team ID. If set, only the permissions of the members in a specific team will be returned."
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the user ID. If set, only the permissions this user has will be returned. Client request must set `user_id=me`"
          },
          {
            "key": "permission_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter with the permission ID. If set, only the permissions with this specific ID will be returned"
          },
          {
            "key": "recursive",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Whether to list permissions recursively. If set to `false`, only the permission the users directly have will be listed. If set to `true` all the direct and indirect permissions will be listed."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_permissions:DeleteTeamPermissionsTeamIdUserIdPermissionIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-permissions/team_id/3241a285-8329-4d69-8f3d-316e08cf140c/read_secret_info",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id",
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
              "permission_id": "read_secret_info"
            },
            "queryParameters": {
              "team_id": "cce084a3-28b7-418e-913e-c8ee6d802ea4",
              "user_id": "me",
              "permission_id": "16399452-c4f3-4554-8e44-c2d67bb60360",
              "recursive": "true"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://api.stack-auth.com/api/v1/team-permissions/team_id/3241a285-8329-4d69-8f3d-316e08cf140c/read_secret_info?team_id=cce084a3-28b7-418e-913e-c8ee6d802ea4&user_id=me&permission_id=16399452-c4f3-4554-8e44-c2d67bb60360&recursive=true\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_projects.getTheCurrentProject": {
        "id": "endpoint_projects.getTheCurrentProject",
        "namespace": [
          "subpackage_projects"
        ],
        "displayName": "Get the current project",
        "operationId": "get-the-current-project",
        "description": "Get the current project information including display name, oauth providers and authentication methods. Useful for display the available login options to the user.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/projects/current"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_projects:GetProjectsCurrentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/projects/current",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "e0b52f4d-dece-408c-af49-d23061bb0f8d",
                "display_name": "MyMusic",
                "config": {
                  "sign_up_enabled": true,
                  "credential_enabled": true,
                  "magic_link_enabled": true,
                  "passkey_enabled": true,
                  "client_team_creation_enabled": true,
                  "client_user_deletion_enabled": true
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/projects/current",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sessions.createSession": {
        "id": "endpoint_sessions.createSession",
        "namespace": [
          "subpackage_sessions"
        ],
        "displayName": "Create session",
        "operationId": "create-session",
        "description": "Create a new session for a given user. This will return a refresh token that can be used to impersonate the user.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/sessions"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "user_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The ID of the user, or the special value `me` for the currently authenticated user"
                },
                {
                  "key": "expires_in_millis",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "double",
                            "default": 31536000000
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_sessions:PostAuthSessionsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/sessions",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "refresh_token": "refresh_token",
                "access_token": "access_token"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/sessions \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"user_id\": \"3241a285-8329-4d69-8f3d-316e08cf140c\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sessions.signOutOfTheCurrentSession": {
        "id": "endpoint_sessions.signOutOfTheCurrentSession",
        "namespace": [
          "subpackage_sessions"
        ],
        "displayName": "Sign out of the current session",
        "operationId": "sign-out-of-the-current-session",
        "description": "Sign out of the current session and invalidate the refresh token",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/auth/sessions/current"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requestHeaders": [
          {
            "key": "x-stack-refresh-token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_sessions:DeleteAuthSessionsCurrentResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/sessions/current",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "x-stack-refresh-token": "x-stack-refresh-token"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.stack-auth.com/api/v1/auth/sessions/current \\\n     -H \"x-stack-refresh-token: x-stack-refresh-token\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_sessions.refreshAccessToken": {
        "id": "endpoint_sessions.refreshAccessToken",
        "namespace": [
          "subpackage_sessions"
        ],
        "displayName": "Refresh access token",
        "operationId": "refresh-access-token",
        "description": "Get a new access token using a refresh token",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/auth/sessions/current/refresh"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requestHeaders": [
          {
            "key": "x-stack-refresh-token",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_sessions:PostAuthSessionsCurrentRefreshResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/auth/sessions/current/refresh",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "x-stack-refresh-token": "x-stack-refresh-token"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "access_token": "access_token"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/auth/sessions/current/refresh \\\n     -H \"x-stack-refresh-token: x-stack-refresh-token\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.listTeams": {
        "id": "endpoint_teams.listTeams",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "List teams",
        "operationId": "list-teams",
        "description": "List all the teams in the project.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/teams"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Filter for the teams that the user is a member of. Can be either `me` or an ID. Must be `me` in the client API"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:GetTeamsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "user_id": "me"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "created_at_millis": 1630000000000,
                    "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                    "display_name": "My Team",
                    "server_metadata": {
                      "key": "value"
                    },
                    "profile_image_url": "https://example.com/image.jpg",
                    "client_metadata": {
                      "key": "value"
                    },
                    "client_read_only_metadata": {
                      "key": "value"
                    }
                  }
                ],
                "pagination": {
                  "next_cursor": "b3d396b8-c574-4c80-97b3-50031675ceb2"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://api.stack-auth.com/api/v1/teams \\\n     -d user_id=me",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.createATeam": {
        "id": "endpoint_teams.createATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Create a team",
        "operationId": "create-a-team",
        "description": "Create a new team and optionally add the current user as a member.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/teams"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Human-readable team display name. This is not a unique identifier."
                },
                {
                  "key": "creator_user_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "The ID of the creator of the team. If not specified, the user will not be added to the team. Can be either \"me\" or the ID of the user. Only used on the client side."
                },
                {
                  "key": "client_read_only_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                },
                {
                  "key": "server_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                },
                {
                  "key": "client_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display_name": "My Team",
                "creator_user_id": "me",
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                },
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "created_at_millis": 1630000000000,
                "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "display_name": "My Team",
                "server_metadata": {
                  "key": "value"
                },
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/teams \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display_name\": \"My Team\",\n  \"creator_user_id\": \"me\",\n  \"client_read_only_metadata\": {\n    \"key\": \"value\"\n  },\n  \"server_metadata\": {\n    \"key\": \"value\"\n  },\n  \"profile_image_url\": \"https://example.com/image.jpg\",\n  \"client_metadata\": {\n    \"key\": \"value\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.listTeamMembersProfiles": {
        "id": "endpoint_teams.listTeamMembersProfiles",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "List team members profiles",
        "operationId": "list-team-members-profiles",
        "description": "List team members profiles and filter by team ID and user ID",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/team-member-profiles"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:GetTeamMemberProfilesResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-member-profiles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "user": {
                      "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                      "primary_email_verified": true,
                      "primary_email_auth_enabled": true,
                      "signed_up_at_millis": 1630000000000,
                      "last_active_at_millis": 1630000000000,
                      "primary_email": "johndoe@example.com",
                      "display_name": "John Doe",
                      "selected_team": {
                        "created_at_millis": 1630000000000,
                        "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                        "display_name": "My Team",
                        "server_metadata": {
                          "key": "value"
                        },
                        "profile_image_url": "https://example.com/image.jpg",
                        "client_metadata": {
                          "key": "value"
                        },
                        "client_read_only_metadata": {
                          "key": "value"
                        }
                      },
                      "selected_team_id": "team-id",
                      "profile_image_url": "https://example.com/image.jpg",
                      "client_metadata": {
                        "key": "value"
                      },
                      "client_read_only_metadata": {
                        "key": "value"
                      },
                      "server_metadata": {
                        "key": "value"
                      }
                    },
                    "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                    "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                    "display_name": "John Doe",
                    "profile_image_url": "https://example.com/image.jpg"
                  }
                ],
                "pagination": {
                  "next_cursor": "b3d396b8-c574-4c80-97b3-50031675ceb2"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/team-member-profiles",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.getATeam": {
        "id": "endpoint_teams.getATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Get a team",
        "operationId": "get-a-team",
        "description": "Get a team by ID.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:GetTeamsTeamIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams/team_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "created_at_millis": 1630000000000,
                "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "display_name": "My Team",
                "server_metadata": {
                  "key": "value"
                },
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/teams/team_id",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.deleteATeam": {
        "id": "endpoint_teams.deleteATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Delete a team",
        "operationId": "delete-a-team",
        "description": "Delete a team by ID.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:DeleteTeamsTeamIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams/team_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.stack-auth.com/api/v1/teams/team_id",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.updateATeam": {
        "id": "endpoint_teams.updateATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Update a team",
        "operationId": "update-a-team",
        "description": "Update the team information by ID.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/teams/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "client_read_only_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                },
                {
                  "key": "server_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
                },
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Human-readable team display name. This is not a unique identifier."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                },
                {
                  "key": "client_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PatchTeamsTeamIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/teams/team_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                },
                "display_name": "My Team",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "created_at_millis": 1630000000000,
                "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "display_name": "My Team",
                "server_metadata": {
                  "key": "value"
                },
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.stack-auth.com/api/v1/teams/team_id \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"client_read_only_metadata\": {\n    \"key\": \"value\"\n  },\n  \"server_metadata\": {\n    \"key\": \"value\"\n  },\n  \"display_name\": \"My Team\",\n  \"profile_image_url\": \"https://example.com/image.jpg\",\n  \"client_metadata\": {\n    \"key\": \"value\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.sendAnEmailToInviteAUserToATeam": {
        "id": "endpoint_teams.sendAnEmailToInviteAUserToATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Send an email to invite a user to a team",
        "operationId": "send-an-email-to-invite-a-user-to-a-team",
        "description": "The user receiving this email can join the team by clicking on the link in the email. If the user does not have an account yet, they will be prompted to create one.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-invitations/send-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "team_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The unique identifier of the team"
                },
                {
                  "key": "email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The email of the user to invite."
                },
                {
                  "key": "callback_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "The base callback URL to construct an invite link with. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/team-invitations/accept` endpoint."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamInvitationsSendCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-invitations/send-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "email": "johndoe@example.com",
                "callback_url": "https://example.com/handler/team-invitation"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/team-invitations/send-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"team_id\": \"ad962777-8244-496a-b6a2-e0c6a449c79e\",\n  \"email\": \"johndoe@example.com\",\n  \"callback_url\": \"https://example.com/handler/team-invitation\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.inviteAUserToATeam": {
        "id": "endpoint_teams.inviteAUserToATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Invite a user to a team",
        "operationId": "invite-a-user-to-a-team",
        "description": "Send an email to a user to invite them to a team",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-invitations/accept"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamInvitationsAcceptResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-invitations/accept",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {}
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/team-invitations/accept \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.addAUserToATeam": {
        "id": "endpoint_teams.addAUserToATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Add a user to a team",
        "operationId": "add-a-user-to-a-team",
        "description": "",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-memberships/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": []
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamMembershipsTeamIdUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-memberships/{team_id}/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "team_id": "team_id",
                "user_id": "user_id"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/team-memberships/{team_id}/3241a285-8329-4d69-8f3d-316e08cf140c \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.removeAUserFromATeam": {
        "id": "endpoint_teams.removeAUserFromATeam",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Remove a user from a team",
        "operationId": "remove-a-user-from-a-team",
        "description": "",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/team-memberships/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:DeleteTeamMembershipsTeamIdUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-memberships/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id",
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.stack-auth.com/api/v1/team-memberships/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.getATeamMemberProfile": {
        "id": "endpoint_teams.getATeamMemberProfile",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Get a team member profile",
        "operationId": "get-a-team-member-profile",
        "description": "Get a team member profile by user ID",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/team-member-profiles/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:GetTeamMemberProfilesTeamIdUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-member-profiles/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id",
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "user": {
                  "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                  "primary_email_verified": true,
                  "primary_email_auth_enabled": true,
                  "signed_up_at_millis": 1630000000000,
                  "last_active_at_millis": 1630000000000,
                  "primary_email": "johndoe@example.com",
                  "display_name": "John Doe",
                  "selected_team": {
                    "created_at_millis": 1630000000000,
                    "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                    "display_name": "My Team",
                    "server_metadata": {
                      "key": "value"
                    },
                    "profile_image_url": "https://example.com/image.jpg",
                    "client_metadata": {
                      "key": "value"
                    },
                    "client_read_only_metadata": {
                      "key": "value"
                    }
                  },
                  "selected_team_id": "team-id",
                  "profile_image_url": "https://example.com/image.jpg",
                  "client_metadata": {
                    "key": "value"
                  },
                  "client_read_only_metadata": {
                    "key": "value"
                  },
                  "server_metadata": {
                    "key": "value"
                  }
                },
                "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/team-member-profiles/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.updateATeamMemberProfile": {
        "id": "endpoint_teams.updateATeamMemberProfile",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Update a team member profile",
        "operationId": "update-a-team-member-profile",
        "description": "Update a team member profile by user ID",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/team-member-profiles/"
          },
          {
            "type": "pathParameter",
            "value": "team_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Human-readable team member display name. This is not a unique identifier. Note that this is separate from the display_name of the user."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for team member. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PatchTeamMemberProfilesTeamIdUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-member-profiles/team_id/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "team_id": "team_id",
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "user": {
                  "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                  "primary_email_verified": true,
                  "primary_email_auth_enabled": true,
                  "signed_up_at_millis": 1630000000000,
                  "last_active_at_millis": 1630000000000,
                  "primary_email": "johndoe@example.com",
                  "display_name": "John Doe",
                  "selected_team": {
                    "created_at_millis": 1630000000000,
                    "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                    "display_name": "My Team",
                    "server_metadata": {
                      "key": "value"
                    },
                    "profile_image_url": "https://example.com/image.jpg",
                    "client_metadata": {
                      "key": "value"
                    },
                    "client_read_only_metadata": {
                      "key": "value"
                    }
                  },
                  "selected_team_id": "team-id",
                  "profile_image_url": "https://example.com/image.jpg",
                  "client_metadata": {
                    "key": "value"
                  },
                  "client_read_only_metadata": {
                    "key": "value"
                  },
                  "server_metadata": {
                    "key": "value"
                  }
                },
                "team_id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.stack-auth.com/api/v1/team-member-profiles/team_id/3241a285-8329-4d69-8f3d-316e08cf140c \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display_name\": \"John Doe\",\n  \"profile_image_url\": \"https://example.com/image.jpg\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.getTeamInvitationDetails": {
        "id": "endpoint_teams.getTeamInvitationDetails",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Get team invitation details",
        "operationId": "get-team-invitation-details",
        "description": "Get additional information about a team invitation code",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-invitations/accept/details"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamInvitationsAcceptDetailsResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-invitations/accept/details",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "team_id": "team_id",
                "team_display_name": "team_display_name"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/team-invitations/accept/details \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_teams.checkIfATeamInvitationCodeIsValid": {
        "id": "endpoint_teams.checkIfATeamInvitationCodeIsValid",
        "namespace": [
          "subpackage_teams"
        ],
        "displayName": "Check if a team invitation code is valid",
        "operationId": "check-if-a-team-invitation-code-is-valid",
        "description": "Check if a team invitation code is valid without using it",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/team-invitations/accept/check-code"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "code",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_teams:PostTeamInvitationsAcceptCheckCodeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/team-invitations/accept/check-code",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "code": "code"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "is_code_valid": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/team-invitations/accept/check-code \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"code\": \"code\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.listUsers": {
        "id": "endpoint_users.listUsers",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "List users",
        "operationId": "list-users",
        "description": "Lists all the users in the project.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "queryParameters": [
          {
            "key": "team_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "Only return users who are members of the given team"
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              }
            },
            "description": "The maximum number of items to return"
          },
          {
            "key": "cursor",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The cursor to start the result set from."
          },
          {
            "key": "order_by",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "The field to sort the results by. Defaults to signed_up_at"
          },
          {
            "key": "desc",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "Whether to sort the results in descending order. Defaults to false"
          },
          {
            "key": "query",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "description": "A search query to filter the results by. This is a free-text search that is applied to the user's display name and primary email."
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:GetUsersResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "items": [
                  {
                    "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                    "primary_email_verified": true,
                    "primary_email_auth_enabled": true,
                    "signed_up_at_millis": 1630000000000,
                    "last_active_at_millis": 1630000000000,
                    "primary_email": "johndoe@example.com",
                    "display_name": "John Doe",
                    "selected_team": {
                      "created_at_millis": 1630000000000,
                      "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                      "display_name": "My Team",
                      "server_metadata": {
                        "key": "value"
                      },
                      "profile_image_url": "https://example.com/image.jpg",
                      "client_metadata": {
                        "key": "value"
                      },
                      "client_read_only_metadata": {
                        "key": "value"
                      }
                    },
                    "selected_team_id": "team-id",
                    "profile_image_url": "https://example.com/image.jpg",
                    "client_metadata": {
                      "key": "value"
                    },
                    "client_read_only_metadata": {
                      "key": "value"
                    },
                    "server_metadata": {
                      "key": "value"
                    }
                  }
                ],
                "pagination": {
                  "next_cursor": "b3d396b8-c574-4c80-97b3-50031675ceb2"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/users",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.createUser": {
        "id": "endpoint_users.createUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Create user",
        "operationId": "create-user",
        "description": "Creates a new user. E-mail authentication is always enabled, and no password is set, meaning the only way to authenticate the newly created user is through magic link.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Human-readable user display name. This is not a unique identifier."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                },
                {
                  "key": "client_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                },
                {
                  "key": "client_read_only_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                },
                {
                  "key": "server_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
                },
                {
                  "key": "primary_email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Primary email"
                },
                {
                  "key": "primary_email_verified",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the primary email has been verified to belong to this user"
                },
                {
                  "key": "primary_email_auth_enabled",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
                },
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Sets the user's password. Doing so revokes all current sessions."
                },
                {
                  "key": "totp_secret_base64",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Enables 2FA and sets a TOTP secret for the user. Set to null to disable 2FA."
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:PostUsersResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                },
                "primary_email": "johndoe@example.com",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "password": "my-new-password",
                "totp_secret_base64": "dG90cC1zZWNyZXQ="
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "signed_up_at_millis": 1630000000000,
                "last_active_at_millis": 1630000000000,
                "primary_email": "johndoe@example.com",
                "display_name": "John Doe",
                "selected_team": {
                  "created_at_millis": 1630000000000,
                  "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                  "display_name": "My Team",
                  "server_metadata": {
                    "key": "value"
                  },
                  "profile_image_url": "https://example.com/image.jpg",
                  "client_metadata": {
                    "key": "value"
                  },
                  "client_read_only_metadata": {
                    "key": "value"
                  }
                },
                "selected_team_id": "team-id",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://api.stack-auth.com/api/v1/users \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display_name\": \"John Doe\",\n  \"profile_image_url\": \"https://example.com/image.jpg\",\n  \"client_metadata\": {\n    \"key\": \"value\"\n  },\n  \"client_read_only_metadata\": {\n    \"key\": \"value\"\n  },\n  \"server_metadata\": {\n    \"key\": \"value\"\n  },\n  \"primary_email\": \"johndoe@example.com\",\n  \"primary_email_verified\": true,\n  \"primary_email_auth_enabled\": true,\n  \"password\": \"my-new-password\",\n  \"totp_secret_base64\": \"dG90cC1zZWNyZXQ=\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.getCurrentUser": {
        "id": "endpoint_users.getCurrentUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Get current user",
        "operationId": "get-current-user",
        "description": "Gets the currently authenticated user.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/users/me"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:GetUsersMeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "signed_up_at_millis": 1630000000000,
                "last_active_at_millis": 1630000000000,
                "primary_email": "johndoe@example.com",
                "display_name": "John Doe",
                "selected_team": {
                  "created_at_millis": 1630000000000,
                  "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                  "display_name": "My Team",
                  "server_metadata": {
                    "key": "value"
                  },
                  "profile_image_url": "https://example.com/image.jpg",
                  "client_metadata": {
                    "key": "value"
                  },
                  "client_read_only_metadata": {
                    "key": "value"
                  }
                },
                "selected_team_id": "team-id",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/users/me",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.deleteCurrentUser": {
        "id": "endpoint_users.deleteCurrentUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Delete current user",
        "operationId": "delete-current-user",
        "description": "Deletes the currently authenticated user. Use this with caution.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/users/me"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:DeleteUsersMeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.stack-auth.com/api/v1/users/me",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.updateCurrentUser": {
        "id": "endpoint_users.updateCurrentUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Update current user",
        "operationId": "update-current-user",
        "description": "Updates the currently authenticated user. Only the values provided will be updated.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/users/me"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Human-readable user display name. This is not a unique identifier."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                },
                {
                  "key": "client_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                },
                {
                  "key": "client_read_only_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                },
                {
                  "key": "server_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
                },
                {
                  "key": "primary_email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Primary email"
                },
                {
                  "key": "primary_email_verified",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the primary email has been verified to belong to this user"
                },
                {
                  "key": "primary_email_auth_enabled",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
                },
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Sets the user's password. Doing so revokes all current sessions."
                },
                {
                  "key": "totp_secret_base64",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Enables 2FA and sets a TOTP secret for the user. Set to null to disable 2FA."
                },
                {
                  "key": "selected_team_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "ID of the team currently selected by the user"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:PatchUsersMeResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                },
                "primary_email": "johndoe@example.com",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "password": "my-new-password",
                "totp_secret_base64": "dG90cC1zZWNyZXQ=",
                "selected_team_id": "team-id"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "signed_up_at_millis": 1630000000000,
                "last_active_at_millis": 1630000000000,
                "primary_email": "johndoe@example.com",
                "display_name": "John Doe",
                "selected_team": {
                  "created_at_millis": 1630000000000,
                  "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                  "display_name": "My Team",
                  "server_metadata": {
                    "key": "value"
                  },
                  "profile_image_url": "https://example.com/image.jpg",
                  "client_metadata": {
                    "key": "value"
                  },
                  "client_read_only_metadata": {
                    "key": "value"
                  }
                },
                "selected_team_id": "team-id",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.stack-auth.com/api/v1/users/me \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display_name\": \"John Doe\",\n  \"profile_image_url\": \"https://example.com/image.jpg\",\n  \"client_metadata\": {\n    \"key\": \"value\"\n  },\n  \"client_read_only_metadata\": {\n    \"key\": \"value\"\n  },\n  \"server_metadata\": {\n    \"key\": \"value\"\n  },\n  \"primary_email\": \"johndoe@example.com\",\n  \"primary_email_verified\": true,\n  \"primary_email_auth_enabled\": true,\n  \"password\": \"my-new-password\",\n  \"totp_secret_base64\": \"dG90cC1zZWNyZXQ=\",\n  \"selected_team_id\": \"team-id\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.getUser": {
        "id": "endpoint_users.getUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Get user",
        "operationId": "get-user",
        "description": "Gets a user by user ID.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:GetUsersUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "signed_up_at_millis": 1630000000000,
                "last_active_at_millis": 1630000000000,
                "primary_email": "johndoe@example.com",
                "display_name": "John Doe",
                "selected_team": {
                  "created_at_millis": 1630000000000,
                  "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                  "display_name": "My Team",
                  "server_metadata": {
                    "key": "value"
                  },
                  "profile_image_url": "https://example.com/image.jpg",
                  "client_metadata": {
                    "key": "value"
                  },
                  "client_read_only_metadata": {
                    "key": "value"
                  }
                },
                "selected_team_id": "team-id",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://api.stack-auth.com/api/v1/users/3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.deleteUser": {
        "id": "endpoint_users.deleteUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Delete user",
        "operationId": "delete-user",
        "description": "Deletes a user. Use this with caution.",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:DeleteUsersUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "success": true
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://api.stack-auth.com/api/v1/users/3241a285-8329-4d69-8f3d-316e08cf140c",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.updateUser": {
        "id": "endpoint_users.updateUser",
        "namespace": [
          "subpackage_users"
        ],
        "displayName": "Update user",
        "operationId": "update-user",
        "description": "Updates a user. Only the values provided will be updated.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "user_id"
          }
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://api.stack-auth.com/api/v1"
          }
        ],
        "pathParameters": [
          {
            "key": "user_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "description": "The ID of the user, or the special value `me` for the currently authenticated user"
          }
        ],
        "requests": [
          {
            "contentType": "application/json",
            "body": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "display_name",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Human-readable user display name. This is not a unique identifier."
                },
                {
                  "key": "profile_image_url",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
                },
                {
                  "key": "client_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
                },
                {
                  "key": "client_read_only_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
                },
                {
                  "key": "server_metadata",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
                },
                {
                  "key": "primary_email",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Primary email"
                },
                {
                  "key": "primary_email_verified",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the primary email has been verified to belong to this user"
                },
                {
                  "key": "primary_email_auth_enabled",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
                },
                {
                  "key": "password",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Sets the user's password. Doing so revokes all current sessions."
                },
                {
                  "key": "totp_secret_base64",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "Enables 2FA and sets a TOTP secret for the user. Set to null to disable 2FA."
                },
                {
                  "key": "selected_team_id",
                  "valueShape": {
                    "type": "alias",
                    "value": {
                      "type": "optional",
                      "shape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "ID of the team currently selected by the user"
                }
              ]
            }
          }
        ],
        "responses": [
          {
            "statusCode": 200,
            "body": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_users:PatchUsersUserIdResponse"
              }
            }
          }
        ],
        "examples": [
          {
            "path": "/users/3241a285-8329-4d69-8f3d-316e08cf140c",
            "responseStatusCode": 200,
            "pathParameters": {
              "user_id": "3241a285-8329-4d69-8f3d-316e08cf140c"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "display_name": "John Doe",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                },
                "primary_email": "johndoe@example.com",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "password": "my-new-password",
                "totp_secret_base64": "dG90cC1zZWNyZXQ=",
                "selected_team_id": "team-id"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "id": "3241a285-8329-4d69-8f3d-316e08cf140c",
                "primary_email_verified": true,
                "primary_email_auth_enabled": true,
                "signed_up_at_millis": 1630000000000,
                "last_active_at_millis": 1630000000000,
                "primary_email": "johndoe@example.com",
                "display_name": "John Doe",
                "selected_team": {
                  "created_at_millis": 1630000000000,
                  "id": "ad962777-8244-496a-b6a2-e0c6a449c79e",
                  "display_name": "My Team",
                  "server_metadata": {
                    "key": "value"
                  },
                  "profile_image_url": "https://example.com/image.jpg",
                  "client_metadata": {
                    "key": "value"
                  },
                  "client_read_only_metadata": {
                    "key": "value"
                  }
                },
                "selected_team_id": "team-id",
                "profile_image_url": "https://example.com/image.jpg",
                "client_metadata": {
                  "key": "value"
                },
                "client_read_only_metadata": {
                  "key": "value"
                },
                "server_metadata": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://api.stack-auth.com/api/v1/users/3241a285-8329-4d69-8f3d-316e08cf140c \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"display_name\": \"John Doe\",\n  \"profile_image_url\": \"https://example.com/image.jpg\",\n  \"client_metadata\": {\n    \"key\": \"value\"\n  },\n  \"client_read_only_metadata\": {\n    \"key\": \"value\"\n  },\n  \"server_metadata\": {\n    \"key\": \"value\"\n  },\n  \"primary_email\": \"johndoe@example.com\",\n  \"primary_email_verified\": true,\n  \"primary_email_auth_enabled\": true,\n  \"password\": \"my-new-password\",\n  \"totp_secret_base64\": \"dG90cC1zZWNyZXQ=\",\n  \"selected_team_id\": \"team-id\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_contactChannels:GetContactChannelsResponseItemsItem": {
        "name": "GetContactChannelsResponseItemsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the contact channel"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The value of the contact channel. For email, this should be a valid email address."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of the contact channel. Currently only \"email\" is supported."
            },
            {
              "key": "used_for_auth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
            },
            {
              "key": "is_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
            },
            {
              "key": "is_primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
            }
          ]
        }
      },
      "type_contactChannels:GetContactChannelsResponsePagination": {
        "name": "GetContactChannelsResponsePagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "next_cursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cursor to fetch the next page of results. null if there is no next page."
            }
          ]
        }
      },
      "type_contactChannels:GetContactChannelsResponse": {
        "name": "GetContactChannelsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_contactChannels:GetContactChannelsResponseItemsItem"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_contactChannels:GetContactChannelsResponsePagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_contactChannels:PostContactChannelsResponse": {
        "name": "PostContactChannelsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the contact channel"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The value of the contact channel. For email, this should be a valid email address."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of the contact channel. Currently only \"email\" is supported."
            },
            {
              "key": "used_for_auth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
            },
            {
              "key": "is_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
            },
            {
              "key": "is_primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
            }
          ]
        }
      },
      "type_contactChannels:PostContactChannelsVerifyResponse": {
        "name": "PostContactChannelsVerifyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_contactChannels:PostContactChannelsVerifyCheckCodeResponse": {
        "name": "PostContactChannelsVerifyCheckCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "is_code_valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_contactChannels:GetContactChannelsUserIdContactChannelIdResponse": {
        "name": "GetContactChannelsUserIdContactChannelIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the contact channel"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The value of the contact channel. For email, this should be a valid email address."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of the contact channel. Currently only \"email\" is supported."
            },
            {
              "key": "used_for_auth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
            },
            {
              "key": "is_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
            },
            {
              "key": "is_primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
            }
          ]
        }
      },
      "type_contactChannels:DeleteContactChannelsUserIdContactChannelIdResponse": {
        "name": "DeleteContactChannelsUserIdContactChannelIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_contactChannels:PatchContactChannelsUserIdContactChannelIdResponse": {
        "name": "PatchContactChannelsUserIdContactChannelIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the contact channel"
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The value of the contact channel. For email, this should be a valid email address."
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The type of the contact channel. Currently only \"email\" is supported."
            },
            {
              "key": "used_for_auth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP."
            },
            {
              "key": "is_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user."
            },
            {
              "key": "is_primary",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default."
            }
          ]
        }
      },
      "type_contactChannels:PostContactChannelsUserIdContactChannelIdSendVerificationCodeResponse": {
        "name": "PostContactChannelsUserIdContactChannelIdSendVerificationCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_otp:PostAuthOtpSignInResponse": {
        "name": "PostAuthOtpSignInResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "refresh_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Long-lived refresh token that can be used to obtain a new access token"
            },
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Short-lived access token that can be used to authenticate the user"
            },
            {
              "key": "is_new_user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the user is a new user"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            }
          ]
        }
      },
      "type_otp:PostAuthOtpSendSignInCodeResponse": {
        "name": "PostAuthOtpSendSignInCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "nonce",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_otp:PostAuthMfaSignInResponse": {
        "name": "PostAuthMfaSignInResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "refresh_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Long-lived refresh token that can be used to obtain a new access token"
            },
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Short-lived access token that can be used to authenticate the user"
            },
            {
              "key": "is_new_user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the user is a new user"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            }
          ]
        }
      },
      "type_otp:PostAuthOtpSignInCheckCodeResponse": {
        "name": "PostAuthOtpSignInCheckCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "is_code_valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_password:PostAuthPasswordUpdateResponse": {
        "name": "PostAuthPasswordUpdateResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_password:PostAuthPasswordSignUpResponse": {
        "name": "PostAuthPasswordSignUpResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "refresh_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_password:PostAuthPasswordSignInResponse": {
        "name": "PostAuthPasswordSignInResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "refresh_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_password:PostAuthPasswordSetResponse": {
        "name": "PostAuthPasswordSetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_password:PostAuthPasswordSendResetCodeResponse": {
        "name": "PostAuthPasswordSendResetCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_password:PostAuthPasswordResetResponse": {
        "name": "PostAuthPasswordResetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_password:PostAuthPasswordResetCheckCodeResponse": {
        "name": "PostAuthPasswordResetCheckCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "is_code_valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_permissions:GetTeamPermissionsResponseItemsItem": {
        "name": "GetTeamPermissionsResponseItemsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The permission ID used to uniquely identify a permission. Can either be a custom permission with lowercase letters, numbers, `:`, and `_` characters, or one of the system permissions: `$update_team`, `$delete_team`, `$read_members`, `$remove_members`, `$invite_members`"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            }
          ]
        }
      },
      "type_permissions:GetTeamPermissionsResponsePagination": {
        "name": "GetTeamPermissionsResponsePagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "next_cursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cursor to fetch the next page of results. null if there is no next page."
            }
          ]
        }
      },
      "type_permissions:GetTeamPermissionsResponse": {
        "name": "GetTeamPermissionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_permissions:GetTeamPermissionsResponseItemsItem"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_permissions:GetTeamPermissionsResponsePagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_permissions:PostTeamPermissionsTeamIdUserIdPermissionIdResponse": {
        "name": "PostTeamPermissionsTeamIdUserIdPermissionIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The permission ID used to uniquely identify a permission. Can either be a custom permission with lowercase letters, numbers, `:`, and `_` characters, or one of the system permissions: `$update_team`, `$delete_team`, `$read_members`, `$remove_members`, `$invite_members`"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            }
          ]
        }
      },
      "type_permissions:DeleteTeamPermissionsTeamIdUserIdPermissionIdResponse": {
        "name": "DeleteTeamPermissionsTeamIdUserIdPermissionIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_projects:GetProjectsCurrentResponseConfig": {
        "name": "GetProjectsCurrentResponseConfig",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "sign_up_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether users can sign up new accounts, or whether they are only allowed to sign in to existing accounts. Regardless of this option, the server API can always create new users with the `POST /users` endpoint."
            },
            {
              "key": "credential_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether email password authentication is enabled for this project"
            },
            {
              "key": "magic_link_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether magic link authentication is enabled for this project"
            },
            {
              "key": "passkey_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether passkey authentication is enabled for this project"
            },
            {
              "key": "client_team_creation_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether client users can create teams"
            },
            {
              "key": "client_user_deletion_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether client users can delete their own account from the client"
            }
          ]
        }
      },
      "type_projects:GetProjectsCurrentResponse": {
        "name": "GetProjectsCurrentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the project"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable project display name. This is not a unique identifier."
            },
            {
              "key": "config",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_projects:GetProjectsCurrentResponseConfig"
                }
              }
            }
          ]
        }
      },
      "type_sessions:PostAuthSessionsResponse": {
        "name": "PostAuthSessionsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "refresh_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_sessions:DeleteAuthSessionsCurrentResponse": {
        "name": "DeleteAuthSessionsCurrentResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_sessions:PostAuthSessionsCurrentRefreshResponse": {
        "name": "PostAuthSessionsCurrentRefreshResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "access_token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:GetTeamsResponseItemsItem": {
        "name": "GetTeamsResponseItemsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:GetTeamsResponsePagination": {
        "name": "GetTeamsResponsePagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "next_cursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cursor to fetch the next page of results. null if there is no next page."
            }
          ]
        }
      },
      "type_teams:GetTeamsResponse": {
        "name": "GetTeamsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamsResponseItemsItem"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamsResponsePagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:PostTeamsResponse": {
        "name": "PostTeamsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesResponseItemsItemUserSelectedTeam": {
        "name": "GetTeamMemberProfilesResponseItemsItemUserSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesResponseItemsItemUser": {
        "name": "GetTeamMemberProfilesResponseItemsItemUser",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamMemberProfilesResponseItemsItemUserSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesResponseItemsItem": {
        "name": "GetTeamMemberProfilesResponseItemsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_teams:GetTeamMemberProfilesResponseItemsItemUser"
                }
              }
            },
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable team member display name. This is not a unique identifier. Note that this is separate from the display_name of the user."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team member. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesResponsePagination": {
        "name": "GetTeamMemberProfilesResponsePagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "next_cursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cursor to fetch the next page of results. null if there is no next page."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesResponse": {
        "name": "GetTeamMemberProfilesResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamMemberProfilesResponseItemsItem"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamMemberProfilesResponsePagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:GetTeamsTeamIdResponse": {
        "name": "GetTeamsTeamIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:DeleteTeamsTeamIdResponse": {
        "name": "DeleteTeamsTeamIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_teams:PatchTeamsTeamIdResponse": {
        "name": "PatchTeamsTeamIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:PostTeamInvitationsSendCodeResponse": {
        "name": "PostTeamInvitationsSendCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_teams:PostTeamInvitationsAcceptResponse": {
        "name": "PostTeamInvitationsAcceptResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": []
        }
      },
      "type_teams:PostTeamMembershipsTeamIdUserIdResponse": {
        "name": "PostTeamMembershipsTeamIdUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:DeleteTeamMembershipsTeamIdUserIdResponse": {
        "name": "DeleteTeamMembershipsTeamIdUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesTeamIdUserIdResponseUserSelectedTeam": {
        "name": "GetTeamMemberProfilesTeamIdUserIdResponseUserSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesTeamIdUserIdResponseUser": {
        "name": "GetTeamMemberProfilesTeamIdUserIdResponseUser",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:GetTeamMemberProfilesTeamIdUserIdResponseUserSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_teams:GetTeamMemberProfilesTeamIdUserIdResponse": {
        "name": "GetTeamMemberProfilesTeamIdUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_teams:GetTeamMemberProfilesTeamIdUserIdResponseUser"
                }
              }
            },
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable team member display name. This is not a unique identifier. Note that this is separate from the display_name of the user."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team member. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            }
          ]
        }
      },
      "type_teams:PatchTeamMemberProfilesTeamIdUserIdResponseUserSelectedTeam": {
        "name": "PatchTeamMemberProfilesTeamIdUserIdResponseUserSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_teams:PatchTeamMemberProfilesTeamIdUserIdResponseUser": {
        "name": "PatchTeamMemberProfilesTeamIdUserIdResponseUser",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_teams:PatchTeamMemberProfilesTeamIdUserIdResponseUserSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_teams:PatchTeamMemberProfilesTeamIdUserIdResponse": {
        "name": "PatchTeamMemberProfilesTeamIdUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_teams:PatchTeamMemberProfilesTeamIdUserIdResponseUser"
                }
              }
            },
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "user_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable team member display name. This is not a unique identifier. Note that this is separate from the display_name of the user."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team member. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            }
          ]
        }
      },
      "type_teams:PostTeamInvitationsAcceptDetailsResponse": {
        "name": "PostTeamInvitationsAcceptDetailsResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "team_display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_teams:PostTeamInvitationsAcceptCheckCodeResponse": {
        "name": "PostTeamInvitationsAcceptCheckCodeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "is_code_valid",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_users:GetUsersResponseItemsItemSelectedTeam": {
        "name": "GetUsersResponseItemsItemSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:GetUsersResponseItemsItem": {
        "name": "GetUsersResponseItemsItem",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:GetUsersResponseItemsItemSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_users:GetUsersResponsePagination": {
        "name": "GetUsersResponsePagination",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "next_cursor",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "The cursor to fetch the next page of results. null if there is no next page."
            }
          ]
        }
      },
      "type_users:GetUsersResponse": {
        "name": "GetUsersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "list",
                  "itemShape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:GetUsersResponseItemsItem"
                    }
                  }
                }
              }
            },
            {
              "key": "pagination",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:GetUsersResponsePagination"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_users:PostUsersResponseSelectedTeam": {
        "name": "PostUsersResponseSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:PostUsersResponse": {
        "name": "PostUsersResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:PostUsersResponseSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_users:GetUsersMeResponseSelectedTeam": {
        "name": "GetUsersMeResponseSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:GetUsersMeResponse": {
        "name": "GetUsersMeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:GetUsersMeResponseSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_users:DeleteUsersMeResponse": {
        "name": "DeleteUsersMeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_users:PatchUsersMeResponseSelectedTeam": {
        "name": "PatchUsersMeResponseSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:PatchUsersMeResponse": {
        "name": "PatchUsersMeResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:PatchUsersMeResponseSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_users:GetUsersUserIdResponseSelectedTeam": {
        "name": "GetUsersUserIdResponseSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:GetUsersUserIdResponse": {
        "name": "GetUsersUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:GetUsersUserIdResponseSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      },
      "type_users:DeleteUsersUserIdResponse": {
        "name": "DeleteUsersUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "success",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Always equal to true."
            }
          ]
        }
      },
      "type_users:PatchUsersUserIdResponseSelectedTeam": {
        "name": "PatchUsersUserIdResponseSelectedTeam",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the team was created (the number of milliseconds since epoch, January 1, 1970, UTC)"
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the team here."
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the team"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "Human-readable team display name. This is not a unique identifier."
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for team. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            }
          ]
        }
      },
      "type_users:PatchUsersUserIdResponse": {
        "name": "PatchUsersUserIdResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              "description": "The unique identifier of the user"
            },
            {
              "key": "primary_email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Primary email"
            },
            {
              "key": "primary_email_verified",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email has been verified to belong to this user"
            },
            {
              "key": "primary_email_auth_enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              },
              "description": "Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP"
            },
            {
              "key": "display_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Human-readable user display name. This is not a unique identifier."
            },
            {
              "key": "selected_team",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_users:PatchUsersUserIdResponseSelectedTeam"
                    }
                  }
                }
              }
            },
            {
              "key": "selected_team_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "ID of the team currently selected by the user"
            },
            {
              "key": "profile_image_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL of the profile image for user. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in."
            },
            {
              "key": "signed_up_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user signed up identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            },
            {
              "key": "client_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client."
            },
            {
              "key": "client_read_only_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status."
            },
            {
              "key": "server_metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the user here."
            },
            {
              "key": "last_active_at_millis",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              },
              "description": "The time the user was last active identify=>`(the number of milliseconds since epoch, January 1, 1970, UTC)`"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_contactChannels": {
        "id": "subpackage_contactChannels",
        "name": "contactChannels"
      },
      "subpackage_oauth": {
        "id": "subpackage_oauth",
        "name": "oauth"
      },
      "subpackage_otp": {
        "id": "subpackage_otp",
        "name": "otp"
      },
      "subpackage_password": {
        "id": "subpackage_password",
        "name": "password"
      },
      "subpackage_permissions": {
        "id": "subpackage_permissions",
        "name": "permissions"
      },
      "subpackage_projects": {
        "id": "subpackage_projects",
        "name": "projects"
      },
      "subpackage_sessions": {
        "id": "subpackage_sessions",
        "name": "sessions"
      },
      "subpackage_teams": {
        "id": "subpackage_teams",
        "name": "teams"
      },
      "subpackage_users": {
        "id": "subpackage_users",
        "name": "users"
      }
    },
    "auths": {}
  }
]