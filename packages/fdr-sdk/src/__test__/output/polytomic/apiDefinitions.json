[
  {
    "id": "9212af81-e9e3-43ce-bb7e-997fe422dfe3",
    "endpoints": {
      "endpoint_connections.GetTypes": {
        "id": "endpoint_connections.GetTypes",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connection_types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connection_types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connection_types",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.List": {
        "id": "endpoint_connections.List",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Create": {
        "id": "endpoint_connections.Create",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Get": {
        "id": "endpoint_connections.Get",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Remove": {
        "id": "endpoint_connections.Remove",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/connections/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Update": {
        "id": "endpoint_connections.Update",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_identity.api/v1.GetIdentity": {
        "id": "endpoint_identity.api/v1.GetIdentity",
        "namespace": [
          "subpackage_identity"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/me"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/me",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/me",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.List": {
        "id": "endpoint_organization.List",
        "namespace": [
          "subpackage_organization"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Create": {
        "id": "endpoint_organization.Create",
        "namespace": [
          "subpackage_organization"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_domain",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_org_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Get": {
        "id": "endpoint_organization.Get",
        "namespace": [
          "subpackage_organization"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Update": {
        "id": "endpoint_organization.Update",
        "namespace": [
          "subpackage_organization"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_domain",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_org_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Create": {
        "id": "endpoint_users.Create",
        "namespace": [
          "subpackage_users"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "role",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/org_id/users",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "org_id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/org_id/users \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Get": {
        "id": "endpoint_users.Get",
        "namespace": [
          "subpackage_users"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/org_id/users/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id",
              "org_id": "org_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/org_id/users/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Remove": {
        "id": "endpoint_users.Remove",
        "namespace": [
          "subpackage_users"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/org_id/users/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id",
              "org_id": "org_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/org_id/users/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Update": {
        "id": "endpoint_users.Update",
        "namespace": [
          "subpackage_users"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "role",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/org_id/users/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id",
              "org_id": "org_id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/org_id/users/id \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.List": {
        "id": "endpoint_modelSync.List",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Get": {
        "id": "endpoint_modelSync.Get",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Start": {
        "id": "endpoint_modelSync.Start",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identities",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/id/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/id/executions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.Get": {
        "id": "endpoint_modelSync/executions.Get",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V1TopLevelResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/sync_id/executions/id",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "sync_id",
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "error": {
                  "key": "value"
                },
                "result": {
                  "key": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/sync_id/executions/id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "error": "string",
                "code": 0,
                "context": {
                  "string": {}
                },
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2021-05-23"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2021-05-23\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_:ApiError": {
        "name": "ApiError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RestErrResponse": {
        "name": "RestErrResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Application-specific error code."
            },
            {
              "key": "context",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Application context."
            },
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Error message."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Status text."
            }
          ]
        }
      },
      "type_:V1TopLevelResponse": {
        "name": "V1TopLevelResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_connections": {
        "id": "subpackage_connections",
        "name": "connections"
      },
      "subpackage_identity": {
        "id": "subpackage_identity",
        "name": "identity"
      },
      "subpackage_organization": {
        "id": "subpackage_organization",
        "name": "organization"
      },
      "subpackage_users": {
        "id": "subpackage_users",
        "name": "users"
      },
      "subpackage_modelSync": {
        "id": "subpackage_modelSync",
        "name": "modelSync"
      },
      "subpackage_modelSync/executions": {
        "id": "subpackage_modelSync/executions",
        "name": "executions"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    },
    "globalHeaders": [
      {
        "key": "X-Polytomic-Version",
        "valueShape": {
          "type": "alias",
          "value": {
            "type": "optional",
            "shape": {
              "type": "alias",
              "value": {
                "type": "literal",
                "value": {
                  "type": "stringLiteral",
                  "value": "2021-05-23"
                }
              }
            }
          }
        }
      }
    ]
  },
  {
    "id": "9b972bf3-4f92-48dd-8a15-386f34ae82e1",
    "endpoints": {
      "endpoint_bulkSync.GetDestination": {
        "id": "endpoint_bulkSync.GetDestination",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/dest/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncDestEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/dest/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "advanced": {
                      "items": {
                        "truncate_existing": {
                          "default": "",
                          "required": false
                        }
                      }
                    },
                    "mirror_schemas": {
                      "default": "",
                      "required": false
                    },
                    "schema": {
                      "default": "",
                      "required": false
                    }
                  },
                  "modes": [
                    {
                      "description": "Replace all records",
                      "id": "replace",
                      "label": "Replace",
                      "requires_identity": false,
                      "supports_field_sync_mode": false,
                      "supports_target_filters": false
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/dest/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/dest/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/dest/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/dest/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.GetSource": {
        "id": "endpoint_bulkSync.GetSource",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/source/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "refresh_schemas",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncSourceEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/source/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "key": "value"
                  },
                  "schemas": [
                    "schemas"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.List": {
        "id": "endpoint_bulkSync.List",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncListEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "active": true,
                    "destination_configuration": {
                      "schema": "my_schema"
                    },
                    "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "discover": true,
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "mode": "replace",
                    "name": "My Bulk Sync",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "schedule": {
                      "frequency": "manual",
                      "day_of_month": "1",
                      "day_of_week": "monday",
                      "hour": "0",
                      "minute": "0",
                      "month": "1"
                    },
                    "source_configuration": {
                      "replication_slot": "slot"
                    },
                    "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Create": {
        "id": "endpoint_bulkSync.Create",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_objects",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "disable_record_timestamps",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "discover",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "DEPRECATED: Use automatically_add_new_objects/automatically_add_new_fields instead"
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:BulkSchedule"
                  }
                }
              },
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "My Bulk Sync",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "destination_configuration": {
                    "schema": "my_schema"
                  },
                  "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "discover": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "mode": "replace",
                  "name": "My Bulk Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "frequency": "manual",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "hour": "0",
                    "minute": "0",
                    "month": "1",
                    "multi": {
                      "type": "type"
                    }
                  },
                  "source_configuration": {
                    "replication_slot": "slot"
                  },
                  "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"My Bulk Sync\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Get": {
        "id": "endpoint_bulkSync.Get",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "refresh_schemas",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "destination_configuration": {
                    "schema": "my_schema"
                  },
                  "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "discover": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "mode": "replace",
                  "name": "My Bulk Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "frequency": "manual",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "hour": "0",
                    "minute": "0",
                    "month": "1",
                    "multi": {
                      "type": "type"
                    }
                  },
                  "source_configuration": {
                    "replication_slot": "slot"
                  },
                  "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Remove": {
        "id": "endpoint_bulkSync.Remove",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "refresh_schemas",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d?refresh_schemas=true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Update": {
        "id": "endpoint_bulkSync.Update",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "description": "> 📘 Updating schemas\n>\n> Schema updates can be performed using the [Update Bulk Sync Schemas](https://apidocs.polytomic.com/api-reference/bulk-sync/schemas/patch) endpoint.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_objects",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "disable_record_timestamps",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "discover",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "DEPRECATED: Use automatically_add_new_objects/automatically_add_new_fields instead"
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:BulkSchedule"
                  }
                }
              },
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "My Bulk Sync",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "destination_configuration": {
                    "schema": "my_schema"
                  },
                  "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "discover": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "mode": "replace",
                  "name": "My Bulk Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "frequency": "manual",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "hour": "0",
                    "minute": "0",
                    "month": "1",
                    "multi": {
                      "type": "type"
                    }
                  },
                  "source_configuration": {
                    "replication_slot": "slot"
                  },
                  "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"My Bulk Sync\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Activate": {
        "id": "endpoint_bulkSync.Activate",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/activate"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncInput"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.List": {
        "id": "endpoint_bulkSync/schemas.List",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "filters",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "map",
                    "keyShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "valueShape": {
                      "type": "alias",
                      "value": {
                        "type": "optional",
                        "shape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListBulkSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "enabled": true,
                    "id": "table",
                    "partition_key": "pk"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "filters": {
                "string": "string"
              }
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode filters={\"string\":\"string\"}",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "filters": {
                "string": "string"
              }
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode filters={\"string\":\"string\"}",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.Patch": {
        "id": "endpoint_bulkSync/schemas.Patch",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:BulkSchema"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListBulkSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/id/schemas",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "id"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "enabled": true,
                    "id": "table",
                    "partition_key": "pk"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/id/schemas \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.Get": {
        "id": "endpoint_bulkSync/schemas.Get",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/table",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "table"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "enabled": true,
                  "id": "table",
                  "partition_key": "pk"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/table \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.Update": {
        "id": "endpoint_bulkSync/schemas.Update",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "enabled",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "partition_key",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/table",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "table"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "enabled": true,
                  "id": "table",
                  "partition_key": "pk"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/table \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetTypes": {
        "id": "endpoint_connections.GetTypes",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connection_types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionTypeResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connection_types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "envConfig": {
                      "key": "value"
                    },
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "use_oauth": true
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connection_types",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connection_types",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.List": {
        "id": "endpoint_connections.List",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionListResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "api_calls_last_24_hours": 2021,
                    "configuration": {
                      "database": "example",
                      "hostname": "postgres.example.com",
                      "password": "password",
                      "port": 5432,
                      "username": "user"
                    },
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "name": "My Postgres Connection",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "status": "healthy",
                    "status_error": "error message",
                    "type": {
                      "id": "postgresql",
                      "name": "PostgreSQL"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Create": {
        "id": "endpoint_connections.Create",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "redirect_url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "URL to redirect to after completing OAuth flow."
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "validate",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Validate connection configuration."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateConnectionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Postgres Connection",
                "type": "postgresql"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "auth_code": "auth_code",
                  "auth_url": "auth_url",
                  "configuration": {
                    "database": "example",
                    "hostname": "postgres.example.com",
                    "password": "password",
                    "port": 5432,
                    "username": "user"
                  },
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "My Postgres Connection",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "status": "healthy",
                  "status_error": "error message",
                  "type": {
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "operations": [
                      "operations"
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Postgres Connection\",\n  \"type\": \"postgresql\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Get": {
        "id": "endpoint_connections.Get",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "api_calls_last_24_hours": 2021,
                  "configuration": {
                    "database": "example",
                    "hostname": "postgres.example.com",
                    "password": "password",
                    "port": 5432,
                    "username": "user"
                  },
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "My Postgres Connection",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "status": "healthy",
                  "status_error": "error message",
                  "type": {
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "operations": [
                      "operations"
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Remove": {
        "id": "endpoint_connections.Remove",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "force",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d?force=true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Update": {
        "id": "endpoint_connections.Update",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "reconnect",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "validate",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Validate connection configuration."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateConnectionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Postgres Connection"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "auth_code": "auth_code",
                  "auth_url": "auth_url",
                  "configuration": {
                    "database": "example",
                    "hostname": "postgres.example.com",
                    "password": "password",
                    "port": 5432,
                    "username": "user"
                  },
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "My Postgres Connection",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "status": "healthy",
                  "status_error": "error message",
                  "type": {
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "operations": [
                      "operations"
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Postgres Connection\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetParameterValues": {
        "id": "endpoint_connections.GetParameterValues",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/parameter_values"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionParameterValuesResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/parameter_values",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "data": {
                    "allows_creation": true,
                    "values": [
                      {}
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/parameter_values \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/parameter_values",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/parameter_values \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/parameter_values",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/parameter_values \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/parameter_values",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/parameter_values \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetSource": {
        "id": "endpoint_connections.GetSource",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/source"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetConnectionMetaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/source",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "configuration": {}
                  },
                  "items": {
                    "items": {
                      "has_items": true
                    }
                  },
                  "requires_one_of": [
                    "requires_one_of"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/source \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetSourceFields": {
        "id": "endpoint_connections.GetSourceFields",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/source/fields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "query",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelFieldResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/source/fields",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "description": "Unique identifier",
                    "example": {
                      "key": "value"
                    },
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "label": "ID",
                    "name": "id",
                    "remote_type": "string",
                    "type": "string",
                    "unique": true,
                    "user_added": false
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/source/fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetTarget": {
        "id": "endpoint_connections.GetTarget",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/target"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "search",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetConnectionMetaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/target",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "type": "table",
              "search": "public.users"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "configuration": {}
                  },
                  "items": {
                    "items": {
                      "has_items": true
                    }
                  },
                  "requires_one_of": [
                    "requires_one_of"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/target \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=table \\\n     -d search=public.users",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetTargetFields": {
        "id": "endpoint_connections.GetTargetFields",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/target/fields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "refresh",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "target",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:TargetResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/target/fields",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "target": "database.table"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "fields": [
                    {
                      "association": false,
                      "createable": true,
                      "description": "Field description",
                      "filterable": true,
                      "id": "field1",
                      "name": "Field",
                      "required": true,
                      "source_type": "string",
                      "supports_identity": false,
                      "type": "string",
                      "updateable": true
                    }
                  ],
                  "id": "database.table",
                  "modes": [
                    {
                      "description": "Create records when they don't exist; don't update existing ones",
                      "label": "Create",
                      "mode": "create",
                      "requires_identity": true,
                      "supports_field_sync_mode": false,
                      "supports_target_filters": false
                    }
                  ],
                  "name": "Table",
                  "properties": {
                    "does_not_report_operation_counts": true,
                    "new_target_label": "new_target_label",
                    "optional_target_mappings": true,
                    "primary_metadata_object": "primary_metadata_object",
                    "requires_configuration": true,
                    "supports_field_creation": true,
                    "supports_field_type_selection": true,
                    "supports_target_filters": true,
                    "target_creator": true,
                    "use_field_names_as_labels": true
                  },
                  "refreshed_at": "2024-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/target/fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"database.table\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target/fields",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "target": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/target/fields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target/fields",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "target": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/target/fields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target/fields",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "target": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/target/fields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target/fields",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "target": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/target/fields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Post": {
        "id": "endpoint_models.Post",
        "namespace": [
          "subpackage_models"
        ],
        "description": "For a given connection and enrichment configuration, provides the valid sets of input fields.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/enrichment/"
          },
          {
            "type": "pathParameter",
            "value": "connection_id"
          },
          {
            "type": "literal",
            "value": "/inputfields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "connection_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:V2EnricherConfiguration"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V2GetEnrichmentInputFieldsResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/enrichment/248df4b7-aa70-47b8-a036-33ac447e668d/inputfields",
            "responseStatusCode": 200,
            "pathParameters": {
              "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  [
                    "data"
                  ]
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/248df4b7-aa70-47b8-a036-33ac447e668d/inputfields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 401,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 403,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 404,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 500,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Preview": {
        "id": "endpoint_models.Preview",
        "namespace": [
          "subpackage_models"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/model-preview"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateModelRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/model-preview",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "Users"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/model-preview \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"Users\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.List": {
        "id": "endpoint_models.List",
        "namespace": [
          "subpackage_models"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/models"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelListResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "configuration": {
                      "table": "public.contacts"
                    },
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher": {
                      "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "id",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "identifier": "id",
                    "labels": [
                      {}
                    ],
                    "name": "Contacts",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "relations": [
                      {
                        "from": "id"
                      }
                    ],
                    "tracking_columns": [
                      "tracking_columns"
                    ],
                    "type": "postgresql",
                    "version": 1
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Create": {
        "id": "endpoint_models.Create",
        "namespace": [
          "subpackage_models"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/models"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateModelRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "Users"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/models \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"Users\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Get": {
        "id": "endpoint_models.Get",
        "namespace": [
          "subpackage_models"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Remove": {
        "id": "endpoint_models.Remove",
        "namespace": [
          "subpackage_models"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Update": {
        "id": "endpoint_models.Update",
        "namespace": [
          "subpackage_models"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "additional_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelModelFieldRequest"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "enricher",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Enrichment"
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identifier",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "labels",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "relations",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelRelation"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "tracking_columns",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "async": false
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "Users"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d?async=false\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"Users\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Sample": {
        "id": "endpoint_models.Sample",
        "namespace": [
          "subpackage_models"
        ],
        "description": "Returns sample records from the model. The first ten records that the source provides will be returned after being enriched (if applicable). Synchronous requests must complete within 10s. If either querying or enrichment exceeds 10s, please use the async option.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/sample"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSampleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d/sample",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "records": [
                    {
                      "records": {}
                    }
                  ],
                  "warnings": [
                    "Enrichment failed for 4 records: you have ran out of credits"
                  ]
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d/sample \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.List": {
        "id": "endpoint_events.List",
        "namespace": [
          "subpackage_events"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/events"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "queryParameters": [
          {
            "key": "organization_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "starting_after",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "ending_before",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EventsEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/events",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "starting_after": "2020-01-01T00:00:00Z",
              "ending_before": "2020-01-01T00:00:00Z"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "created_at": "2024-01-01T00:00:00Z",
                    "event": {
                      "key": "value"
                    },
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "type": "sync.running"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=248df4b7-aa70-47b8-a036-33ac447e668d \\\n     --data-urlencode starting_after=2020-01-01T00:00:00Z \\\n     --data-urlencode ending_before=2020-01-01T00:00:00Z",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "string",
              "type": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=string \\\n     -d type=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "string",
              "type": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=string \\\n     -d type=string",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "string",
              "type": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=string \\\n     -d type=string",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.GetTypes": {
        "id": "endpoint_events.GetTypes",
        "namespace": [
          "subpackage_events"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/events_types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EventTypesEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/events_types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  "data"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/events_types \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events_types",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/events_types \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.Get": {
        "id": "endpoint_jobs.Get",
        "namespace": [
          "subpackage_jobs"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/jobs/"
          },
          {
            "type": "pathParameter",
            "value": "type"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:JobResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/jobs/createmodel/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "type": "createmodel"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/createmodel/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_identity.Get": {
        "id": "endpoint_identity.Get",
        "namespace": [
          "subpackage_identity"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/me"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetIdentityResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "is_organization": false,
                  "is_partner": false,
                  "is_system": false,
                  "is_user": true,
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_name": "My Organization",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/me",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/me",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.List": {
        "id": "endpoint_organization.List",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationsEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "id",
                    "issuer": "https://example.com",
                    "name": "My Organization",
                    "sso_domain": "example.com",
                    "sso_org_id": "123456"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Create": {
        "id": "endpoint_organization.Create",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "client_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "client_secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "issuer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "sso_domain",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_org_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Organization"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "issuer": "https://example.com",
                  "name": "My Organization",
                  "sso_domain": "example.com",
                  "sso_org_id": "123456"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Organization\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Get": {
        "id": "endpoint_organization.Get",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "issuer": "https://example.com",
                  "name": "My Organization",
                  "sso_domain": "example.com",
                  "sso_org_id": "123456"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Remove": {
        "id": "endpoint_organization.Remove",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Update": {
        "id": "endpoint_organization.Update",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "client_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "client_secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "issuer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "sso_domain",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_org_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Organization"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "issuer": "https://example.com",
                  "name": "My Organization",
                  "sso_domain": "example.com",
                  "sso_org_id": "123456"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Organization\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.List": {
        "id": "endpoint_users.List",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListUsersEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "email": "mail@example.com",
                    "id": "id",
                    "organization_id": "organization_id",
                    "role": "admin"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 404,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Create": {
        "id": "endpoint_users.Create",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "role",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "mail@example.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"mail@example.com\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 422,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 500,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Get": {
        "id": "endpoint_users.Get",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Remove": {
        "id": "endpoint_users.Remove",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Update": {
        "id": "endpoint_users.Update",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "role",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "mail@example.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"mail@example.com\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.CreateApiKey": {
        "id": "endpoint_users.CreateApiKey",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/keys"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "force",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:APIKeyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d/keys",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "value": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d/keys?force=true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id/keys",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id",
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/:org_id/users/:id/keys?force=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id/keys",
            "responseStatusCode": 404,
            "pathParameters": {
              "org_id": ":org_id",
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/:org_id/users/:id/keys?force=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id/keys",
            "responseStatusCode": 500,
            "pathParameters": {
              "org_id": ":org_id",
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/:org_id/users/:id/keys?force=true\" \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.List": {
        "id": "endpoint_permissions/policies.List",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListPoliciesResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "name": "Policy",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policy_actions": [
                      {
                        "action": "read",
                        "role_ids": [
                          "248df4b7-aa70-47b8-a036-33ac447e668d"
                        ]
                      }
                    ],
                    "system": false
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Create": {
        "id": "endpoint_permissions/policies.Create",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policy_actions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:PolicyAction"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PolicyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Policy",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policy_actions": [
                    {
                      "action": "read",
                      "role_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  ],
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Get": {
        "id": "endpoint_permissions/policies.Get",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PolicyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Policy",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policy_actions": [
                    {
                      "action": "read",
                      "role_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  ],
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Remove": {
        "id": "endpoint_permissions/policies.Remove",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Update": {
        "id": "endpoint_permissions/policies.Update",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policy_actions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:PolicyAction"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PolicyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Policy",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policy_actions": [
                    {
                      "action": "read",
                      "role_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  ],
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.List": {
        "id": "endpoint_permissions/roles.List",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleListResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "name": "Custom",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "system": false
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Create": {
        "id": "endpoint_permissions/roles.Create",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Custom",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Get": {
        "id": "endpoint_permissions/roles.Get",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Custom",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Remove": {
        "id": "endpoint_permissions/roles.Remove",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Update": {
        "id": "endpoint_permissions/roles.Update",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Custom",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.List": {
        "id": "endpoint_modelSync.List",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "active": true,
                    "fields": [
                      {
                        "source": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "target": "name"
                      }
                    ],
                    "filter_logic": "filter_logic",
                    "filters": [
                      {
                        "function": "Equality",
                        "field": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "field_id": "field1",
                        "label": "A"
                      }
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "identity": {
                      "function": "Equality",
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    },
                    "mode": "create",
                    "name": "Users Sync",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "override_fields": [
                      {
                        "source": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "target": "name"
                      }
                    ],
                    "overrides": [
                      {
                        "field": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "field_id": "field1"
                      }
                    ],
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "schedule": {
                      "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "sync_all_records": false,
                    "target": {
                      "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "object": "Users",
                      "configuration": {
                        "key": "value"
                      },
                      "search_values": {
                        "name": "value"
                      }
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Create": {
        "id": "endpoint_modelSync.Create",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "enricher",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Enrichment"
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filter_logic",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filters",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Filter"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identity",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Identity"
                      }
                    }
                  }
                }
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "override_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Values to set as sync target fields."
              },
              {
                "key": "overrides",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Override"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Conditional value replacement for field mappings."
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Schedule"
                  }
                }
              },
              {
                "key": "sync_all_records",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "target",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Target"
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "create",
                "name": "Users Sync",
                "schedule": {},
                "target": {
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "object": "Users"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "filter_logic": "filter_logic",
                  "filters": [
                    {
                      "function": "Equality",
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1",
                      "label": "A"
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identity": {
                    "function": "Equality",
                    "source": {
                      "field": "id",
                      "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "target": "name",
                    "new_field": true,
                    "remote_field_type_id": "string"
                  },
                  "mode": "create",
                  "name": "Users Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "override_fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "overrides": [
                    {
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1"
                    }
                  ],
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "frequency": "manual",
                    "hour": "12",
                    "job_id": 1,
                    "minute": "30",
                    "month": "1",
                    "run_after": {
                      "bulk_sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ],
                      "sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  },
                  "sync_all_records": false,
                  "target": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "object": "Users",
                    "configuration": {
                      "key": "value"
                    },
                    "filter_logic": "filter_logic",
                    "new_name": "new_name",
                    "search_values": {
                      "name": "value"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"create\",\n  \"name\": \"Users Sync\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    \"object\": \"Users\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetScheduleOptions": {
        "id": "endpoint_modelSync.GetScheduleOptions",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/schedules"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ScheduleOptionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/schedules",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "schedule_options": [
                    {
                      "description": "Runs when manually triggered",
                      "label": "Manual"
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/schedules \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/schedules",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/schedules \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/schedules",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/schedules \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Get": {
        "id": "endpoint_modelSync.Get",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "filter_logic": "filter_logic",
                  "filters": [
                    {
                      "function": "Equality",
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1",
                      "label": "A"
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identity": {
                    "function": "Equality",
                    "source": {
                      "field": "id",
                      "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "target": "name",
                    "new_field": true,
                    "remote_field_type_id": "string"
                  },
                  "mode": "create",
                  "name": "Users Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "override_fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "overrides": [
                    {
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1"
                    }
                  ],
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "frequency": "manual",
                    "hour": "12",
                    "job_id": 1,
                    "minute": "30",
                    "month": "1",
                    "run_after": {
                      "bulk_sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ],
                      "sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  },
                  "sync_all_records": false,
                  "target": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "object": "Users",
                    "configuration": {
                      "key": "value"
                    },
                    "filter_logic": "filter_logic",
                    "new_name": "new_name",
                    "search_values": {
                      "name": "value"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Remove": {
        "id": "endpoint_modelSync.Remove",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Update": {
        "id": "endpoint_modelSync.Update",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "enricher",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Enrichment"
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filter_logic",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filters",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Filter"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identity",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Identity"
                      }
                    }
                  }
                }
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "override_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Values to set as sync target fields."
              },
              {
                "key": "overrides",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Override"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Conditional value replacement for field mappings."
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Schedule"
                  }
                }
              },
              {
                "key": "sync_all_records",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "target",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Target"
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "create",
                "name": "Users Sync",
                "schedule": {},
                "target": {
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "object": "Users"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "filter_logic": "filter_logic",
                  "filters": [
                    {
                      "function": "Equality",
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1",
                      "label": "A"
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identity": {
                    "function": "Equality",
                    "source": {
                      "field": "id",
                      "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "target": "name",
                    "new_field": true,
                    "remote_field_type_id": "string"
                  },
                  "mode": "create",
                  "name": "Users Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "override_fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "overrides": [
                    {
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1"
                    }
                  ],
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "frequency": "manual",
                    "hour": "12",
                    "job_id": 1,
                    "minute": "30",
                    "month": "1",
                    "run_after": {
                      "bulk_sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ],
                      "sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  },
                  "sync_all_records": false,
                  "target": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "object": "Users",
                    "configuration": {
                      "key": "value"
                    },
                    "filter_logic": "filter_logic",
                    "new_name": "new_name",
                    "search_values": {
                      "name": "value"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"create\",\n  \"name\": \"Users Sync\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    \"object\": \"Users\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Activate": {
        "id": "endpoint_modelSync.Activate",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/activate"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncInput"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Start": {
        "id": "endpoint_modelSync.Start",
        "namespace": [
          "subpackage_modelSync"
        ],
        "description": "> 🚧 Force full resync\n>\n> Use caution when setting the `resync` parameter to `true`. This will force a full resync of the data from the source system. This can be a time-consuming operation and may impact the performance of the source system. It is recommended to only use this option when necessary.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "identities",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "resync",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:StartModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "status": "created"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetStatus": {
        "id": "endpoint_modelSync.GetStatus",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SyncStatusEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "current_execution": {
                    "completed_at": "2024-01-01T00:00:00Z",
                    "counts": {
                      "error": 5,
                      "insert": 80,
                      "total": 100,
                      "update": 15
                    },
                    "created_at": "2024-01-01T00:00:00Z",
                    "errors": [
                      "something went wrong"
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "started_at": "2024-01-01T00:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "last_execution": {
                    "completed_at": "2024-01-01T00:00:00Z",
                    "counts": {
                      "error": 5,
                      "insert": 80,
                      "total": 100,
                      "update": 15
                    },
                    "created_at": "2024-01-01T00:00:00Z",
                    "errors": [
                      "something went wrong"
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "started_at": "2024-01-01T00:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "next_execution_time": "2024-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/status",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/status",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/status",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.List": {
        "id": "endpoint_modelSync/executions.List",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListExecutionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "completed_at": "2024-01-01T00:00:00Z",
                    "counts": {
                      "error": 5,
                      "insert": 80,
                      "total": 100,
                      "update": 15
                    },
                    "created_at": "2024-01-01T00:00:00Z",
                    "errors": [
                      "something went wrong"
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "started_at": "2024-01-01T00:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.Get": {
        "id": "endpoint_modelSync/executions.Get",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetExecutionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "completed_at": "2024-01-01T00:00:00Z",
                  "counts": {
                    "error": 5,
                    "insert": 80,
                    "total": 100,
                    "update": 15
                  },
                  "created_at": "2024-01-01T00:00:00Z",
                  "errors": [
                    "something went wrong"
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "started_at": "2024-01-01T00:00:00Z",
                  "status": "created",
                  "type": "scheduled"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.GetLogUrls": {
        "id": "endpoint_modelSync/executions.GetLogUrls",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "type"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ExecutionLogsResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "type": "records"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "expires": "2024-01-01T00:00:00Z",
                  "urls": [
                    "urls"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 400,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 500,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.GetLogs": {
        "id": "endpoint_modelSync/executions.GetLogs",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "type"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "filename"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "filename",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records/path/to/file.json",
            "responseStatusCode": 204,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "type": "records",
              "filename": "path/to/file.json"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records/path/to/file.json \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 400,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 500,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.List": {
        "id": "endpoint_webhooks.List",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookListEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "created_at": "2024-01-01T00:00:00Z",
                    "endpoint": "https://example.com/webhook",
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "secret": "secret"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Create": {
        "id": "endpoint_webhooks.Create",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "endpoint",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "https://example.com/webhook",
                "secret": "secret"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "endpoint": "https://example.com/webhook",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "secret": "secret"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"https://example.com/webhook\",\n  \"secret\": \"secret\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Get": {
        "id": "endpoint_webhooks.Get",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "endpoint": "https://example.com/webhook",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "secret": "secret"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Remove": {
        "id": "endpoint_webhooks.Remove",
        "namespace": [
          "subpackage_webhooks"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Update": {
        "id": "endpoint_webhooks.Update",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "endpoint",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "https://example.com/webhook",
                "secret": "secret"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "endpoint": "https://example.com/webhook",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "secret": "secret"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"https://example.com/webhook\",\n  \"secret\": \"secret\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2022-12-12"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2022-12-12\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_:ApiError": {
        "name": "ApiError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkDiscover": {
        "name": "BulkDiscover",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "all"
            },
            {
              "value": "onlyIncremental"
            },
            {
              "value": "onlyNonIncremental"
            },
            {
              "value": "none"
            }
          ]
        }
      },
      "type_:BulkItemizedSchedule": {
        "name": "BulkItemizedSchedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "item",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BulkSelectiveMode"
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BulkSchedule"
                }
              }
            }
          ]
        }
      },
      "type_:BulkMultiScheduleConfiguration": {
        "name": "BulkMultiScheduleConfiguration",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "schedules",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkItemizedSchedule"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchedule": {
        "name": "BulkSchedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "day_of_month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "day_of_week",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ScheduleFrequency"
                }
              }
            },
            {
              "key": "hour",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "minute",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "multi",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkMultiScheduleConfiguration"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSelectiveMode": {
        "name": "BulkSelectiveMode",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "none"
            },
            {
              "value": "incrementalFields"
            },
            {
              "value": "nonincrementalFields"
            }
          ]
        }
      },
      "type_:FilterFieldReferenceType": {
        "name": "FilterFieldReferenceType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Model"
            },
            {
              "value": "Target"
            }
          ]
        }
      },
      "type_:FilterFunction": {
        "name": "FilterFunction",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Equality"
            },
            {
              "value": "Inequality"
            },
            {
              "value": "IsNull"
            },
            {
              "value": "IsNotNull"
            },
            {
              "value": "True"
            },
            {
              "value": "False"
            },
            {
              "value": "OnOrAfter"
            },
            {
              "value": "OnOrBefore"
            },
            {
              "value": "GreaterThan"
            },
            {
              "value": "GreaterThanEqual"
            },
            {
              "value": "LessThan"
            },
            {
              "value": "LessThanEqual"
            },
            {
              "value": "StringContains"
            },
            {
              "value": "StringEndsWith"
            },
            {
              "value": "StringDoesNotContain"
            },
            {
              "value": "StringDoesNotEndWith"
            },
            {
              "value": "StringOneOf"
            },
            {
              "value": "StringNotOneOf"
            },
            {
              "value": "Between"
            },
            {
              "value": "ArrayContains"
            },
            {
              "value": "ArrayDoesNotContain"
            },
            {
              "value": "InTheLast"
            },
            {
              "value": "StringLike"
            },
            {
              "value": "StringNotLike"
            },
            {
              "value": "StringMatchesTrimmed"
            }
          ]
        }
      },
      "type_:JsonschemaForm": {
        "name": "JsonschemaForm",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:LabelLabel": {
        "name": "LabelLabel",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:ModelModelFieldRequest": {
        "name": "ModelModelFieldRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "example",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelRelation": {
        "name": "ModelRelation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "from",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "to",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelRelationTo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelRelationTo": {
        "name": "ModelRelationTo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "model_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RestErrResponse": {
        "name": "RestErrResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Application-specific error code."
            },
            {
              "key": "context",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Application context."
            },
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Error message."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Status text."
            }
          ]
        }
      },
      "type_:ScheduleFrequency": {
        "name": "ScheduleFrequency",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "manual"
            },
            {
              "value": "continuous"
            },
            {
              "value": "hourly"
            },
            {
              "value": "daily"
            },
            {
              "value": "weekly"
            },
            {
              "value": "custom"
            },
            {
              "value": "builder"
            },
            {
              "value": "runafter"
            },
            {
              "value": "multi"
            },
            {
              "value": "dbtcloud"
            }
          ]
        }
      },
      "type_:ScheduleScheduleOption": {
        "name": "ScheduleScheduleOption",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JsonschemaForm"
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ScheduleFrequency"
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SchemaIdentityFunction": {
        "name": "SchemaIdentityFunction",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Equality"
            },
            {
              "value": "ISubstring"
            },
            {
              "value": "OneOf"
            }
          ]
        }
      },
      "type_:SyncDestinationProperties": {
        "name": "SyncDestinationProperties",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "does_not_report_operation_counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "new_target_label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "optional_target_mappings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "primary_metadata_object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_creation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_type_selection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_target_filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "target_creator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "use_field_names_as_labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionStatus": {
        "name": "ExecutionStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "scheduled"
            },
            {
              "value": "queued"
            },
            {
              "value": "waiting"
            },
            {
              "value": "running"
            },
            {
              "value": "processing"
            },
            {
              "value": "canceling"
            },
            {
              "value": "canceled"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            },
            {
              "value": "interrupted"
            }
          ]
        }
      },
      "type_:APIKeyResponse": {
        "name": "APIKeyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:APIKeyResponseEnvelope": {
        "name": "APIKeyResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:APIKeyResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivateSyncEnvelope": {
        "name": "ActivateSyncEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ActivateSyncOutput"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivateSyncInput": {
        "name": "ActivateSyncInput",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivateSyncOutput": {
        "name": "ActivateSyncOutput",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchema": {
        "name": "BulkSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "partition_key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchemaEnvelope": {
        "name": "BulkSchemaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncDest": {
        "name": "BulkSyncDest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "modes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:SupportedMode"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncDestEnvelope": {
        "name": "BulkSyncDestEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncDest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncListEnvelope": {
        "name": "BulkSyncListEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSyncResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncResponse": {
        "name": "BulkSyncResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "destination_configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "destination_connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "discover",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSchedule"
                    }
                  }
                }
              }
            },
            {
              "key": "source_configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source_connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncResponseEnvelope": {
        "name": "BulkSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSource": {
        "name": "BulkSyncSource",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "schemas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSourceEnvelope": {
        "name": "BulkSyncSourceEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncSource"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConfigurationValue": {
        "name": "ConfigurationValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionListResponseEnvelope": {
        "name": "ConnectionListResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConnectionResponseSchema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionMeta": {
        "name": "ConnectionMeta",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "has_items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_one_of",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionMetaResponse": {
        "name": "ConnectionMetaResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConfigurationValue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:ConnectionMeta"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_one_of",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionParameterValue": {
        "name": "ConnectionParameterValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionParameterValuesResp": {
        "name": "ConnectionParameterValuesResp",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "allows_creation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConnectionParameterValue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionParameterValuesResponseEnvelope": {
        "name": "ConnectionParameterValuesResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:ConnectionParameterValuesResp"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionResponseEnvelope": {
        "name": "ConnectionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionResponseSchema": {
        "name": "ConnectionResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "api_calls_last_24_hours",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "API calls made to service in the last 24h (supported integrations only)."
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status_error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionTypeSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionType": {
        "name": "ConnectionType",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "envConfig",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "use_oauth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionTypeResponseEnvelope": {
        "name": "ConnectionTypeResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConnectionType"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionTypeSchema": {
        "name": "ConnectionTypeSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "operations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CreateConnectionResponseEnvelope": {
        "name": "CreateConnectionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CreateConnectionResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CreateConnectionResponseSchema": {
        "name": "CreateConnectionResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "auth_code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Code to enter in order to complete connection authentication."
            },
            {
              "key": "auth_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL to visit to complete connection authentication."
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status_error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionTypeSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CreateModelRequest": {
        "name": "CreateModelRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "additional_fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelModelFieldRequest"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "enricher",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Enrichment"
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identifier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "relations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelRelation"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "tracking_columns",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:V2EnricherConfiguration": {
        "name": "V2EnricherConfiguration",
        "description": "Similar to a model configuration, this configures the enricher. For example, if you wanted to use Apollo to enrich people, you would send `{\"object\": \"people\"}` as the configuration. Each enricher configuration can be found in the connection configuration docs.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:V2EnricherMapping": {
        "name": "V2EnricherMapping",
        "description": "A map of parent model Source Name to child model Source Name. For example, if your model has a field called `work_email` and the enricher accepts a field called `email`, you'd send a map of `{\"work_email\":\"email\"}`. The set of required input mappings varies based on the configuration of the enrichment. You can use the `enrichment/{connection_id}/inputfields` API to discover available input field combinations for a given configuration.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "type_:Enrichment": {
        "name": "Enrichment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:V2EnricherConfiguration"
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "enricher_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Must be provided to update an existing enrichment"
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelField"
                        }
                      }
                    }
                  }
                }
              },
              "description": "If not provided, all fields will be enabled."
            },
            {
              "key": "mappings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:V2EnricherMapping"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Event": {
        "name": "Event",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "event",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:EventTypesEnvelope": {
        "name": "EventTypesEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:EventsEnvelope": {
        "name": "EventsEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Event"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionCounts": {
        "name": "ExecutionCounts",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "insert",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "update",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionLogResponse": {
        "name": "ExecutionLogResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "expires",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "urls",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionLogsResponseEnvelope": {
        "name": "ExecutionLogsResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionLogResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Filter": {
        "name": "Filter",
        "description": "Either `field` or `field_id` must be provided. If `field` is provided, `field_id` is ignored.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Source"
                    }
                  }
                }
              }
            },
            {
              "key": "field_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Model or Target field name to filter on."
            },
            {
              "key": "field_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FilterFieldReferenceType"
                    }
                  }
                }
              }
            },
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:FilterFunction"
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetConnectionMetaEnvelope": {
        "name": "GetConnectionMetaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionMetaResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:V2GetEnrichmentInputFieldsResponseEnvelope": {
        "name": "V2GetEnrichmentInputFieldsResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetExecutionResponseEnvelope": {
        "name": "GetExecutionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetExecutionResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetExecutionResponseSchema": {
        "name": "GetExecutionResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "completed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionCounts"
                    }
                  }
                }
              }
            },
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "started_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetIdentityResponseEnvelope": {
        "name": "GetIdentityResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetIdentityResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetIdentityResponseSchema": {
        "name": "GetIdentityResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_organization",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_partner",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_system",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Identity": {
        "name": "Identity",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SchemaIdentityFunction"
                }
              }
            },
            {
              "key": "new_field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "remote_field_type_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Source"
                }
              }
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:IdentityFunction": {
        "name": "IdentityFunction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:JobResponse": {
        "name": "JobResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "job_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:WorkTaskStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:JobResponseEnvelope": {
        "name": "JobResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JobResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListBulkSchemaEnvelope": {
        "name": "ListBulkSchemaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSchema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListExecutionResponseEnvelope": {
        "name": "ListExecutionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:GetExecutionResponseSchema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListPoliciesResponseEnvelope": {
        "name": "ListPoliciesResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PolicyResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListModelSyncResponseEnvelope": {
        "name": "ListModelSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelSyncResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListUsersEnvelope": {
        "name": "ListUsersEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:User"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Mode": {
        "name": "Mode",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_sync_mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_target_filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelField": {
        "name": "ModelField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "example",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "remote_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unique",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "user_added",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelFieldResponse": {
        "name": "ModelFieldResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelField"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelListResponseEnvelope": {
        "name": "ModelListResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelResponse": {
        "name": "ModelResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "enricher",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Enrichment"
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identifier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:LabelLabel"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "relations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Relation"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "tracking_columns",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelResponseEnvelope": {
        "name": "ModelResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelResponse"
                    }
                  }
                }
              }
            },
            {
              "key": "job",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JobResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSample": {
        "name": "ModelSample",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "records",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:V2SampleRecord"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSampleResponseEnvelope": {
        "name": "ModelSampleResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelSample"
                    }
                  }
                }
              }
            },
            {
              "key": "job",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JobResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Organization": {
        "name": "Organization",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sso_domain",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sso_org_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:OrganizationEnvelope": {
        "name": "OrganizationEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Organization"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:OrganizationsEnvelope": {
        "name": "OrganizationsEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Organization"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Override": {
        "name": "Override",
        "description": "Either `field` or `field_id` must be provided. If `field_id` is provided, `field` is ignored.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Source"
                    }
                  }
                }
              }
            },
            {
              "key": "field_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Field ID of the model field to override."
            },
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FilterFunction"
                    }
                  }
                }
              }
            },
            {
              "key": "override",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PolicyAction": {
        "name": "PolicyAction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "action",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "role_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PolicyResponse": {
        "name": "PolicyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policy_actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PolicyAction"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "system",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PolicyResponseEnvelope": {
        "name": "PolicyResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PolicyResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Relation": {
        "name": "Relation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "from",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "to",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RelationTo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RelationTo": {
        "name": "RelationTo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "model_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RoleListResponseEnvelope": {
        "name": "RoleListResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:RoleResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RoleResponse": {
        "name": "RoleResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "system",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RoleResponseEnvelope": {
        "name": "RoleResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RoleResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RunAfter": {
        "name": "RunAfter",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bulk_sync_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sync_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:V2SampleRecord": {
        "name": "V2SampleRecord",
        "description": "A map of `fieldSource` -> `fieldName: fieldValue`. Because there may be field name conflicts between the base model and enrichments, the base model fields are placed in a map under the model ID. Fields from enrichments are placed under the enricher ID.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "unknown"
                  }
                }
              }
            }
          }
        }
      },
      "type_:Schedule": {
        "name": "Schedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "day_of_month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "day_of_week",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ScheduleFrequency"
                    }
                  }
                }
              }
            },
            {
              "key": "hour",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "job_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "minute",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "run_after",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RunAfter"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ScheduleOptionResponse": {
        "name": "ScheduleOptionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "schedule_options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ScheduleScheduleOption"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ScheduleOptionResponseEnvelope": {
        "name": "ScheduleOptionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ScheduleOptionResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Source": {
        "name": "Source",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "model_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StartModelSyncResponseEnvelope": {
        "name": "StartModelSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StartModelSyncResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StartModelSyncResponseSchema": {
        "name": "StartModelSyncResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionStatus"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SupportedMode": {
        "name": "SupportedMode",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": ""
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_sync_mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_target_filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncField": {
        "name": "ModelSyncField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "new",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "override_value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Source"
                }
              }
            },
            {
              "key": "sync_mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncResponse": {
        "name": "ModelSyncResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelSyncField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filter_logic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Filter"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Identity"
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "override_fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelSyncField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "overrides",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Override"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Schedule"
                    }
                  }
                }
              }
            },
            {
              "key": "sync_all_records",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Target"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncResponseEnvelope": {
        "name": "ModelSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelSyncResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SyncStatusEnvelope": {
        "name": "SyncStatusEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SyncStatusResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SyncStatusResponse": {
        "name": "SyncStatusResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "current_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetExecutionResponseSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "last_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetExecutionResponseSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "next_execution_time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Target": {
        "name": "Target",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "filter_logic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "new_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "search_values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TargetField": {
        "name": "TargetField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "association",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "createable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filterable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identity_functions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:IdentityFunction"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "required",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "updateable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TargetResponse": {
        "name": "TargetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TargetField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "modes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Mode"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "properties",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SyncDestinationProperties"
                    }
                  }
                }
              }
            },
            {
              "key": "refreshed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TargetResponseEnvelope": {
        "name": "TargetResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TargetResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:User": {
        "name": "User",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:UserEnvelope": {
        "name": "UserEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:User"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Webhook": {
        "name": "Webhook",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "endpoint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "secret",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WebhookEnvelope": {
        "name": "WebhookEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Webhook"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WebhookListEnvelope": {
        "name": "WebhookListEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Webhook"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WorkTaskStatus": {
        "name": "WorkTaskStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "running"
            },
            {
              "value": "done"
            },
            {
              "value": "failed"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_bulkSync": {
        "id": "subpackage_bulkSync",
        "name": "bulkSync"
      },
      "subpackage_bulkSync/schemas": {
        "id": "subpackage_bulkSync/schemas",
        "name": "schemas"
      },
      "subpackage_connections": {
        "id": "subpackage_connections",
        "name": "connections"
      },
      "subpackage_models": {
        "id": "subpackage_models",
        "name": "models"
      },
      "subpackage_events": {
        "id": "subpackage_events",
        "name": "events"
      },
      "subpackage_jobs": {
        "id": "subpackage_jobs",
        "name": "jobs"
      },
      "subpackage_identity": {
        "id": "subpackage_identity",
        "name": "identity"
      },
      "subpackage_organization": {
        "id": "subpackage_organization",
        "name": "organization"
      },
      "subpackage_users": {
        "id": "subpackage_users",
        "name": "users"
      },
      "subpackage_permissions": {
        "id": "subpackage_permissions",
        "name": "permissions"
      },
      "subpackage_permissions/policies": {
        "id": "subpackage_permissions/policies",
        "name": "policies"
      },
      "subpackage_permissions/roles": {
        "id": "subpackage_permissions/roles",
        "name": "roles"
      },
      "subpackage_modelSync": {
        "id": "subpackage_modelSync",
        "name": "modelSync"
      },
      "subpackage_modelSync/executions": {
        "id": "subpackage_modelSync/executions",
        "name": "executions"
      },
      "subpackage_webhooks": {
        "id": "subpackage_webhooks",
        "name": "webhooks"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    },
    "globalHeaders": [
      {
        "key": "X-Polytomic-Version",
        "valueShape": {
          "type": "alias",
          "value": {
            "type": "literal",
            "value": {
              "type": "stringLiteral",
              "value": "2022-12-12"
            }
          }
        }
      }
    ]
  },
  {
    "id": "d051ed90-658a-4822-a2ee-f77a495b9085",
    "endpoints": {
      "endpoint_bulkSync.List": {
        "id": "endpoint_bulkSync.List",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncListEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "active": true,
                    "destination_configuration": {
                      "schema": "my_schema"
                    },
                    "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "discover": true,
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "mode": "replace",
                    "name": "My Bulk Sync",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "schedule": {
                      "frequency": "manual",
                      "day_of_month": "1",
                      "day_of_week": "monday",
                      "hour": "0",
                      "minute": "0",
                      "month": "1"
                    },
                    "source_configuration": {
                      "replication_slot": "slot"
                    },
                    "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Create": {
        "id": "endpoint_bulkSync.Create",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_objects",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "disable_record_timestamps",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "discover",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "DEPRECATED: Use automatically_add_new_objects/automatically_add_new_fields instead"
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:BulkSchedule"
                  }
                }
              },
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "My Bulk Sync",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "destination_configuration": {
                    "schema": "my_schema"
                  },
                  "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "discover": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "mode": "replace",
                  "name": "My Bulk Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "frequency": "manual",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "hour": "0",
                    "minute": "0",
                    "month": "1",
                    "multi": {
                      "type": "type"
                    }
                  },
                  "source_configuration": {
                    "replication_slot": "slot"
                  },
                  "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"My Bulk Sync\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Get": {
        "id": "endpoint_bulkSync.Get",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "refresh_schemas",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "destination_configuration": {
                    "schema": "my_schema"
                  },
                  "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "discover": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "mode": "replace",
                  "name": "My Bulk Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "frequency": "manual",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "hour": "0",
                    "minute": "0",
                    "month": "1",
                    "multi": {
                      "type": "type"
                    }
                  },
                  "source_configuration": {
                    "replication_slot": "slot"
                  },
                  "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Update": {
        "id": "endpoint_bulkSync.Update",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "description": "> 📘 Updating schemas\n>\n> Schema updates can be performed using the [Update Bulk Sync Schemas](https://apidocs.polytomic.com/api-reference/bulk-sync/schemas/patch) endpoint.",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_objects",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "disable_record_timestamps",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "discover",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "DEPRECATED: Use automatically_add_new_objects/automatically_add_new_fields instead"
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:BulkSchedule"
                  }
                }
              },
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "My Bulk Sync",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "destination_configuration": {
                    "schema": "my_schema"
                  },
                  "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "discover": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "mode": "replace",
                  "name": "My Bulk Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "frequency": "manual",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "hour": "0",
                    "minute": "0",
                    "month": "1",
                    "multi": {
                      "type": "type"
                    }
                  },
                  "source_configuration": {
                    "replication_slot": "slot"
                  },
                  "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"My Bulk Sync\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Bulk Sync\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"My Bulk Sync\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:                    \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Remove": {
        "id": "endpoint_bulkSync.Remove",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "refresh_schemas",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d?refresh_schemas=true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Activate": {
        "id": "endpoint_bulkSync.Activate",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/activate"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncInput"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Start": {
        "id": "endpoint_bulkSync.Start",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "resync",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "test",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncExecutionEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "completed_at": "2023-04-25T12:00:00Z",
                  "created_at": "2023-04-25T12:00:00Z",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "is_resync": false,
                  "is_test": false,
                  "schemas": [
                    {
                      "error_count": 0,
                      "record_count": 1000,
                      "schema": "contact"
                    }
                  ],
                  "started_at": "2023-04-25T12:00:00Z",
                  "status": "created",
                  "type": "scheduled"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartBulkSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartBulkSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartBulkSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.GetStatus": {
        "id": "endpoint_bulkSync.GetStatus",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncStatusEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "current_execution": {
                    "completed_at": "2023-04-25T12:00:00Z",
                    "created_at": "2023-04-25T12:00:00Z",
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "is_resync": false,
                    "is_test": false,
                    "schemas": [
                      {
                        "error_count": 0,
                        "record_count": 1000,
                        "schema": "contact"
                      }
                    ],
                    "started_at": "2023-04-25T12:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "last_execution": {
                    "completed_at": "2023-04-25T12:00:00Z",
                    "created_at": "2023-04-25T12:00:00Z",
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "is_resync": false,
                    "is_test": false,
                    "schemas": [
                      {
                        "error_count": 0,
                        "record_count": 1000,
                        "schema": "contact"
                      }
                    ],
                    "started_at": "2023-04-25T12:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "next_execution_time": "2023-04-25T12:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/status",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/status",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/status",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.GetSource": {
        "id": "endpoint_bulkSync.GetSource",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/bulksync/source"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "include_fields",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncSourceEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/bulksync/source",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "include_fields": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "key": "value"
                  },
                  "schemas": [
                    {
                      "id": "contact",
                      "name": "Contact"
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/bulksync/source \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/bulksync/source",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "include_fields": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/bulksync/source \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/bulksync/source",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "include_fields": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/bulksync/source \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/bulksync/source",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "include_fields": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/bulksync/source \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/bulksync/source",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "include_fields": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/bulksync/source \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.GetDestination": {
        "id": "endpoint_bulkSync.GetDestination",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/bulksync/target"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncDestEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/bulksync/target",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "advanced": {
                      "items": {
                        "truncate_existing": {
                          "default": "",
                          "required": false
                        }
                      }
                    },
                    "mirror_schemas": {
                      "default": "",
                      "required": false
                    },
                    "schema": {
                      "default": "",
                      "required": false
                    }
                  },
                  "modes": [
                    {
                      "description": "Replace all records",
                      "id": "replace",
                      "label": "Replace",
                      "requires_identity": false,
                      "supports_field_sync_mode": false,
                      "supports_target_filters": false
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/bulksync/target \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/bulksync/target",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/bulksync/target \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/bulksync/target",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/bulksync/target \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/bulksync/target",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/bulksync/target \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/bulksync/target",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/bulksync/target \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/executions.List": {
        "id": "endpoint_bulkSync/executions.List",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListBulkSyncExecutionsEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "completed_at": "2023-04-25T12:00:00Z",
                    "created_at": "2023-04-25T12:00:00Z",
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "is_resync": false,
                    "is_test": false,
                    "schemas": [
                      {
                        "error_count": 0,
                        "record_count": 1000,
                        "schema": "contact"
                      }
                    ],
                    "started_at": "2023-04-25T12:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/executions.Get": {
        "id": "endpoint_bulkSync/executions.Get",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "exec_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "exec_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncExecutionEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "exec_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "completed_at": "2023-04-25T12:00:00Z",
                  "created_at": "2023-04-25T12:00:00Z",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "is_resync": false,
                  "is_test": false,
                  "schemas": [
                    {
                      "error_count": 0,
                      "record_count": 1000,
                      "schema": "contact"
                    }
                  ],
                  "started_at": "2023-04-25T12:00:00Z",
                  "status": "created",
                  "type": "scheduled"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    exec_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions/:exec_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "exec_id": ":exec_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/executions/:exec_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    exec_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions/:exec_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "exec_id": ":exec_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/executions/:exec_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    exec_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.List": {
        "id": "endpoint_bulkSync/schemas.List",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "filters",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "map",
                    "keyShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "valueShape": {
                      "type": "alias",
                      "value": {
                        "type": "optional",
                        "shape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListBulkSchema"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "enabled": true,
                    "fields": [
                      {
                        "enabled": true,
                        "id": "email",
                        "obfuscated": false
                      }
                    ],
                    "id": "Contact",
                    "output_name": "contact",
                    "partition_key": "email"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.SchemasListRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "filters": {
                "string": "string"
              }
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode filters={\"string\":\"string\"}",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.SchemasListRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "filters": {
                "string": "string"
              }
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode filters={\"string\":\"string\"}",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.SchemasListRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.Patch": {
        "id": "endpoint_bulkSync/schemas.Patch",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:BulkSchema"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListBulkSchema"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "enabled": true,
                    "fields": [
                      {
                        "enabled": true,
                        "id": "email",
                        "obfuscated": false
                      }
                    ],
                    "id": "Contact",
                    "output_name": "contact",
                    "partition_key": "email"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.patch(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.patch(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.patch(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.patch(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.patch(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.patch(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.patch(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.patch(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.patch(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.patch(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.Get": {
        "id": "endpoint_bulkSync/schemas.Get",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/Contact",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "Contact"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "enabled": true,
                  "fields": [
                    {
                      "enabled": true,
                      "id": "email",
                      "obfuscated": false
                    }
                  ],
                  "id": "Contact",
                  "output_name": "contact",
                  "partition_key": "email"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/Contact \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"Contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"Contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"Contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"Contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"Contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"Contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"Contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"Contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"Contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.Update": {
        "id": "endpoint_bulkSync/schemas.Update",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "enabled",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:BulkField"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "partition_key",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/contact",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "contact"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "enabled": true,
                  "fields": [
                    {
                      "enabled": true,
                      "id": "email",
                      "obfuscated": false
                    }
                  ],
                  "id": "Contact",
                  "output_name": "contact",
                  "partition_key": "email"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/contact \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetTypes": {
        "id": "endpoint_connections.GetTypes",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connection_types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionTypeResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connection_types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "envConfig": {
                      "key": "value"
                    },
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "use_oauth": true
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.getTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connection_types",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.getTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connection_types",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.getTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.List": {
        "id": "endpoint_connections.List",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionListResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "api_calls_last_24_hours": 2021,
                    "configuration": {
                      "database": "example",
                      "hostname": "postgres.example.com",
                      "password": "password",
                      "port": 5432,
                      "username": "user"
                    },
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "name": "My Postgres Connection",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "status": "healthy",
                    "status_error": "error message",
                    "type": {
                      "id": "postgresql",
                      "name": "PostgreSQL"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Create": {
        "id": "endpoint_connections.Create",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "redirect_url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "URL to redirect to after completing OAuth flow."
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "validate",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Validate connection configuration."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateConnectionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Postgres Connection",
                "type": "postgresql"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "auth_code": "auth_code",
                  "auth_url": "auth_url",
                  "configuration": {
                    "database": "example",
                    "hostname": "postgres.example.com",
                    "password": "password",
                    "port": 5432,
                    "username": "user"
                  },
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "My Postgres Connection",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "status": "healthy",
                  "status_error": "error message",
                  "type": {
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "operations": [
                      "operations"
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Postgres Connection\",\n  \"type\": \"postgresql\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Postgres Connection\",\n    type=\"postgresql\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.create({\n    name: \"My Postgres Connection\",\n    type: \"postgresql\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tType: \"postgresql\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Postgres Connection\",\n    type=\"postgresql\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.create({\n    name: \"My Postgres Connection\",\n    type: \"postgresql\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tType: \"postgresql\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Postgres Connection\",\n    type=\"postgresql\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.create({\n    name: \"My Postgres Connection\",\n    type: \"postgresql\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tType: \"postgresql\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Postgres Connection\",\n    type=\"postgresql\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.create({\n    name: \"My Postgres Connection\",\n    type: \"postgresql\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tType: \"postgresql\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Postgres Connection\",\n    type=\"postgresql\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.create({\n    name: \"My Postgres Connection\",\n    type: \"postgresql\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tType: \"postgresql\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Postgres Connection\",\n    type=\"postgresql\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.create({\n    name: \"My Postgres Connection\",\n    type: \"postgresql\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tType: \"postgresql\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Connect": {
        "id": "endpoint_connections.Connect",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/connect/"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "connection",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "redirect_url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "whitelist",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectCardResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Salesforce Connection",
                "redirect_url": "redirect_url"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "redirect_url": "https://example.com",
                  "token": "token"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Salesforce Connection\",\n  \"redirect_url\": \"redirect_url\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.connect({\n    name: \"Salesforce Connection\",\n    redirect_url: \"redirect_url\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "redirect_url": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"redirect_url\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.connect({\n    name: \"Salesforce Connection\",\n    redirect_url: \"redirect_url\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "redirect_url": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"redirect_url\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.connect({\n    name: \"Salesforce Connection\",\n    redirect_url: \"redirect_url\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "redirect_url": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"redirect_url\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.connect({\n    name: \"Salesforce Connection\",\n    redirect_url: \"redirect_url\"\n});\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "redirect_url": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"redirect_url\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.connect({\n    name: \"Salesforce Connection\",\n    redirect_url: \"redirect_url\"\n});\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Get": {
        "id": "endpoint_connections.Get",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "api_calls_last_24_hours": 2021,
                  "configuration": {
                    "database": "example",
                    "hostname": "postgres.example.com",
                    "password": "password",
                    "port": 5432,
                    "username": "user"
                  },
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "My Postgres Connection",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "status": "healthy",
                  "status_error": "error message",
                  "type": {
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "operations": [
                      "operations"
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Update": {
        "id": "endpoint_connections.Update",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "reconnect",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "validate",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Validate connection configuration."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateConnectionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Postgres Connection"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "auth_code": "auth_code",
                  "auth_url": "auth_url",
                  "configuration": {
                    "database": "example",
                    "hostname": "postgres.example.com",
                    "password": "password",
                    "port": 5432,
                    "username": "user"
                  },
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "My Postgres Connection",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "status": "healthy",
                  "status_error": "error message",
                  "type": {
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "operations": [
                      "operations"
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Postgres Connection\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Postgres Connection\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Postgres Connection\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Postgres Connection\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Postgres Connection\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Postgres Connection\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Postgres Connection\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Postgres Connection\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Postgres Connection\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Postgres Connection\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Postgres Connection\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Postgres Connection\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Postgres Connection\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Postgres Connection\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Postgres Connection\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Remove": {
        "id": "endpoint_connections.Remove",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "force",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d?force=true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetParameterValues": {
        "id": "endpoint_connections.GetParameterValues",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/parameter_values"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionParameterValuesResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/parameter_values",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "data": {
                    "allows_creation": true,
                    "values": [
                      {}
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/parameter_values \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_parameter_values(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.getParameterValues(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetParameterValues(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/parameter_values",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/parameter_values \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_parameter_values(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.getParameterValues(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetParameterValues(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/parameter_values",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/parameter_values \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_parameter_values(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.getParameterValues(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetParameterValues(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/parameter_values",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/parameter_values \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_parameter_values(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.connections.getParameterValues(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetParameterValues(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetSource": {
        "id": "endpoint_modelSync.GetSource",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/modelsync/source"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "params",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "map",
                    "keyShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "valueShape": {
                      "type": "alias",
                      "value": {
                        "type": "optional",
                        "shape": {
                          "type": "alias",
                          "value": {
                            "type": "list",
                            "itemShape": {
                              "type": "alias",
                              "value": {
                                "type": "primitive",
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetModelSyncSourceMetaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/modelsync/source",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "configuration": {}
                  },
                  "requires_one_of": [
                    "requires_one_of"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/modelsync/source \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetSourceRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "params": {
                "string": [
                  "string"
                ]
              }
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/source \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode params={\"string\":[\"string\"]}",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetSourceRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "params": {
                "string": [
                  "string"
                ]
              }
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/source \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode params={\"string\":[\"string\"]}",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetSourceRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "params": {
                "string": [
                  "string"
                ]
              }
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/source \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode params={\"string\":[\"string\"]}",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetSourceRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "params": {
                "string": [
                  "string"
                ]
              }
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/source \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode params={\"string\":[\"string\"]}",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetSourceRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "params": {
                "string": [
                  "string"
                ]
              }
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/source \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode params={\"string\":[\"string\"]}",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetSourceRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetSourceFields": {
        "id": "endpoint_modelSync.GetSourceFields",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/modelsync/source/fields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelFieldResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/modelsync/source/fields",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "description": "Unique identifier",
                    "example": {
                      "key": "value"
                    },
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "label": "ID",
                    "name": "id",
                    "remote_type": "string",
                    "type": "string",
                    "unique": true,
                    "user_added": false
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/modelsync/source/fields \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source/fields",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/modelsync/source/fields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source/fields",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/modelsync/source/fields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source/fields",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/modelsync/source/fields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source/fields",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/modelsync/source/fields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/source/fields",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/modelsync/source/fields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetTarget": {
        "id": "endpoint_modelSync.GetTarget",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/modelsync/target"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "search",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetConnectionMetaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/modelsync/target",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "configuration": {}
                  },
                  "items": {
                    "items": {
                      "has_items": true
                    }
                  },
                  "requires_one_of": [
                    "requires_one_of"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/modelsync/target \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/target",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/target \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/target",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/target \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/target",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/target \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/target",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/target \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/target",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/target \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetTargetFields": {
        "id": "endpoint_modelSync.GetTargetFields",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/modelsync/target/fields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "target",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "refresh",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:TargetResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/modelsync/target/fields",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "target": "database.table",
              "refresh": false
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "fields": [
                    {
                      "association": false,
                      "createable": true,
                      "description": "Field description",
                      "filterable": true,
                      "id": "field1",
                      "name": "Field",
                      "required": true,
                      "source_type": "string",
                      "supports_identity": false,
                      "type": "string",
                      "updateable": true
                    }
                  ],
                  "id": "database.table",
                  "modes": [
                    {
                      "description": "Create records when they don't exist; don't update existing ones",
                      "label": "Create",
                      "mode": "create",
                      "requires_identity": true,
                      "supports_field_sync_mode": false,
                      "supports_target_filters": false
                    }
                  ],
                  "name": "Table",
                  "properties": {
                    "does_not_report_operation_counts": true,
                    "new_target_label": "new_target_label",
                    "optional_target_mappings": true,
                    "primary_metadata_object": "primary_metadata_object",
                    "requires_configuration": true,
                    "supports_field_creation": true,
                    "supports_field_type_selection": true,
                    "supports_target_filters": true,
                    "target_creator": true,
                    "use_field_names_as_labels": true
                  },
                  "refreshed_at": "2024-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/modelsync/target/fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d target=database.table \\\n     -d refresh=false",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    target=\"database.table\",\n    refresh=False,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    target: \"database.table\",\n    refresh: false\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetFieldsRequest{\n\t\tTarget: \"database.table\",\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/target/fields",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "target": "string",
              "refresh": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/target/fields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d target=string \\\n     -d refresh=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    target=\"database.table\",\n    refresh=False,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    target: \"database.table\",\n    refresh: false\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetFieldsRequest{\n\t\tTarget: \"database.table\",\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/target/fields",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "target": "string",
              "refresh": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/target/fields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d target=string \\\n     -d refresh=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    target=\"database.table\",\n    refresh=False,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    target: \"database.table\",\n    refresh: false\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetFieldsRequest{\n\t\tTarget: \"database.table\",\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/target/fields",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "target": "string",
              "refresh": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/target/fields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d target=string \\\n     -d refresh=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    target=\"database.table\",\n    refresh=False,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    target: \"database.table\",\n    refresh: false\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetFieldsRequest{\n\t\tTarget: \"database.table\",\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/modelsync/target/fields",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "target": "string",
              "refresh": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/modelsync/target/fields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d target=string \\\n     -d refresh=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    target=\"database.table\",\n    refresh=False,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    target: \"database.table\",\n    refresh: false\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelSyncGetTargetFieldsRequest{\n\t\tTarget: \"database.table\",\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.List": {
        "id": "endpoint_modelSync.List",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "active": true,
                    "fields": [
                      {
                        "source": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "target": "name"
                      }
                    ],
                    "filter_logic": "filter_logic",
                    "filters": [
                      {
                        "function": "Equality",
                        "field": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "field_id": "field1",
                        "label": "A"
                      }
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "identity": {
                      "function": "Equality",
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    },
                    "mode": "create",
                    "name": "Users Sync",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "override_fields": [
                      {
                        "source": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "target": "name"
                      }
                    ],
                    "overrides": [
                      {
                        "field": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "field_id": "field1"
                      }
                    ],
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "schedule": {
                      "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "sync_all_records": false,
                    "target": {
                      "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "object": "Users",
                      "configuration": {
                        "key": "value"
                      },
                      "search_values": {
                        "name": "value"
                      }
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Create": {
        "id": "endpoint_modelSync.Create",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "enricher",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Enrichment"
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filter_logic",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filters",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Filter"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identity",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Identity"
                      }
                    }
                  }
                }
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "override_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Values to set as sync target fields."
              },
              {
                "key": "overrides",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Override"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Conditional value replacement for field mappings."
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Schedule"
                  }
                }
              },
              {
                "key": "sync_all_records",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "target",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Target"
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "create",
                "name": "Users Sync",
                "schedule": {},
                "target": {
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "object": "Users"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "filter_logic": "filter_logic",
                  "filters": [
                    {
                      "function": "Equality",
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1",
                      "label": "A"
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identity": {
                    "function": "Equality",
                    "source": {
                      "field": "id",
                      "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "target": "name",
                    "new_field": true,
                    "remote_field_type_id": "string"
                  },
                  "mode": "create",
                  "name": "Users Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "override_fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "overrides": [
                    {
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1"
                    }
                  ],
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "frequency": "manual",
                    "hour": "12",
                    "job_id": 1,
                    "minute": "30",
                    "month": "1",
                    "run_after": {
                      "bulk_sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ],
                      "sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  },
                  "sync_all_records": false,
                  "target": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "object": "Users",
                    "configuration": {
                      "key": "value"
                    },
                    "filter_logic": "filter_logic",
                    "new_name": "new_name",
                    "search_values": {
                      "name": "value"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"create\",\n  \"name\": \"Users Sync\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    \"object\": \"Users\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.create({\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.create({\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.create({\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.create({\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.create({\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.create({\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetScheduleOptions": {
        "id": "endpoint_modelSync.GetScheduleOptions",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/schedules"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ScheduleOptionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/schedules",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "schedule_options": [
                    {
                      "description": "Runs when manually triggered",
                      "label": "Manual"
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/schedules \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_schedule_options()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getScheduleOptions();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetScheduleOptions(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/schedules",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/schedules \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_schedule_options()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getScheduleOptions();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetScheduleOptions(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/schedules",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/schedules \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_schedule_options()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getScheduleOptions();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetScheduleOptions(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Get": {
        "id": "endpoint_modelSync.Get",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "filter_logic": "filter_logic",
                  "filters": [
                    {
                      "function": "Equality",
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1",
                      "label": "A"
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identity": {
                    "function": "Equality",
                    "source": {
                      "field": "id",
                      "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "target": "name",
                    "new_field": true,
                    "remote_field_type_id": "string"
                  },
                  "mode": "create",
                  "name": "Users Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "override_fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "overrides": [
                    {
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1"
                    }
                  ],
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "frequency": "manual",
                    "hour": "12",
                    "job_id": 1,
                    "minute": "30",
                    "month": "1",
                    "run_after": {
                      "bulk_sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ],
                      "sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  },
                  "sync_all_records": false,
                  "target": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "object": "Users",
                    "configuration": {
                      "key": "value"
                    },
                    "filter_logic": "filter_logic",
                    "new_name": "new_name",
                    "search_values": {
                      "name": "value"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Update": {
        "id": "endpoint_modelSync.Update",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "enricher",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Enrichment"
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filter_logic",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filters",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Filter"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identity",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Identity"
                      }
                    }
                  }
                }
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "override_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Values to set as sync target fields."
              },
              {
                "key": "overrides",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Override"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Conditional value replacement for field mappings."
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Schedule"
                  }
                }
              },
              {
                "key": "sync_all_records",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "target",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Target"
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "create",
                "name": "Users Sync",
                "schedule": {},
                "target": {
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "object": "Users"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "filter_logic": "filter_logic",
                  "filters": [
                    {
                      "function": "Equality",
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1",
                      "label": "A"
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identity": {
                    "function": "Equality",
                    "source": {
                      "field": "id",
                      "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "target": "name",
                    "new_field": true,
                    "remote_field_type_id": "string"
                  },
                  "mode": "create",
                  "name": "Users Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "override_fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "overrides": [
                    {
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1"
                    }
                  ],
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "frequency": "manual",
                    "hour": "12",
                    "job_id": 1,
                    "minute": "30",
                    "month": "1",
                    "run_after": {
                      "bulk_sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ],
                      "sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  },
                  "sync_all_records": false,
                  "target": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "object": "Users",
                    "configuration": {
                      "key": "value"
                    },
                    "filter_logic": "filter_logic",
                    "new_name": "new_name",
                    "search_values": {
                      "name": "value"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"create\",\n  \"name\": \"Users Sync\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    \"object\": \"Users\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Schedule, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(),\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {},\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tMode:     \"create\",\n\t\tName:     \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{},\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Remove": {
        "id": "endpoint_modelSync.Remove",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Activate": {
        "id": "endpoint_modelSync.Activate",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/activate"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncInput"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Start": {
        "id": "endpoint_modelSync.Start",
        "namespace": [
          "subpackage_modelSync"
        ],
        "description": "> 🚧 Force full resync\n>\n> Use caution when setting the `resync` parameter to `true`. This will force a full resync of the data from the source system. This can be a time-consuming operation and may impact the performance of the source system. It is recommended to only use this option when necessary.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "identities",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "resync",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:StartModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "status": "created"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetStatus": {
        "id": "endpoint_modelSync.GetStatus",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SyncStatusEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "current_execution": {
                    "completed_at": "2024-01-01T00:00:00Z",
                    "counts": {
                      "error": 5,
                      "insert": 80,
                      "total": 100,
                      "update": 15
                    },
                    "created_at": "2024-01-01T00:00:00Z",
                    "errors": [
                      "something went wrong"
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "started_at": "2024-01-01T00:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "last_execution": {
                    "completed_at": "2024-01-01T00:00:00Z",
                    "counts": {
                      "error": 5,
                      "insert": 80,
                      "total": 100,
                      "update": 15
                    },
                    "created_at": "2024-01-01T00:00:00Z",
                    "errors": [
                      "something went wrong"
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "started_at": "2024-01-01T00:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "next_execution_time": "2024-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/status",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/status",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/status",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_schemas.Refresh": {
        "id": "endpoint_schemas.Refresh",
        "namespace": [
          "subpackage_schemas"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/refresh"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/refresh",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/refresh \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.refresh(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.refresh(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Schemas.Refresh(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/refresh",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/schemas/refresh \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.refresh(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.refresh(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Schemas.Refresh(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/refresh",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/schemas/refresh \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.refresh(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.refresh(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Schemas.Refresh(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/refresh",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/schemas/refresh \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.refresh(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.refresh(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Schemas.Refresh(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/refresh",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/schemas/refresh \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.refresh(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.refresh(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Schemas.Refresh(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_schemas.GetStatus": {
        "id": "endpoint_schemas.GetStatus",
        "namespace": [
          "subpackage_schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncSourceStatusEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/status",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "cache_status": "cached",
                  "last_refresh_finished": "2023-04-25T12:00:00Z",
                  "last_refresh_started": "2023-04-25T12:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/status \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/status",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/status",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/status",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/status",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/status \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_schemas.Get": {
        "id": "endpoint_schemas.Get",
        "namespace": [
          "subpackage_schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncSourceSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/public.users",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "public.users"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "fields": [
                    {
                      "id": "email",
                      "name": "Email",
                      "remote_type": "varchar(255)",
                      "type": "string"
                    }
                  ],
                  "id": "contact",
                  "name": "Contact"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/public.users \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/:schema_id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/:schema_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/:schema_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/:schema_id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_schemas.GetRecords": {
        "id": "endpoint_schemas.GetRecords",
        "namespace": [
          "subpackage_schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          },
          {
            "type": "literal",
            "value": "/records"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SchemaRecordsResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/public.users/records",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "public.users"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "data": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/public.users/records \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/:schema_id/records",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/:schema_id/records",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/:schema_id/records",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/:schema_id/records",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/schemas/:schema_id/records",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/schemas/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"public.users\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"public.users\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Post": {
        "id": "endpoint_models.Post",
        "namespace": [
          "subpackage_models"
        ],
        "description": "For a given connection and enrichment configuration, provides the valid sets of input fields.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/enrichment/"
          },
          {
            "type": "pathParameter",
            "value": "connection_id"
          },
          {
            "type": "literal",
            "value": "/inputfields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "connection_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:V2EnricherConfiguration"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V2GetEnrichmentInputFieldsResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/enrichment/248df4b7-aa70-47b8-a036-33ac447e668d/inputfields",
            "responseStatusCode": 200,
            "pathParameters": {
              "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  [
                    "data"
                  ]
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/248df4b7-aa70-47b8-a036-33ac447e668d/inputfields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.post(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.post(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Post(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.GetEnrichmentInputFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 401,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.post(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.post(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Post(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.GetEnrichmentInputFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 403,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.post(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.post(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Post(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.GetEnrichmentInputFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 404,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.post(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.post(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Post(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.GetEnrichmentInputFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 500,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.post(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.post(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Post(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.GetEnrichmentInputFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Preview": {
        "id": "endpoint_models.Preview",
        "namespace": [
          "subpackage_models"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/model-preview"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateModelRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/model-preview",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "Users"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/model-preview \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"Users\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.preview(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.preview({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Preview(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsPreviewRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.preview(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.preview({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Preview(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsPreviewRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.preview(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.preview({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Preview(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsPreviewRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.preview(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.preview({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Preview(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsPreviewRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.preview(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.preview({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Preview(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsPreviewRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.List": {
        "id": "endpoint_models.List",
        "namespace": [
          "subpackage_models"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/models"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelListResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "configuration": {
                      "table": "public.contacts"
                    },
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher": {
                      "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "id",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "identifier": "id",
                    "labels": [
                      {}
                    ],
                    "name": "Contacts",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "relations": [
                      {
                        "from": "id"
                      }
                    ],
                    "tracking_columns": [
                      "tracking_columns"
                    ],
                    "type": "postgresql",
                    "version": 1
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Create": {
        "id": "endpoint_models.Create",
        "namespace": [
          "subpackage_models"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/models"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateModelRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "Users"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/models \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"Users\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.create({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsCreateRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.create({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsCreateRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.create({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsCreateRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.create({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsCreateRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import CreateModelRequest\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    request=CreateModelRequest(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.create({\n    body: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        name: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.ModelsCreateRequest{\n\t\tBody: &polytomicgo.CreateModelRequest{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tName:         \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Get": {
        "id": "endpoint_models.Get",
        "namespace": [
          "subpackage_models"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Update": {
        "id": "endpoint_models.Update",
        "namespace": [
          "subpackage_models"
        ],
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "additional_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelModelFieldRequest"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "enricher",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Enrichment"
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identifier",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "labels",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "relations",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelRelation"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "tracking_columns",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "async": false
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "Users"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT \"https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d?async=false\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"Users\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:         \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:         \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:         \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:         \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tName:         \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Remove": {
        "id": "endpoint_models.Remove",
        "namespace": [
          "subpackage_models"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Sample": {
        "id": "endpoint_models.Sample",
        "namespace": [
          "subpackage_models"
        ],
        "description": "Returns sample records from the model. The first ten records that the source provides will be returned after being enriched (if applicable). Synchronous requests must complete within 10s. If either querying or enrichment exceeds 10s, please use the async option.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/sample"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSampleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d/sample",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "records": [
                    {
                      "records": {}
                    }
                  ],
                  "warnings": [
                    "Enrichment failed for 4 records: you have ran out of credits"
                  ]
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d/sample \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.List": {
        "id": "endpoint_events.List",
        "namespace": [
          "subpackage_events"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/events"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "queryParameters": [
          {
            "key": "organization_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "starting_after",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "ending_before",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EventsEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/events",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "starting_after": "2020-01-01T00:00:00Z",
              "ending_before": "2020-01-01T00:00:00Z"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "created_at": "2024-01-01T00:00:00Z",
                    "event": {
                      "key": "value"
                    },
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "type": "sync.running"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=248df4b7-aa70-47b8-a036-33ac447e668d \\\n     --data-urlencode starting_after=2020-01-01T00:00:00Z \\\n     --data-urlencode ending_before=2020-01-01T00:00:00Z",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.list(\n    organization_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n    ending_before=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.events.list({\n    organization_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after: new Date(\"2020-01-01T00:00:00.000Z\"),\n    ending_before: new Date(\"2020-01-01T00:00:00.000Z\")\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.List(\n\tcontext.TODO(),\n\t&polytomicgo.EventsListRequest{\n\t\tOrganizationId: polytomicgo.String(\n\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t),\n\t\tStartingAfter: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t\tEndingBefore: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "string",
              "type": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=string \\\n     -d type=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.list(\n    organization_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n    ending_before=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.events.list({\n    organization_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after: new Date(\"2020-01-01T00:00:00.000Z\"),\n    ending_before: new Date(\"2020-01-01T00:00:00.000Z\")\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.List(\n\tcontext.TODO(),\n\t&polytomicgo.EventsListRequest{\n\t\tOrganizationId: polytomicgo.String(\n\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t),\n\t\tStartingAfter: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t\tEndingBefore: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "string",
              "type": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=string \\\n     -d type=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.list(\n    organization_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n    ending_before=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.events.list({\n    organization_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after: new Date(\"2020-01-01T00:00:00.000Z\"),\n    ending_before: new Date(\"2020-01-01T00:00:00.000Z\")\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.List(\n\tcontext.TODO(),\n\t&polytomicgo.EventsListRequest{\n\t\tOrganizationId: polytomicgo.String(\n\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t),\n\t\tStartingAfter: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t\tEndingBefore: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "string",
              "type": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=string \\\n     -d type=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.list(\n    organization_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n    ending_before=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.events.list({\n    organization_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after: new Date(\"2020-01-01T00:00:00.000Z\"),\n    ending_before: new Date(\"2020-01-01T00:00:00.000Z\")\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.List(\n\tcontext.TODO(),\n\t&polytomicgo.EventsListRequest{\n\t\tOrganizationId: polytomicgo.String(\n\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t),\n\t\tStartingAfter: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t\tEndingBefore: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.GetTypes": {
        "id": "endpoint_events.GetTypes",
        "namespace": [
          "subpackage_events"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/events_types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EventTypesEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/events_types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  "data"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/events_types \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.events.getTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events_types",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/events_types \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.events.get_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.events.getTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.Get": {
        "id": "endpoint_jobs.Get",
        "namespace": [
          "subpackage_jobs"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/jobs/"
          },
          {
            "type": "pathParameter",
            "value": "type"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:JobResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/jobs/createmodel/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "type": "createmodel"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/createmodel/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_identity.Get": {
        "id": "endpoint_identity.Get",
        "namespace": [
          "subpackage_identity"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/me"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetIdentityResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "is_organization": false,
                  "is_partner": false,
                  "is_system": false,
                  "is_user": true,
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_name": "My Organization",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.identity.get()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.identity.get();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Identity.Get(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/me",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.identity.get()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.identity.get();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Identity.Get(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/me",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.identity.get()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.identity.get();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Identity.Get(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.List": {
        "id": "endpoint_organization.List",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationsEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "id",
                    "issuer": "https://example.com",
                    "name": "My Organization",
                    "sso_domain": "example.com",
                    "sso_org_id": "123456"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Create": {
        "id": "endpoint_organization.Create",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "client_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "client_secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "issuer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "sso_domain",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_org_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Organization"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "issuer": "https://example.com",
                  "name": "My Organization",
                  "sso_domain": "example.com",
                  "sso_org_id": "123456"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Organization\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.create(\n    name=\"My Organization\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.create({\n    name: \"My Organization\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateOrganizationRequestSchema{\n\t\tName: \"My Organization\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.create(\n    name=\"My Organization\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.create({\n    name: \"My Organization\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateOrganizationRequestSchema{\n\t\tName: \"My Organization\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.create(\n    name=\"My Organization\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.create({\n    name: \"My Organization\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateOrganizationRequestSchema{\n\t\tName: \"My Organization\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.create(\n    name=\"My Organization\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.create({\n    name: \"My Organization\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateOrganizationRequestSchema{\n\t\tName: \"My Organization\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Get": {
        "id": "endpoint_organization.Get",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "issuer": "https://example.com",
                  "name": "My Organization",
                  "sso_domain": "example.com",
                  "sso_org_id": "123456"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Update": {
        "id": "endpoint_organization.Update",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "client_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "client_secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "issuer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "sso_domain",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_org_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Organization"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "issuer": "https://example.com",
                  "name": "My Organization",
                  "sso_domain": "example.com",
                  "sso_org_id": "123456"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Organization\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Organization\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Organization\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateOrganizationRequestSchema{\n\t\tName: \"My Organization\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Organization\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Organization\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateOrganizationRequestSchema{\n\t\tName: \"My Organization\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Organization\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Organization\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateOrganizationRequestSchema{\n\t\tName: \"My Organization\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Organization\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Organization\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateOrganizationRequestSchema{\n\t\tName: \"My Organization\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Remove": {
        "id": "endpoint_organization.Remove",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Organization.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Organization.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Organization.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.organization.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Organization.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.List": {
        "id": "endpoint_users.List",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListUsersEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "email": "mail@example.com",
                    "id": "id",
                    "organization_id": "organization_id",
                    "role": "admin"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.list(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.list(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 404,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.list(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Create": {
        "id": "endpoint_users.Create",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "role",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "mail@example.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"mail@example.com\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.create(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Create(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.CreateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.create(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Create(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.CreateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 422,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.create(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Create(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.CreateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 500,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.create(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Create(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.CreateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Get": {
        "id": "endpoint_users.Get",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Update": {
        "id": "endpoint_users.Update",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "role",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "mail@example.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"mail@example.com\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Remove": {
        "id": "endpoint_users.Remove",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.CreateApiKey": {
        "id": "endpoint_users.CreateApiKey",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/keys"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "force",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:APIKeyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d/keys",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "value": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d/keys?force=true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_api_key(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.createApiKey(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.CreateApiKey(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UsersCreateApiKeyRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id/keys",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id",
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/:org_id/users/:id/keys?force=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_api_key(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.createApiKey(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.CreateApiKey(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UsersCreateApiKeyRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id/keys",
            "responseStatusCode": 404,
            "pathParameters": {
              "org_id": ":org_id",
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/:org_id/users/:id/keys?force=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_api_key(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.createApiKey(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.CreateApiKey(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UsersCreateApiKeyRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id/keys",
            "responseStatusCode": 500,
            "pathParameters": {
              "org_id": ":org_id",
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/:org_id/users/:id/keys?force=true\" \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_api_key(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.users.createApiKey(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.CreateApiKey(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UsersCreateApiKeyRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.List": {
        "id": "endpoint_permissions/policies.List",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListPoliciesResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "name": "Policy",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policy_actions": [
                      {
                        "action": "read",
                        "role_ids": [
                          "248df4b7-aa70-47b8-a036-33ac447e668d"
                        ]
                      }
                    ],
                    "system": false
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Create": {
        "id": "endpoint_permissions/policies.Create",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policy_actions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:PolicyAction"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PolicyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Policy",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policy_actions": [
                    {
                      "action": "read",
                      "role_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  ],
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Get": {
        "id": "endpoint_permissions/policies.Get",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PolicyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Policy",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policy_actions": [
                    {
                      "action": "read",
                      "role_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  ],
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Update": {
        "id": "endpoint_permissions/policies.Update",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policy_actions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:PolicyAction"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PolicyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Policy",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policy_actions": [
                    {
                      "action": "read",
                      "role_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  ],
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Remove": {
        "id": "endpoint_permissions/policies.Remove",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.policies.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.List": {
        "id": "endpoint_permissions/roles.List",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleListResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "name": "Custom",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "system": false
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Create": {
        "id": "endpoint_permissions/roles.Create",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Custom",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Get": {
        "id": "endpoint_permissions/roles.Get",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Custom",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Update": {
        "id": "endpoint_permissions/roles.Update",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Custom",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Remove": {
        "id": "endpoint_permissions/roles.Remove",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.permissions.roles.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.List": {
        "id": "endpoint_modelSync/executions.List",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListExecutionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "completed_at": "2024-01-01T00:00:00Z",
                    "counts": {
                      "error": 5,
                      "insert": 80,
                      "total": 100,
                      "update": 15
                    },
                    "created_at": "2024-01-01T00:00:00Z",
                    "errors": [
                      "something went wrong"
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "started_at": "2024-01-01T00:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.list(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.list(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.list(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.Get": {
        "id": "endpoint_modelSync/executions.Get",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetExecutionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "completed_at": "2024-01-01T00:00:00Z",
                  "counts": {
                    "error": 5,
                    "insert": 80,
                    "total": 100,
                    "update": 15
                  },
                  "created_at": "2024-01-01T00:00:00Z",
                  "errors": [
                    "something went wrong"
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "started_at": "2024-01-01T00:00:00Z",
                  "status": "created",
                  "type": "scheduled"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.GetLogUrls": {
        "id": "endpoint_modelSync/executions.GetLogUrls",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "type"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ExecutionLogsResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "type": "records"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "expires": "2024-01-01T00:00:00Z",
                  "urls": [
                    "urls"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_log_urls(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogUrls(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 400,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_log_urls(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogUrls(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_log_urls(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogUrls(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_log_urls(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogUrls(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 500,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_log_urls(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogUrls(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.GetLogs": {
        "id": "endpoint_modelSync/executions.GetLogs",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "type"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "filename"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "filename",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records/path/to/file.json",
            "responseStatusCode": 204,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "type": "records",
              "filename": "path/to/file.json"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records/path/to/file.json \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_logs(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n    filename=\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogs(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\", \"path/to/file.json\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 400,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_logs(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n    filename=\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogs(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\", \"path/to/file.json\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_logs(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n    filename=\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogs(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\", \"path/to/file.json\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_logs(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n    filename=\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogs(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\", \"path/to/file.json\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 500,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get_logs(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"records\",\n    filename=\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.modelSync.executions.getLogs(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", \"records\", \"path/to/file.json\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.List": {
        "id": "endpoint_webhooks.List",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookListEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "created_at": "2024-01-01T00:00:00Z",
                    "endpoint": "https://example.com/webhook",
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "secret": "secret"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Create": {
        "id": "endpoint_webhooks.Create",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "endpoint",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "https://example.com/webhook",
                "secret": "secret"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "endpoint": "https://example.com/webhook",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "secret": "secret"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"https://example.com/webhook\",\n  \"secret\": \"secret\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.create(\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.create({\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.create(\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.create({\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.create(\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.create({\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.create(\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.create({\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Get": {
        "id": "endpoint_webhooks.Get",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "endpoint": "https://example.com/webhook",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "secret": "secret"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Update": {
        "id": "endpoint_webhooks.Update",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "PUT",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "endpoint",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "https://example.com/webhook",
                "secret": "secret"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "endpoint": "https://example.com/webhook",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "secret": "secret"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"https://example.com/webhook\",\n  \"secret\": \"secret\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PUT https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Remove": {
        "id": "endpoint_webhooks.Remove",
        "namespace": [
          "subpackage_webhooks"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Webhooks.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Webhooks.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Webhooks.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2024-02-08"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2024-02-08\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\" });\nawait polytomic.webhooks.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Webhooks.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_:ApiError": {
        "name": "ApiError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkDiscover": {
        "name": "BulkDiscover",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "all"
            },
            {
              "value": "onlyIncremental"
            },
            {
              "value": "onlyNonIncremental"
            },
            {
              "value": "none"
            }
          ]
        }
      },
      "type_:BulkExecutionStatus": {
        "name": "BulkExecutionStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "scheduled"
            },
            {
              "value": "running"
            },
            {
              "value": "exporting"
            },
            {
              "value": "canceling"
            },
            {
              "value": "canceled"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            },
            {
              "value": "processing"
            },
            {
              "value": "errors"
            }
          ]
        }
      },
      "type_:BulkItemizedSchedule": {
        "name": "BulkItemizedSchedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "item",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BulkSelectiveMode"
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BulkSchedule"
                }
              }
            }
          ]
        }
      },
      "type_:BulkMultiScheduleConfiguration": {
        "name": "BulkMultiScheduleConfiguration",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "schedules",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkItemizedSchedule"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchedule": {
        "name": "BulkSchedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "day_of_month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "day_of_week",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ScheduleFrequency"
                }
              }
            },
            {
              "key": "hour",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "minute",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "multi",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkMultiScheduleConfiguration"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchemaExecutionStatus": {
        "name": "BulkSchemaExecutionStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "scheduled"
            },
            {
              "value": "running"
            },
            {
              "value": "exporting"
            },
            {
              "value": "canceled"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            }
          ]
        }
      },
      "type_:BulkSelectiveMode": {
        "name": "BulkSelectiveMode",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "none"
            },
            {
              "value": "incrementalFields"
            },
            {
              "value": "nonincrementalFields"
            }
          ]
        }
      },
      "type_:FilterFieldReferenceType": {
        "name": "FilterFieldReferenceType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Model"
            },
            {
              "value": "Target"
            }
          ]
        }
      },
      "type_:FilterFunction": {
        "name": "FilterFunction",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Equality"
            },
            {
              "value": "Inequality"
            },
            {
              "value": "IsNull"
            },
            {
              "value": "IsNotNull"
            },
            {
              "value": "True"
            },
            {
              "value": "False"
            },
            {
              "value": "OnOrAfter"
            },
            {
              "value": "OnOrBefore"
            },
            {
              "value": "GreaterThan"
            },
            {
              "value": "GreaterThanEqual"
            },
            {
              "value": "LessThan"
            },
            {
              "value": "LessThanEqual"
            },
            {
              "value": "StringContains"
            },
            {
              "value": "StringEndsWith"
            },
            {
              "value": "StringDoesNotContain"
            },
            {
              "value": "StringDoesNotEndWith"
            },
            {
              "value": "StringOneOf"
            },
            {
              "value": "StringNotOneOf"
            },
            {
              "value": "Between"
            },
            {
              "value": "ArrayContains"
            },
            {
              "value": "ArrayDoesNotContain"
            },
            {
              "value": "InTheLast"
            },
            {
              "value": "StringLike"
            },
            {
              "value": "StringNotLike"
            },
            {
              "value": "StringMatchesTrimmed"
            }
          ]
        }
      },
      "type_:JsonschemaForm": {
        "name": "JsonschemaForm",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:LabelLabel": {
        "name": "LabelLabel",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:ModelModelFieldRequest": {
        "name": "ModelModelFieldRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "example",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelRelation": {
        "name": "ModelRelation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "from",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "to",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelRelationTo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelRelationTo": {
        "name": "ModelRelationTo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "model_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RestErrResponse": {
        "name": "RestErrResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Application-specific error code."
            },
            {
              "key": "context",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Application context."
            },
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Error message."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Status text."
            }
          ]
        }
      },
      "type_:ScheduleFrequency": {
        "name": "ScheduleFrequency",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "manual"
            },
            {
              "value": "continuous"
            },
            {
              "value": "hourly"
            },
            {
              "value": "daily"
            },
            {
              "value": "weekly"
            },
            {
              "value": "custom"
            },
            {
              "value": "builder"
            },
            {
              "value": "runafter"
            },
            {
              "value": "multi"
            },
            {
              "value": "dbtcloud"
            }
          ]
        }
      },
      "type_:ScheduleScheduleOption": {
        "name": "ScheduleScheduleOption",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JsonschemaForm"
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ScheduleFrequency"
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SchemaAssociation": {
        "name": "SchemaAssociation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "reference_to",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "referenced_field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SchemaIdentityFunction": {
        "name": "SchemaIdentityFunction",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Equality"
            },
            {
              "value": "ISubstring"
            },
            {
              "value": "OneOf"
            }
          ]
        }
      },
      "type_:SyncDestinationProperties": {
        "name": "SyncDestinationProperties",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "does_not_report_operation_counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "new_target_label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "optional_target_mappings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "primary_metadata_object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_creation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_type_selection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_target_filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "target_creator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "use_field_names_as_labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionStatus": {
        "name": "ExecutionStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "scheduled"
            },
            {
              "value": "queued"
            },
            {
              "value": "waiting"
            },
            {
              "value": "running"
            },
            {
              "value": "processing"
            },
            {
              "value": "canceling"
            },
            {
              "value": "canceled"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            },
            {
              "value": "interrupted"
            }
          ]
        }
      },
      "type_:APIKeyResponse": {
        "name": "APIKeyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:APIKeyResponseEnvelope": {
        "name": "APIKeyResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:APIKeyResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivateSyncEnvelope": {
        "name": "ActivateSyncEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ActivateSyncOutput"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivateSyncInput": {
        "name": "ActivateSyncInput",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivateSyncOutput": {
        "name": "ActivateSyncOutput",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncDest": {
        "name": "BulkSyncDest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "modes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:SupportedMode"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncDestEnvelope": {
        "name": "BulkSyncDestEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncDest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncListEnvelope": {
        "name": "BulkSyncListEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSyncResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncResponse": {
        "name": "BulkSyncResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "destination_configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "destination_connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "discover",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSchedule"
                    }
                  }
                }
              }
            },
            {
              "key": "source_configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source_connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncResponseEnvelope": {
        "name": "BulkSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConfigurationValue": {
        "name": "ConfigurationValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionListResponseEnvelope": {
        "name": "ConnectionListResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConnectionResponseSchema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionMeta": {
        "name": "ConnectionMeta",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "has_items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_one_of",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionMetaResponse": {
        "name": "ConnectionMetaResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConfigurationValue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:ConnectionMeta"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_one_of",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionParameterValue": {
        "name": "ConnectionParameterValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionParameterValuesResp": {
        "name": "ConnectionParameterValuesResp",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "allows_creation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConnectionParameterValue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionParameterValuesResponseEnvelope": {
        "name": "ConnectionParameterValuesResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:ConnectionParameterValuesResp"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionResponseEnvelope": {
        "name": "ConnectionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionResponseSchema": {
        "name": "ConnectionResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "api_calls_last_24_hours",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "API calls made to service in the last 24h (supported integrations only)."
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status_error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionTypeSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionType": {
        "name": "ConnectionType",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "envConfig",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "use_oauth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionTypeResponseEnvelope": {
        "name": "ConnectionTypeResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConnectionType"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionTypeSchema": {
        "name": "ConnectionTypeSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "operations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CreateConnectionResponseEnvelope": {
        "name": "CreateConnectionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CreateConnectionResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CreateConnectionResponseSchema": {
        "name": "CreateConnectionResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "auth_code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Code to enter in order to complete connection authentication."
            },
            {
              "key": "auth_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL to visit to complete connection authentication."
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status_error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionTypeSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CreateModelRequest": {
        "name": "CreateModelRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "additional_fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelModelFieldRequest"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "enricher",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Enrichment"
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identifier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "relations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelRelation"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "tracking_columns",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:V2EnricherConfiguration": {
        "name": "V2EnricherConfiguration",
        "description": "Similar to a model configuration, this configures the enricher. For example, if you wanted to use Apollo to enrich people, you would send `{\"object\": \"people\"}` as the configuration. Each enricher configuration can be found in the connection configuration docs.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:V2EnricherMapping": {
        "name": "V2EnricherMapping",
        "description": "A map of parent model Source Name to child model Source Name. For example, if your model has a field called `work_email` and the enricher accepts a field called `email`, you'd send a map of `{\"work_email\":\"email\"}`. The set of required input mappings varies based on the configuration of the enrichment. You can use the `enrichment/{connection_id}/inputfields` API to discover available input field combinations for a given configuration.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "type_:Enrichment": {
        "name": "Enrichment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:V2EnricherConfiguration"
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "enricher_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Must be provided to update an existing enrichment"
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelField"
                        }
                      }
                    }
                  }
                }
              },
              "description": "If not provided, all fields will be enabled."
            },
            {
              "key": "mappings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:V2EnricherMapping"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Event": {
        "name": "Event",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "event",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:EventTypesEnvelope": {
        "name": "EventTypesEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:EventsEnvelope": {
        "name": "EventsEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Event"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionCounts": {
        "name": "ExecutionCounts",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "insert",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "update",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionLogResponse": {
        "name": "ExecutionLogResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "expires",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "urls",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionLogsResponseEnvelope": {
        "name": "ExecutionLogsResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionLogResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Filter": {
        "name": "Filter",
        "description": "Either `field` or `field_id` must be provided. If `field` is provided, `field_id` is ignored.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Source"
                    }
                  }
                }
              }
            },
            {
              "key": "field_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Model or Target field name to filter on."
            },
            {
              "key": "field_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FilterFieldReferenceType"
                    }
                  }
                }
              }
            },
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:FilterFunction"
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetConnectionMetaEnvelope": {
        "name": "GetConnectionMetaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionMetaResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:V2GetEnrichmentInputFieldsResponseEnvelope": {
        "name": "V2GetEnrichmentInputFieldsResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetExecutionResponseEnvelope": {
        "name": "GetExecutionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetExecutionResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetExecutionResponseSchema": {
        "name": "GetExecutionResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "completed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionCounts"
                    }
                  }
                }
              }
            },
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "started_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetIdentityResponseEnvelope": {
        "name": "GetIdentityResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetIdentityResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetIdentityResponseSchema": {
        "name": "GetIdentityResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_organization",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_partner",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_system",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Identity": {
        "name": "Identity",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SchemaIdentityFunction"
                }
              }
            },
            {
              "key": "new_field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "remote_field_type_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Source"
                }
              }
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:IdentityFunction": {
        "name": "IdentityFunction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:JobResponse": {
        "name": "JobResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "job_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:WorkTaskStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:JobResponseEnvelope": {
        "name": "JobResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JobResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListExecutionResponseEnvelope": {
        "name": "ListExecutionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:GetExecutionResponseSchema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListPoliciesResponseEnvelope": {
        "name": "ListPoliciesResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PolicyResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListModelSyncResponseEnvelope": {
        "name": "ListModelSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelSyncResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListUsersEnvelope": {
        "name": "ListUsersEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:User"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Mode": {
        "name": "Mode",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_sync_mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_target_filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelField": {
        "name": "ModelField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "example",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "remote_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unique",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "user_added",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelFieldResponse": {
        "name": "ModelFieldResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelField"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelListResponseEnvelope": {
        "name": "ModelListResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelResponse": {
        "name": "ModelResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "enricher",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Enrichment"
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identifier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:LabelLabel"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "relations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Relation"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "tracking_columns",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelResponseEnvelope": {
        "name": "ModelResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelResponse"
                    }
                  }
                }
              }
            },
            {
              "key": "job",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JobResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSample": {
        "name": "ModelSample",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "records",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:V2SampleRecord"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSampleResponseEnvelope": {
        "name": "ModelSampleResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelSample"
                    }
                  }
                }
              }
            },
            {
              "key": "job",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JobResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Organization": {
        "name": "Organization",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sso_domain",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sso_org_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:OrganizationEnvelope": {
        "name": "OrganizationEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Organization"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:OrganizationsEnvelope": {
        "name": "OrganizationsEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Organization"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Override": {
        "name": "Override",
        "description": "Either `field` or `field_id` must be provided. If `field_id` is provided, `field` is ignored.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Source"
                    }
                  }
                }
              }
            },
            {
              "key": "field_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Field ID of the model field to override."
            },
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FilterFunction"
                    }
                  }
                }
              }
            },
            {
              "key": "override",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PolicyAction": {
        "name": "PolicyAction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "action",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "role_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PolicyResponse": {
        "name": "PolicyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policy_actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PolicyAction"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "system",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PolicyResponseEnvelope": {
        "name": "PolicyResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PolicyResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Relation": {
        "name": "Relation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "from",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "to",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RelationTo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RelationTo": {
        "name": "RelationTo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "model_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RoleListResponseEnvelope": {
        "name": "RoleListResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:RoleResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RoleResponse": {
        "name": "RoleResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "system",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RoleResponseEnvelope": {
        "name": "RoleResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RoleResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RunAfter": {
        "name": "RunAfter",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bulk_sync_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sync_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:V2SampleRecord": {
        "name": "V2SampleRecord",
        "description": "A map of `fieldSource` -> `fieldName: fieldValue`. Because there may be field name conflicts between the base model and enrichments, the base model fields are placed in a map under the model ID. Fields from enrichments are placed under the enricher ID.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "unknown"
                  }
                }
              }
            }
          }
        }
      },
      "type_:Schedule": {
        "name": "Schedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "day_of_month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "day_of_week",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ScheduleFrequency"
                    }
                  }
                }
              }
            },
            {
              "key": "hour",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "job_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "minute",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "run_after",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RunAfter"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ScheduleOptionResponse": {
        "name": "ScheduleOptionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "schedule_options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ScheduleScheduleOption"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ScheduleOptionResponseEnvelope": {
        "name": "ScheduleOptionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ScheduleOptionResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Source": {
        "name": "Source",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "model_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StartModelSyncResponseEnvelope": {
        "name": "StartModelSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StartModelSyncResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StartModelSyncResponseSchema": {
        "name": "StartModelSyncResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionStatus"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SupportedMode": {
        "name": "SupportedMode",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": ""
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_sync_mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_target_filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncField": {
        "name": "ModelSyncField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "new",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "override_value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Source"
                }
              }
            },
            {
              "key": "sync_mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncResponse": {
        "name": "ModelSyncResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelSyncField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filter_logic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Filter"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Identity"
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "override_fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelSyncField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "overrides",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Override"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Schedule"
                    }
                  }
                }
              }
            },
            {
              "key": "sync_all_records",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Target"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncResponseEnvelope": {
        "name": "ModelSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelSyncResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SyncStatusEnvelope": {
        "name": "SyncStatusEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SyncStatusResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SyncStatusResponse": {
        "name": "SyncStatusResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "current_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetExecutionResponseSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "last_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetExecutionResponseSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "next_execution_time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Target": {
        "name": "Target",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "filter_logic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "new_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "search_values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TargetField": {
        "name": "TargetField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "association",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "createable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filterable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identity_functions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:IdentityFunction"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "required",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "updateable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TargetResponse": {
        "name": "TargetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TargetField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "modes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Mode"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "properties",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SyncDestinationProperties"
                    }
                  }
                }
              }
            },
            {
              "key": "refreshed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TargetResponseEnvelope": {
        "name": "TargetResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TargetResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:User": {
        "name": "User",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:UserEnvelope": {
        "name": "UserEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:User"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Webhook": {
        "name": "Webhook",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "endpoint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "secret",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WebhookEnvelope": {
        "name": "WebhookEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Webhook"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WebhookListEnvelope": {
        "name": "WebhookListEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Webhook"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkField": {
        "name": "BulkField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "obfuscated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchema": {
        "name": "BulkSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "output_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "partition_key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchemaEnvelope": {
        "name": "BulkSchemaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncExecution": {
        "name": "BulkSyncExecution",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "completed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_resync",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_test",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schemas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSyncSchemaExecution"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "started_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkExecutionStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncExecutionEnvelope": {
        "name": "BulkSyncExecutionEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncExecution"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSchemaExecution": {
        "name": "BulkSyncSchemaExecution",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "completed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "error_count",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "record_count",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schema",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "started_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSchemaExecutionStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "status_message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSource": {
        "name": "BulkSyncSource",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "schemas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Schema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSourceEnvelope": {
        "name": "BulkSyncSourceEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncSource"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSourceSchemaEnvelope": {
        "name": "BulkSyncSourceSchemaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Schema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSourceStatus": {
        "name": "BulkSyncSourceStatus",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cache_status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last_refresh_finished",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last_refresh_started",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSourceStatusEnvelope": {
        "name": "BulkSyncSourceStatusEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncSourceStatus"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncStatusEnvelope": {
        "name": "BulkSyncStatusEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncStatusResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncStatusResponse": {
        "name": "BulkSyncStatusResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "current_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncExecution"
                    }
                  }
                }
              }
            },
            {
              "key": "last_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncExecution"
                    }
                  }
                }
              }
            },
            {
              "key": "next_execution_time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectCardResponse": {
        "name": "ConnectCardResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "redirect_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectCardResponseEnvelope": {
        "name": "ConnectCardResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectCardResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListBulkSchema": {
        "name": "ListBulkSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSchema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListBulkSyncExecutionsEnvelope": {
        "name": "ListBulkSyncExecutionsEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSyncExecution"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PickValue": {
        "name": "PickValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Schema": {
        "name": "Schema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:SchemaField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SchemaField": {
        "name": "SchemaField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "association",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SchemaAssociation"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "remote_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PickValue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SchemaRecordsResponseEnvelope": {
        "name": "SchemaRecordsResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetModelSyncSourceMetaEnvelope": {
        "name": "GetModelSyncSourceMetaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelSyncSourceMetaResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SourceMeta": {
        "name": "SourceMeta",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "has_items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_one_of",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncSourceMetaResponse": {
        "name": "ModelSyncSourceMetaResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConfigurationValue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:SourceMeta"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_one_of",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WorkTaskStatus": {
        "name": "WorkTaskStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "running"
            },
            {
              "value": "done"
            },
            {
              "value": "failed"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_bulkSync": {
        "id": "subpackage_bulkSync",
        "name": "bulkSync"
      },
      "subpackage_bulkSync/executions": {
        "id": "subpackage_bulkSync/executions",
        "name": "executions"
      },
      "subpackage_bulkSync/schemas": {
        "id": "subpackage_bulkSync/schemas",
        "name": "schemas"
      },
      "subpackage_connections": {
        "id": "subpackage_connections",
        "name": "connections"
      },
      "subpackage_modelSync": {
        "id": "subpackage_modelSync",
        "name": "modelSync"
      },
      "subpackage_schemas": {
        "id": "subpackage_schemas",
        "name": "schemas"
      },
      "subpackage_models": {
        "id": "subpackage_models",
        "name": "models"
      },
      "subpackage_events": {
        "id": "subpackage_events",
        "name": "events"
      },
      "subpackage_jobs": {
        "id": "subpackage_jobs",
        "name": "jobs"
      },
      "subpackage_identity": {
        "id": "subpackage_identity",
        "name": "identity"
      },
      "subpackage_organization": {
        "id": "subpackage_organization",
        "name": "organization"
      },
      "subpackage_users": {
        "id": "subpackage_users",
        "name": "users"
      },
      "subpackage_permissions": {
        "id": "subpackage_permissions",
        "name": "permissions"
      },
      "subpackage_permissions/policies": {
        "id": "subpackage_permissions/policies",
        "name": "policies"
      },
      "subpackage_permissions/roles": {
        "id": "subpackage_permissions/roles",
        "name": "roles"
      },
      "subpackage_modelSync/executions": {
        "id": "subpackage_modelSync/executions",
        "name": "executions"
      },
      "subpackage_webhooks": {
        "id": "subpackage_webhooks",
        "name": "webhooks"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    },
    "globalHeaders": [
      {
        "key": "X-Polytomic-Version",
        "valueShape": {
          "type": "alias",
          "value": {
            "type": "literal",
            "value": {
              "type": "stringLiteral",
              "value": "2024-02-08"
            }
          }
        }
      }
    ]
  },
  {
    "id": "4f9d4e39-a928-4c8a-b9d0-308434722f10",
    "endpoints": {
      "endpoint_bulkSync.GetDestination": {
        "id": "endpoint_bulkSync.GetDestination",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/dest/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncDestEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/dest/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "advanced": {
                      "items": {
                        "truncate_existing": {
                          "default": "",
                          "required": false
                        }
                      }
                    },
                    "mirror_schemas": {
                      "default": "",
                      "required": false
                    },
                    "schema": {
                      "default": "",
                      "required": false
                    }
                  },
                  "modes": [
                    {
                      "description": "Replace all records",
                      "id": "replace",
                      "label": "Replace",
                      "requires_identity": false,
                      "supports_field_sync_mode": false,
                      "supports_target_filters": false
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/dest/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/dest/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/dest/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/dest/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/dest/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_destination(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getDestination(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetDestination(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.GetSource": {
        "id": "endpoint_bulkSync.GetSource",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/source/"
          },
          {
            "type": "pathParameter",
            "value": "connection_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "connection_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "refresh_schemas",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "include_fields",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncSourceEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/source/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "include_fields": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "key": "value"
                  },
                  "schemas": [
                    {
                      "id": "contact",
                      "name": "Contact"
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id",
            "responseStatusCode": 400,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {
              "refresh_schemas": true,
              "include_fields": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/:connection_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {
              "refresh_schemas": true,
              "include_fields": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/:connection_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {
              "refresh_schemas": true,
              "include_fields": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/:connection_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id",
            "responseStatusCode": 500,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {
              "refresh_schemas": true,
              "include_fields": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/source/:connection_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true \\\n     -d include_fields=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    include_fields=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    include_fields: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetSourceRequest{\n\t\tIncludeFields: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.GetSourceSchema": {
        "id": "endpoint_bulkSync.GetSourceSchema",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/source/"
          },
          {
            "type": "pathParameter",
            "value": "connection_id"
          },
          {
            "type": "literal",
            "value": "/schema/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "connection_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncSourceSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/source/248df4b7-aa70-47b8-a036-33ac447e668d/schema/schema_id",
            "responseStatusCode": 200,
            "pathParameters": {
              "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "schema_id"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "fields": [
                    {
                      "id": "email",
                      "name": "Email",
                      "remote_type": "varchar(255)",
                      "type": "string"
                    }
                  ],
                  "id": "contact",
                  "name": "Contact"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/248df4b7-aa70-47b8-a036-33ac447e668d/schema/schema_id \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_schema(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"schema_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceSchema(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"schema_id\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceSchema(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"schema_id\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id/schema/:schema_id",
            "responseStatusCode": 400,
            "pathParameters": {
              "connection_id": ":connection_id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/:connection_id/schema/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_schema(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"schema_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceSchema(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"schema_id\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceSchema(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"schema_id\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id/schema/:schema_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "connection_id": ":connection_id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/:connection_id/schema/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_schema(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"schema_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceSchema(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"schema_id\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceSchema(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"schema_id\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id/schema/:schema_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "connection_id": ":connection_id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/:connection_id/schema/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_schema(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"schema_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceSchema(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"schema_id\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceSchema(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"schema_id\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id/schema/:schema_id",
            "responseStatusCode": 500,
            "pathParameters": {
              "connection_id": ":connection_id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/:connection_id/schema/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_schema(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"schema_id\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceSchema(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"schema_id\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceSchema(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"schema_id\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.GetSourceStatus": {
        "id": "endpoint_bulkSync.GetSourceStatus",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/source/"
          },
          {
            "type": "pathParameter",
            "value": "connection_id"
          },
          {
            "type": "literal",
            "value": "/status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "connection_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncSourceStatusEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/source/248df4b7-aa70-47b8-a036-33ac447e668d/status",
            "responseStatusCode": 200,
            "pathParameters": {
              "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "cache_status": "cached",
                  "last_refresh_finished": "2023-04-25T12:00:00Z",
                  "last_refresh_started": "2023-04-25T12:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/248df4b7-aa70-47b8-a036-33ac447e668d/status \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_status(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id/status",
            "responseStatusCode": 400,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/:connection_id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_status(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id/status",
            "responseStatusCode": 401,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/:connection_id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_status(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id/status",
            "responseStatusCode": 404,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/:connection_id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_status(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/source/:connection_id/status",
            "responseStatusCode": 500,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/source/:connection_id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_source_status(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getSourceStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetSourceStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.List": {
        "id": "endpoint_bulkSync.List",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncListEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "active": true,
                    "destination_configuration": {
                      "schema": "my_schema"
                    },
                    "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "discover": true,
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "mode": "replace",
                    "name": "My Bulk Sync",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "schedule": {
                      "frequency": "manual",
                      "day_of_month": "1",
                      "day_of_week": "monday",
                      "hour": "0",
                      "minute": "0",
                      "month": "1"
                    },
                    "source_configuration": {
                      "replication_slot": "slot"
                    },
                    "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Create": {
        "id": "endpoint_bulkSync.Create",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_objects",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "disable_record_timestamps",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "discover",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "DEPRECATED: Use automatically_add_new_objects/automatically_add_new_fields instead"
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:BulkSchedule"
                  }
                }
              },
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "My Bulk Sync",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "destination_configuration": {
                    "schema": "my_schema"
                  },
                  "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "discover": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "mode": "replace",
                  "name": "My Bulk Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "frequency": "manual",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "hour": "0",
                    "minute": "0",
                    "month": "1",
                    "multi": {
                      "type": "type"
                    }
                  },
                  "source_configuration": {
                    "replication_slot": "slot"
                  },
                  "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"My Bulk Sync\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.create(\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.create({\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Get": {
        "id": "endpoint_bulkSync.Get",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "refresh_schemas",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "destination_configuration": {
                    "schema": "my_schema"
                  },
                  "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "discover": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "mode": "replace",
                  "name": "My Bulk Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "frequency": "manual",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "hour": "0",
                    "minute": "0",
                    "month": "1",
                    "multi": {
                      "type": "type"
                    }
                  },
                  "source_configuration": {
                    "replication_slot": "slot"
                  },
                  "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d refresh_schemas=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncGetRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Remove": {
        "id": "endpoint_bulkSync.Remove",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "refresh_schemas",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d?refresh_schemas=true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "refresh_schemas": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/bulk/syncs/:id?refresh_schemas=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh_schemas=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh_schemas: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.BulkSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.BulkSyncRemoveRequest{\n\t\tRefreshSchemas: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Update": {
        "id": "endpoint_bulkSync.Update",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "description": "> 📘 Updating schemas\n>\n> Schema updates can be performed using the [Update Bulk Sync Schemas](https://apidocs.polytomic.com/api-reference/bulk-sync/schemas/patch) endpoint.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "automatically_add_new_objects",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:BulkDiscover"
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "destination_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "disable_record_timestamps",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "discover",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "DEPRECATED: Use automatically_add_new_objects/automatically_add_new_fields instead"
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": ""
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:BulkSchedule"
                  }
                }
              },
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "source_connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "My Bulk Sync",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "destination_configuration": {
                    "schema": "my_schema"
                  },
                  "destination_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "discover": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "mode": "replace",
                  "name": "My Bulk Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "frequency": "manual",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "hour": "0",
                    "minute": "0",
                    "month": "1",
                    "multi": {
                      "type": "type"
                    }
                  },
                  "source_configuration": {
                    "replication_slot": "slot"
                  },
                  "source_connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"My Bulk Sync\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "destination_connection_id": "string",
                "name": "string",
                "schedule": {
                  "frequency": "manual"
                },
                "source_connection_id": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"destination_connection_id\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {\n    \"frequency\": \"manual\"\n  },\n  \"source_connection_id\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import BulkSchedule, ScheduleFrequency\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    destination_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"name\",\n    schedule=BulkSchedule(\n        frequency=ScheduleFrequency.MANUAL,\n    ),\n    source_connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient, Polytomic } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    destination_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name: \"name\",\n    schedule: {\n        frequency: Polytomic.ScheduleFrequency.Manual\n    },\n    source_connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateBulkSyncRequest{\n\t\tDestinationConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tMode: polytomicgo.String(\n\t\t\t\"replicate\",\n\t\t),\n\t\tName: \"My Bulk Sync\",\n\t\tSchedule: &polytomicgo.BulkSchedule{\n\t\t\tDayOfMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t\tDayOfWeek: polytomicgo.String(\n\t\t\t\t\"monday\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.ScheduleFrequencyManual,\n\t\t\tHour: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMinute: polytomicgo.String(\n\t\t\t\t\"0\",\n\t\t\t),\n\t\t\tMonth: polytomicgo.String(\n\t\t\t\t\"1\",\n\t\t\t),\n\t\t},\n\t\tSourceConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Activate": {
        "id": "endpoint_bulkSync.Activate",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/activate"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncInput"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/activate",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.Start": {
        "id": "endpoint_bulkSync.Start",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "resync",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "test",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncExecutionEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "completed_at": "2023-04-25T12:00:00Z",
                  "created_at": "2023-04-25T12:00:00Z",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "is_resync": false,
                  "is_test": false,
                  "schemas": [
                    {
                      "error_count": 0,
                      "record_count": 1000,
                      "schema": "contact"
                    }
                  ],
                  "started_at": "2023-04-25T12:00:00Z",
                  "status": "created",
                  "type": "scheduled"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    resync=False,\n    test=False,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.executions.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    resync: false,\n    test: false\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartBulkSyncRequest{\n\t\tResync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTest: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    resync=False,\n    test=False,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.executions.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    resync: false,\n    test: false\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartBulkSyncRequest{\n\t\tResync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTest: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/bulk/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    resync=False,\n    test=False,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.executions.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    resync: false,\n    test: false\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartBulkSyncRequest{\n\t\tResync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTest: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync.GetStatus": {
        "id": "endpoint_bulkSync.GetStatus",
        "namespace": [
          "subpackage_bulkSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncStatusEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "current_execution": {
                    "completed_at": "2023-04-25T12:00:00Z",
                    "created_at": "2023-04-25T12:00:00Z",
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "is_resync": false,
                    "is_test": false,
                    "schemas": [
                      {
                        "error_count": 0,
                        "record_count": 1000,
                        "schema": "contact"
                      }
                    ],
                    "started_at": "2023-04-25T12:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "last_execution": {
                    "completed_at": "2023-04-25T12:00:00Z",
                    "created_at": "2023-04-25T12:00:00Z",
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "is_resync": false,
                    "is_test": false,
                    "schemas": [
                      {
                        "error_count": 0,
                        "record_count": 1000,
                        "schema": "contact"
                      }
                    ],
                    "started_at": "2023-04-25T12:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "next_execution_time": "2023-04-25T12:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/status",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/status",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/status",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/executions.List": {
        "id": "endpoint_bulkSync/executions.List",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListBulkSyncExecutionsEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "completed_at": "2023-04-25T12:00:00Z",
                    "created_at": "2023-04-25T12:00:00Z",
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "is_resync": false,
                    "is_test": false,
                    "schemas": [
                      {
                        "error_count": 0,
                        "record_count": 1000,
                        "schema": "contact"
                      }
                    ],
                    "started_at": "2023-04-25T12:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/executions.Get": {
        "id": "endpoint_bulkSync/executions.Get",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "exec_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "exec_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSyncExecutionEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "exec_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "completed_at": "2023-04-25T12:00:00Z",
                  "created_at": "2023-04-25T12:00:00Z",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "is_resync": false,
                  "is_test": false,
                  "schemas": [
                    {
                      "error_count": 0,
                      "record_count": 1000,
                      "schema": "contact"
                    }
                  ],
                  "started_at": "2023-04-25T12:00:00Z",
                  "status": "created",
                  "type": "scheduled"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    exec_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions/:exec_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "exec_id": ":exec_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/executions/:exec_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    exec_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/executions/:exec_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "exec_id": ":exec_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/executions/:exec_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.executions.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    exec_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.List": {
        "id": "endpoint_bulkSync/schemas.List",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "filters",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "map",
                    "keyShape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "valueShape": {
                      "type": "alias",
                      "value": {
                        "type": "optional",
                        "shape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListBulkSchema"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "enabled": true,
                    "fields": [
                      {
                        "enabled": true,
                        "id": "email",
                        "obfuscated": false
                      }
                    ],
                    "id": "Contact",
                    "output_name": "contact",
                    "partition_key": "email"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.SchemasListRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "filters": {
                "string": "string"
              }
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode filters={\"string\":\"string\"}",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.SchemasListRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "filters": {
                "string": "string"
              }
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     --data-urlencode filters={\"string\":\"string\"}",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.list(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.SchemasListRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.Patch": {
        "id": "endpoint_bulkSync/schemas.Patch",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "schemas",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:BulkSchema"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListBulkSchema"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "enabled": true,
                    "fields": [
                      {
                        "enabled": true,
                        "id": "email",
                        "obfuscated": false
                      }
                    ],
                    "id": "Contact",
                    "output_name": "contact",
                    "partition_key": "email"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Patch(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&bulksync.BulkSyncSchemasRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.Get": {
        "id": "endpoint_bulkSync/schemas.Get",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/Contact",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "Contact"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "enabled": true,
                  "fields": [
                    {
                      "enabled": true,
                      "id": "email",
                      "obfuscated": false
                    }
                  ],
                  "id": "Contact",
                  "output_name": "contact",
                  "partition_key": "email"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/Contact \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"Contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"Contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"Contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"Contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"Contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"Contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"Contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"Contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"Contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_bulkSync/schemas.Update": {
        "id": "endpoint_bulkSync/schemas.Update",
        "namespace": [
          "subpackage_bulkSync",
          "subpackage_bulkSync/schemas"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/bulk/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/schemas/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "enabled",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:BulkField"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "partition_key",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:BulkSchemaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/contact",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "contact"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "enabled": true,
                  "fields": [
                    {
                      "enabled": true,
                      "id": "email",
                      "obfuscated": false
                    }
                  ],
                  "id": "Contact",
                  "output_name": "contact",
                  "partition_key": "email"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/schemas/contact \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n    enabled=True,\n    partition_key=\"email\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {\n    enabled: true,\n    partition_key: \"email\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{\n\t\tEnabled: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t\tPartitionKey: polytomicgo.String(\n\t\t\t\"email\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n    enabled=True,\n    partition_key=\"email\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {\n    enabled: true,\n    partition_key: \"email\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{\n\t\tEnabled: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t\tPartitionKey: polytomicgo.String(\n\t\t\t\"email\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n    enabled=True,\n    partition_key=\"email\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {\n    enabled: true,\n    partition_key: \"email\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{\n\t\tEnabled: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t\tPartitionKey: polytomicgo.String(\n\t\t\t\"email\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n    enabled=True,\n    partition_key=\"email\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {\n    enabled: true,\n    partition_key: \"email\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{\n\t\tEnabled: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t\tPartitionKey: polytomicgo.String(\n\t\t\t\"email\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/bulk/syncs/:id/schemas/:schema_id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/bulk/syncs/:id/schemas/:schema_id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.bulk_sync.schemas.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n    enabled=True,\n    partition_key=\"email\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.bulkSync.schemas.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\", {\n    enabled: true,\n    partition_key: \"email\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tbulksync \"github.com/polytomic/polytomic-go/bulksync\"\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.BulkSync.Schemas.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n\t&bulksync.UpdateBulkSchema{\n\t\tEnabled: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t\tPartitionKey: polytomicgo.String(\n\t\t\t\"email\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetTypes": {
        "id": "endpoint_connections.GetTypes",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connection_types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionTypeResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connection_types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "envConfig": {
                      "key": "value"
                    },
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "use_oauth": true
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connection_types",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connection_types",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connection_types \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.List": {
        "id": "endpoint_connections.List",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionListResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "api_calls_last_24_hours": 2021,
                    "configuration": {
                      "database": "example",
                      "hostname": "postgres.example.com",
                      "password": "password",
                      "port": 5432,
                      "username": "user"
                    },
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "name": "My Postgres Connection",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "status": "healthy",
                    "status_error": "error message",
                    "type": {
                      "id": "postgresql",
                      "name": "PostgreSQL"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Create": {
        "id": "endpoint_connections.Create",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "redirect_url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "URL to redirect to after completing OAuth flow."
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "validate",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Validate connection configuration."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateConnectionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Postgres Connection",
                "type": "postgresql"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "auth_code": "auth_code",
                  "auth_url": "auth_url",
                  "configuration": {
                    "database": "example",
                    "hostname": "postgres.example.com",
                    "password": "password",
                    "port": 5432,
                    "username": "user"
                  },
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "My Postgres Connection",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "status": "healthy",
                  "status_error": "error message",
                  "type": {
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "operations": [
                      "operations"
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Postgres Connection\",\n  \"type\": \"postgresql\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Connection\",\n    redirect_url=\"https://example.com/oauth_redirect\",\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.create({\n    name: \"My Connection\",\n    redirect_url: \"https://example.com/oauth_redirect\",\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tRedirectUrl: polytomicgo.String(\n\t\t\t\"https://example.com/oauth_redirect\",\n\t\t),\n\t\tType: \"postgresql\",\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Connection\",\n    redirect_url=\"https://example.com/oauth_redirect\",\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.create({\n    name: \"My Connection\",\n    redirect_url: \"https://example.com/oauth_redirect\",\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tRedirectUrl: polytomicgo.String(\n\t\t\t\"https://example.com/oauth_redirect\",\n\t\t),\n\t\tType: \"postgresql\",\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Connection\",\n    redirect_url=\"https://example.com/oauth_redirect\",\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.create({\n    name: \"My Connection\",\n    redirect_url: \"https://example.com/oauth_redirect\",\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tRedirectUrl: polytomicgo.String(\n\t\t\t\"https://example.com/oauth_redirect\",\n\t\t),\n\t\tType: \"postgresql\",\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Connection\",\n    redirect_url=\"https://example.com/oauth_redirect\",\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.create({\n    name: \"My Connection\",\n    redirect_url: \"https://example.com/oauth_redirect\",\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tRedirectUrl: polytomicgo.String(\n\t\t\t\"https://example.com/oauth_redirect\",\n\t\t),\n\t\tType: \"postgresql\",\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Connection\",\n    redirect_url=\"https://example.com/oauth_redirect\",\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.create({\n    name: \"My Connection\",\n    redirect_url: \"https://example.com/oauth_redirect\",\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tRedirectUrl: polytomicgo.String(\n\t\t\t\"https://example.com/oauth_redirect\",\n\t\t),\n\t\tType: \"postgresql\",\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "type": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"type\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.create(\n    name=\"My Connection\",\n    redirect_url=\"https://example.com/oauth_redirect\",\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.create({\n    name: \"My Connection\",\n    redirect_url: \"https://example.com/oauth_redirect\",\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tRedirectUrl: polytomicgo.String(\n\t\t\t\"https://example.com/oauth_redirect\",\n\t\t),\n\t\tType: \"postgresql\",\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Connect": {
        "id": "endpoint_connections.Connect",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/connect/"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "connection",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "redirect_url",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "whitelist",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectCardResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Salesforce Connection",
                "redirect_url": "redirect_url"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "redirect_url": "https://example.com",
                  "token": "token"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Salesforce Connection\",\n  \"redirect_url\": \"redirect_url\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "redirect_url": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"redirect_url\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "redirect_url": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"redirect_url\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "redirect_url": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"redirect_url\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/connect/",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string",
                "redirect_url": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/connect/ \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\",\n  \"redirect_url\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Get": {
        "id": "endpoint_connections.Get",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "api_calls_last_24_hours": 2021,
                  "configuration": {
                    "database": "example",
                    "hostname": "postgres.example.com",
                    "password": "password",
                    "port": 5432,
                    "username": "user"
                  },
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "My Postgres Connection",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "status": "healthy",
                  "status_error": "error message",
                  "type": {
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "operations": [
                      "operations"
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Remove": {
        "id": "endpoint_connections.Remove",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "force",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d?force=true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/connections/:id?force=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Connections.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsRemoveRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.Update": {
        "id": "endpoint_connections.Update",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "reconnect",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "type",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "validate",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "description": "Validate connection configuration."
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateConnectionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Postgres Connection"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "auth_code": "auth_code",
                  "auth_url": "auth_url",
                  "configuration": {
                    "database": "example",
                    "hostname": "postgres.example.com",
                    "password": "password",
                    "port": 5432,
                    "username": "user"
                  },
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "My Postgres Connection",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "status": "healthy",
                  "status_error": "error message",
                  "type": {
                    "id": "postgresql",
                    "name": "PostgreSQL",
                    "operations": [
                      "operations"
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Postgres Connection\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Connection\",\n    reconnect=False,\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Connection\",\n    reconnect: false,\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tReconnect: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tType: polytomicgo.String(\n\t\t\t\"postgresql\",\n\t\t),\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Connection\",\n    reconnect=False,\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Connection\",\n    reconnect: false,\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tReconnect: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tType: polytomicgo.String(\n\t\t\t\"postgresql\",\n\t\t),\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Connection\",\n    reconnect=False,\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Connection\",\n    reconnect: false,\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tReconnect: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tType: polytomicgo.String(\n\t\t\t\"postgresql\",\n\t\t),\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Connection\",\n    reconnect=False,\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Connection\",\n    reconnect: false,\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tReconnect: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tType: polytomicgo.String(\n\t\t\t\"postgresql\",\n\t\t),\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Connection\",\n    reconnect=False,\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Connection\",\n    reconnect: false,\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tReconnect: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tType: polytomicgo.String(\n\t\t\t\"postgresql\",\n\t\t),\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Connection\",\n    reconnect=False,\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Connection\",\n    reconnect: false,\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tReconnect: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tType: polytomicgo.String(\n\t\t\t\"postgresql\",\n\t\t),\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/connections/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"My Connection\",\n    reconnect=False,\n    type=\"s3\",\n    validate=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"My Connection\",\n    reconnect: false,\n    type: \"s3\",\n    validate: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateConnectionRequestSchema{\n\t\tName: \"My Postgres Connection\",\n\t\tReconnect: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tType: polytomicgo.String(\n\t\t\t\"postgresql\",\n\t\t),\n\t\tValidate: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetParameterValues": {
        "id": "endpoint_connections.GetParameterValues",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/parameter_values"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ConnectionParameterValuesResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/parameter_values",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "data": {
                    "allows_creation": true,
                    "values": [
                      {}
                    ]
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/parameter_values \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_parameter_values(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getParameterValues(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetParameterValues(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/parameter_values",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/parameter_values \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_parameter_values(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getParameterValues(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetParameterValues(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/parameter_values",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/parameter_values \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_parameter_values(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getParameterValues(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetParameterValues(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/parameter_values",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/parameter_values \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_parameter_values(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getParameterValues(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetParameterValues(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetSource": {
        "id": "endpoint_connections.GetSource",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/source"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetConnectionMetaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/source",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "configuration": {}
                  },
                  "items": {
                    "items": {
                      "has_items": true
                    }
                  },
                  "requires_one_of": [
                    "requires_one_of"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/source \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:id/source \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSource(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSource(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetSourceFields": {
        "id": "endpoint_connections.GetSourceFields",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/source/fields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "query",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelFieldResponse"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/source/fields",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "description": "Unique identifier",
                    "example": {
                      "key": "value"
                    },
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "label": "ID",
                    "name": "id",
                    "remote_type": "string",
                    "type": "string",
                    "unique": true,
                    "user_added": false
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/source/fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/source/fields",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/source/fields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_source_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getSourceFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetSourceFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ModelFieldsRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetTarget": {
        "id": "endpoint_connections.GetTarget",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/target"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "search",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetConnectionMetaEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/target",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "type": "table",
              "search": "public.users"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "configuration": {}
                  },
                  "items": {
                    "items": {
                      "has_items": true
                    }
                  },
                  "requires_one_of": [
                    "requires_one_of"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/target \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=table \\\n     -d search=public.users",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"table\",\n    search=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    type: \"table\",\n    search: \"public.users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsGetTargetRequest{\n\t\tType: polytomicgo.String(\n\t\t\t\"table\",\n\t\t),\n\t\tSearch: polytomicgo.String(\n\t\t\t\"public.users\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"table\",\n    search=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    type: \"table\",\n    search: \"public.users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsGetTargetRequest{\n\t\tType: polytomicgo.String(\n\t\t\t\"table\",\n\t\t),\n\t\tSearch: polytomicgo.String(\n\t\t\t\"public.users\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"table\",\n    search=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    type: \"table\",\n    search: \"public.users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsGetTargetRequest{\n\t\tType: polytomicgo.String(\n\t\t\t\"table\",\n\t\t),\n\t\tSearch: polytomicgo.String(\n\t\t\t\"public.users\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"table\",\n    search=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    type: \"table\",\n    search: \"public.users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsGetTargetRequest{\n\t\tType: polytomicgo.String(\n\t\t\t\"table\",\n\t\t),\n\t\tSearch: polytomicgo.String(\n\t\t\t\"public.users\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"table\",\n    search=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    type: \"table\",\n    search: \"public.users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsGetTargetRequest{\n\t\tType: polytomicgo.String(\n\t\t\t\"table\",\n\t\t),\n\t\tSearch: polytomicgo.String(\n\t\t\t\"public.users\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "type": "string",
              "search": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/connections/:id/target \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d type=string \\\n     -d search=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"table\",\n    search=\"public.users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTarget(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    type: \"table\",\n    search: \"public.users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTarget(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ConnectionsGetTargetRequest{\n\t\tType: polytomicgo.String(\n\t\t\t\"table\",\n\t\t),\n\t\tSearch: polytomicgo.String(\n\t\t\t\"public.users\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_connections.GetTargetFields": {
        "id": "endpoint_connections.GetTargetFields",
        "namespace": [
          "subpackage_connections"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/target/fields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "refresh",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "target",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:TargetResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/target/fields",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "target": "database.table"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "fields": [
                    {
                      "association": false,
                      "createable": true,
                      "description": "Field description",
                      "filterable": true,
                      "id": "field1",
                      "name": "Field",
                      "required": true,
                      "source_type": "string",
                      "supports_identity": false,
                      "type": "string",
                      "updateable": true
                    }
                  ],
                  "id": "database.table",
                  "modes": [
                    {
                      "description": "Create records when they don't exist; don't update existing ones",
                      "label": "Create",
                      "mode": "create",
                      "requires_identity": true,
                      "supports_field_sync_mode": false,
                      "supports_target_filters": false
                    }
                  ],
                  "name": "Table",
                  "properties": {
                    "does_not_report_operation_counts": true,
                    "new_target_label": "new_target_label",
                    "optional_target_mappings": true,
                    "primary_metadata_object": "primary_metadata_object",
                    "requires_configuration": true,
                    "supports_field_creation": true,
                    "supports_field_type_selection": true,
                    "supports_target_filters": true,
                    "target_creator": true,
                    "use_field_names_as_labels": true
                  },
                  "refreshed_at": "2024-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/target/fields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"database.table\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh=False,\n    target=\"database.table\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh: false,\n    target: \"database.table\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.TargetRequest{\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: \"database.table\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target/fields",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "target": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/target/fields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh=False,\n    target=\"database.table\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh: false,\n    target: \"database.table\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.TargetRequest{\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: \"database.table\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target/fields",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "target": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/target/fields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh=False,\n    target=\"database.table\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh: false,\n    target: \"database.table\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.TargetRequest{\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: \"database.table\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target/fields",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "target": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/target/fields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh=False,\n    target=\"database.table\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh: false,\n    target: \"database.table\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.TargetRequest{\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: \"database.table\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:id/target/fields",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "target": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/connections/:id/target/fields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"target\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.connections.get_target_fields(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    refresh=False,\n    target=\"database.table\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.connections.getTargetFields(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    refresh: false,\n    target: \"database.table\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Connections.GetTargetFields(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.TargetRequest{\n\t\tRefresh: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: \"database.table\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_schemas.GetRecords": {
        "id": "endpoint_schemas.GetRecords",
        "namespace": [
          "subpackage_schemas"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/connections/"
          },
          {
            "type": "pathParameter",
            "value": "connection_id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "schema_id"
          },
          {
            "type": "literal",
            "value": "/records"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "connection_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "schema_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SchemaRecordsResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/contact/records",
            "responseStatusCode": 200,
            "pathParameters": {
              "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "schema_id": "contact"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "data": {
                      "key": "value"
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/248df4b7-aa70-47b8-a036-33ac447e668d/contact/records \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:connection_id/:schema_id/records",
            "responseStatusCode": 400,
            "pathParameters": {
              "connection_id": ":connection_id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:connection_id/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:connection_id/:schema_id/records",
            "responseStatusCode": 401,
            "pathParameters": {
              "connection_id": ":connection_id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:connection_id/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:connection_id/:schema_id/records",
            "responseStatusCode": 403,
            "pathParameters": {
              "connection_id": ":connection_id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:connection_id/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:connection_id/:schema_id/records",
            "responseStatusCode": 404,
            "pathParameters": {
              "connection_id": ":connection_id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:connection_id/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/connections/:connection_id/:schema_id/records",
            "responseStatusCode": 500,
            "pathParameters": {
              "connection_id": ":connection_id",
              "schema_id": ":schema_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/connections/:connection_id/:schema_id/records \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.schemas.get_records(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    schema_id=\"contact\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.schemas.getRecords(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"contact\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Schemas.GetRecords(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"contact\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Post": {
        "id": "endpoint_models.Post",
        "namespace": [
          "subpackage_models"
        ],
        "description": "For a given connection and enrichment configuration, provides the valid sets of input fields.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/enrichment/"
          },
          {
            "type": "pathParameter",
            "value": "connection_id"
          },
          {
            "type": "literal",
            "value": "/inputfields"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "connection_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:V2EnricherConfiguration"
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:V2GetEnrichmentInputFieldsResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/enrichment/248df4b7-aa70-47b8-a036-33ac447e668d/inputfields",
            "responseStatusCode": 200,
            "pathParameters": {
              "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  [
                    "data"
                  ]
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/248df4b7-aa70-47b8-a036-33ac447e668d/inputfields \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 401,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 403,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 404,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/enrichment/:connection_id/inputfields",
            "responseStatusCode": 500,
            "pathParameters": {
              "connection_id": ":connection_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/enrichment/:connection_id/inputfields \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Preview": {
        "id": "endpoint_models.Preview",
        "namespace": [
          "subpackage_models"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/model-preview"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateModelRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/model-preview",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "Users"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/model-preview \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"Users\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/model-preview",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/model-preview?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.List": {
        "id": "endpoint_models.List",
        "namespace": [
          "subpackage_models"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/models"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelListResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "configuration": {
                      "table": "public.contacts"
                    },
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher": {
                      "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "id",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "identifier": "id",
                    "labels": [
                      {}
                    ],
                    "name": "Contacts",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "relations": [
                      {
                        "from": "id"
                      }
                    ],
                    "tracking_columns": [
                      "tracking_columns"
                    ],
                    "type": "postgresql",
                    "version": 1
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Create": {
        "id": "endpoint_models.Create",
        "namespace": [
          "subpackage_models"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/models"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:CreateModelRequest"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "Users"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/models \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"Users\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.create({\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelRequest{\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.create({\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelRequest{\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.create({\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelRequest{\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.create({\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelRequest{\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/models?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.create(\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.create({\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelRequest{\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Get": {
        "id": "endpoint_models.Get",
        "namespace": [
          "subpackage_models"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Remove": {
        "id": "endpoint_models.Remove",
        "namespace": [
          "subpackage_models"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Models.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Update": {
        "id": "endpoint_models.Update",
        "namespace": [
          "subpackage_models"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "additional_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelModelFieldRequest"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "configuration",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "map",
                        "keyShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "valueShape": {
                          "type": "alias",
                          "value": {
                            "type": "unknown"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "connection_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "enricher",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Enrichment"
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identifier",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "labels",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "relations",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelRelation"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "tracking_columns",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "async": false
            },
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                "name": "Users"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "configuration": {
                    "table": "public.contacts"
                  },
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "enricher": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "enricher_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "fields": [
                      {
                        "description": "Unique identifier",
                        "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                        "label": "ID",
                        "name": "phone_number",
                        "remote_type": "string",
                        "type": "string",
                        "unique": true,
                        "user_added": false
                      }
                    ],
                    "mappings": {
                      "mappings": "mappings"
                    }
                  },
                  "fields": [
                    {
                      "description": "Unique identifier",
                      "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "label": "ID",
                      "name": "id",
                      "remote_type": "string",
                      "type": "string",
                      "unique": true,
                      "user_added": false
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identifier": "id",
                  "labels": [
                    {}
                  ],
                  "name": "Contacts",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "relations": [
                    {
                      "from": "id"
                    }
                  ],
                  "tracking_columns": [
                    "tracking_columns"
                  ],
                  "type": "postgresql",
                  "version": 1
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d?async=false\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n  \"name\": \"Users\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "connection_id": "string",
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH \"https://app.polytomic.com/api/models/:id?async=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"connection_id\": \"string\",\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.models.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    async_=False,\n    connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier=\"id\",\n    name=\"Users\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.models.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    async: false,\n    connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    identifier: \"id\",\n    name: \"Users\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Models.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelRequest{\n\t\tAsync: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\tIdentifier: polytomicgo.String(\n\t\t\t\"id\",\n\t\t),\n\t\tName: \"Users\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_models.Sample": {
        "id": "endpoint_models.Sample",
        "namespace": [
          "subpackage_models"
        ],
        "description": "Returns sample records from the model. The first ten records that the source provides will be returned after being enriched (if applicable). Synchronous requests must complete within 10s. If either querying or enrichment exceeds 10s, please use the async option.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/models/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/sample"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "async",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSampleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/models/248df4b7-aa70-47b8-a036-33ac447e668d/sample",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "records": [
                    {
                      "records": {}
                    }
                  ],
                  "warnings": [
                    "Enrichment failed for 4 records: you have ran out of credits"
                  ]
                },
                "job": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/models/248df4b7-aa70-47b8-a036-33ac447e668d/sample \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/models/:id/sample",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {
              "async": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/models/:id/sample \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d async=true",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.List": {
        "id": "endpoint_events.List",
        "namespace": [
          "subpackage_events"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/events"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "queryParameters": [
          {
            "key": "organization_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "starting_after",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "ending_before",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "limit",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EventsEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/events",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "starting_after": "2020-01-01T00:00:00Z",
              "ending_before": "2020-01-01T00:00:00Z"
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "created_at": "2024-01-01T00:00:00Z",
                    "event": {
                      "key": "value"
                    },
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "type": "sync.running"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=248df4b7-aa70-47b8-a036-33ac447e668d \\\n     --data-urlencode starting_after=2020-01-01T00:00:00Z \\\n     --data-urlencode ending_before=2020-01-01T00:00:00Z",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.events.api_v_2_get_events(\n    organization_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n    ending_before=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.events.apiV2GetEvents({\n    organization_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after: new Date(\"2020-01-01T00:00:00.000Z\"),\n    ending_before: new Date(\"2020-01-01T00:00:00.000Z\")\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.List(\n\tcontext.TODO(),\n\t&polytomicgo.EventsListRequest{\n\t\tOrganizationId: polytomicgo.String(\n\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t),\n\t\tStartingAfter: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t\tEndingBefore: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "string",
              "type": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=string \\\n     -d type=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.events.api_v_2_get_events(\n    organization_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n    ending_before=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.events.apiV2GetEvents({\n    organization_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after: new Date(\"2020-01-01T00:00:00.000Z\"),\n    ending_before: new Date(\"2020-01-01T00:00:00.000Z\")\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.List(\n\tcontext.TODO(),\n\t&polytomicgo.EventsListRequest{\n\t\tOrganizationId: polytomicgo.String(\n\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t),\n\t\tStartingAfter: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t\tEndingBefore: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "string",
              "type": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=string \\\n     -d type=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.events.api_v_2_get_events(\n    organization_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n    ending_before=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.events.apiV2GetEvents({\n    organization_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after: new Date(\"2020-01-01T00:00:00.000Z\"),\n    ending_before: new Date(\"2020-01-01T00:00:00.000Z\")\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.List(\n\tcontext.TODO(),\n\t&polytomicgo.EventsListRequest{\n\t\tOrganizationId: polytomicgo.String(\n\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t),\n\t\tStartingAfter: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t\tEndingBefore: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {
              "organization_id": "string",
              "type": "string"
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -G https://app.polytomic.com/api/events \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -d organization_id=string \\\n     -d type=string",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "import datetime\n\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.events.api_v_2_get_events(\n    organization_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n    ending_before=datetime.datetime.fromisoformat(\n        \"2020-01-01 00:00:00+00:00\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.events.apiV2GetEvents({\n    organization_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    starting_after: new Date(\"2020-01-01T00:00:00.000Z\"),\n    ending_before: new Date(\"2020-01-01T00:00:00.000Z\")\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.List(\n\tcontext.TODO(),\n\t&polytomicgo.EventsListRequest{\n\t\tOrganizationId: polytomicgo.String(\n\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t),\n\t\tStartingAfter: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t\tEndingBefore: polytomicgo.Time(\n\t\t\tpolytomicgo.MustParseDateTime(\n\t\t\t\t\"2020-01-01T00:00:00Z\",\n\t\t\t),\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_events.GetTypes": {
        "id": "endpoint_events.GetTypes",
        "namespace": [
          "subpackage_events"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/events_types"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:EventTypesEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/events_types",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  "data"
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/events_types \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.events.api_v_2_get_event_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.events.apiV2GetEventTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/events_types",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/events_types \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.events.api_v_2_get_event_types()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.events.apiV2GetEventTypes();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Events.GetTypes(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_jobs.Get": {
        "id": "endpoint_jobs.Get",
        "namespace": [
          "subpackage_jobs"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/jobs/"
          },
          {
            "type": "pathParameter",
            "value": "type"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:JobResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/jobs/createmodel/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "type": "createmodel"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "error": "error message",
                  "job_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "result": {
                    "key": "value"
                  },
                  "status": "running",
                  "type": "createmodel"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/createmodel/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/jobs/:type/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/jobs/:type/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.jobs.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    type=\"createmodel\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.jobs.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"createmodel\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Jobs.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"createmodel\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_identity.Get": {
        "id": "endpoint_identity.Get",
        "namespace": [
          "subpackage_identity"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/me"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetIdentityResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/me",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "is_organization": false,
                  "is_partner": false,
                  "is_system": false,
                  "is_user": true,
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_name": "My Organization",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Identity.Get(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/me",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Identity.Get(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/me",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/me \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Identity.Get(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.List": {
        "id": "endpoint_organization.List",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationsEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "id",
                    "issuer": "https://example.com",
                    "name": "My Organization",
                    "sso_domain": "example.com",
                    "sso_org_id": "123456"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Create": {
        "id": "endpoint_organization.Create",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "client_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "client_secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "issuer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "sso_domain",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_org_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Organization"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "issuer": "https://example.com",
                  "name": "My Organization",
                  "sso_domain": "example.com",
                  "sso_org_id": "123456"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Organization\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.create(\n    client_id=\"client_id\",\n    client_secret=\"client_secret\",\n    issuer=\"https://example.com\",\n    name=\"My Organization\",\n    sso_domain=\"example.com\",\n    sso_org_id=\"123456\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.create({\n    client_id: \"client_id\",\n    client_secret: \"client_secret\",\n    issuer: \"https://example.com\",\n    name: \"My Organization\",\n    sso_domain: \"example.com\",\n    sso_org_id: \"123456\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateOrganizationRequestSchema{\n\t\tClientId: polytomicgo.String(\n\t\t\t\"client_id\",\n\t\t),\n\t\tClientSecret: polytomicgo.String(\n\t\t\t\"client_secret\",\n\t\t),\n\t\tIssuer: polytomicgo.String(\n\t\t\t\"https://example.com\",\n\t\t),\n\t\tName: \"My Organization\",\n\t\tSsoDomain: polytomicgo.String(\n\t\t\t\"example.com\",\n\t\t),\n\t\tSsoOrgId: polytomicgo.String(\n\t\t\t\"123456\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.create(\n    client_id=\"client_id\",\n    client_secret=\"client_secret\",\n    issuer=\"https://example.com\",\n    name=\"My Organization\",\n    sso_domain=\"example.com\",\n    sso_org_id=\"123456\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.create({\n    client_id: \"client_id\",\n    client_secret: \"client_secret\",\n    issuer: \"https://example.com\",\n    name: \"My Organization\",\n    sso_domain: \"example.com\",\n    sso_org_id: \"123456\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateOrganizationRequestSchema{\n\t\tClientId: polytomicgo.String(\n\t\t\t\"client_id\",\n\t\t),\n\t\tClientSecret: polytomicgo.String(\n\t\t\t\"client_secret\",\n\t\t),\n\t\tIssuer: polytomicgo.String(\n\t\t\t\"https://example.com\",\n\t\t),\n\t\tName: \"My Organization\",\n\t\tSsoDomain: polytomicgo.String(\n\t\t\t\"example.com\",\n\t\t),\n\t\tSsoOrgId: polytomicgo.String(\n\t\t\t\"123456\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.create(\n    client_id=\"client_id\",\n    client_secret=\"client_secret\",\n    issuer=\"https://example.com\",\n    name=\"My Organization\",\n    sso_domain=\"example.com\",\n    sso_org_id=\"123456\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.create({\n    client_id: \"client_id\",\n    client_secret: \"client_secret\",\n    issuer: \"https://example.com\",\n    name: \"My Organization\",\n    sso_domain: \"example.com\",\n    sso_org_id: \"123456\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateOrganizationRequestSchema{\n\t\tClientId: polytomicgo.String(\n\t\t\t\"client_id\",\n\t\t),\n\t\tClientSecret: polytomicgo.String(\n\t\t\t\"client_secret\",\n\t\t),\n\t\tIssuer: polytomicgo.String(\n\t\t\t\"https://example.com\",\n\t\t),\n\t\tName: \"My Organization\",\n\t\tSsoDomain: polytomicgo.String(\n\t\t\t\"example.com\",\n\t\t),\n\t\tSsoOrgId: polytomicgo.String(\n\t\t\t\"123456\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.create(\n    client_id=\"client_id\",\n    client_secret=\"client_secret\",\n    issuer=\"https://example.com\",\n    name=\"My Organization\",\n    sso_domain=\"example.com\",\n    sso_org_id=\"123456\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.create({\n    client_id: \"client_id\",\n    client_secret: \"client_secret\",\n    issuer: \"https://example.com\",\n    name: \"My Organization\",\n    sso_domain: \"example.com\",\n    sso_org_id: \"123456\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateOrganizationRequestSchema{\n\t\tClientId: polytomicgo.String(\n\t\t\t\"client_id\",\n\t\t),\n\t\tClientSecret: polytomicgo.String(\n\t\t\t\"client_secret\",\n\t\t),\n\t\tIssuer: polytomicgo.String(\n\t\t\t\"https://example.com\",\n\t\t),\n\t\tName: \"My Organization\",\n\t\tSsoDomain: polytomicgo.String(\n\t\t\t\"example.com\",\n\t\t),\n\t\tSsoOrgId: polytomicgo.String(\n\t\t\t\"123456\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Get": {
        "id": "endpoint_organization.Get",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "issuer": "https://example.com",
                  "name": "My Organization",
                  "sso_domain": "example.com",
                  "sso_org_id": "123456"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Remove": {
        "id": "endpoint_organization.Remove",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Organization.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Organization.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Organization.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Organization.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_organization.Update": {
        "id": "endpoint_organization.Update",
        "namespace": [
          "subpackage_organization"
        ],
        "description": "> 🚧 Requires partner key\n>\n> Organization endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "client_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "client_secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "issuer",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "sso_domain",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "sso_org_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:OrganizationEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "My Organization"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "id",
                  "issuer": "https://example.com",
                  "name": "My Organization",
                  "sso_domain": "example.com",
                  "sso_org_id": "123456"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"My Organization\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    client_id=\"client_id\",\n    client_secret=\"client_secret\",\n    issuer=\"https://example.com\",\n    name=\"My Organization\",\n    sso_domain=\"example.com\",\n    sso_org_id=\"123456\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    client_id: \"client_id\",\n    client_secret: \"client_secret\",\n    issuer: \"https://example.com\",\n    name: \"My Organization\",\n    sso_domain: \"example.com\",\n    sso_org_id: \"123456\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateOrganizationRequestSchema{\n\t\tClientId: polytomicgo.String(\n\t\t\t\"client_id\",\n\t\t),\n\t\tClientSecret: polytomicgo.String(\n\t\t\t\"client_secret\",\n\t\t),\n\t\tIssuer: polytomicgo.String(\n\t\t\t\"https://example.com\",\n\t\t),\n\t\tName: \"My Organization\",\n\t\tSsoDomain: polytomicgo.String(\n\t\t\t\"example.com\",\n\t\t),\n\t\tSsoOrgId: polytomicgo.String(\n\t\t\t\"123456\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    client_id=\"client_id\",\n    client_secret=\"client_secret\",\n    issuer=\"https://example.com\",\n    name=\"My Organization\",\n    sso_domain=\"example.com\",\n    sso_org_id=\"123456\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    client_id: \"client_id\",\n    client_secret: \"client_secret\",\n    issuer: \"https://example.com\",\n    name: \"My Organization\",\n    sso_domain: \"example.com\",\n    sso_org_id: \"123456\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateOrganizationRequestSchema{\n\t\tClientId: polytomicgo.String(\n\t\t\t\"client_id\",\n\t\t),\n\t\tClientSecret: polytomicgo.String(\n\t\t\t\"client_secret\",\n\t\t),\n\t\tIssuer: polytomicgo.String(\n\t\t\t\"https://example.com\",\n\t\t),\n\t\tName: \"My Organization\",\n\t\tSsoDomain: polytomicgo.String(\n\t\t\t\"example.com\",\n\t\t),\n\t\tSsoOrgId: polytomicgo.String(\n\t\t\t\"123456\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    client_id=\"client_id\",\n    client_secret=\"client_secret\",\n    issuer=\"https://example.com\",\n    name=\"My Organization\",\n    sso_domain=\"example.com\",\n    sso_org_id=\"123456\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    client_id: \"client_id\",\n    client_secret: \"client_secret\",\n    issuer: \"https://example.com\",\n    name: \"My Organization\",\n    sso_domain: \"example.com\",\n    sso_org_id: \"123456\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateOrganizationRequestSchema{\n\t\tClientId: polytomicgo.String(\n\t\t\t\"client_id\",\n\t\t),\n\t\tClientSecret: polytomicgo.String(\n\t\t\t\"client_secret\",\n\t\t),\n\t\tIssuer: polytomicgo.String(\n\t\t\t\"https://example.com\",\n\t\t),\n\t\tName: \"My Organization\",\n\t\tSsoDomain: polytomicgo.String(\n\t\t\t\"example.com\",\n\t\t),\n\t\tSsoOrgId: polytomicgo.String(\n\t\t\t\"123456\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.organization.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    client_id=\"client_id\",\n    client_secret=\"client_secret\",\n    issuer=\"https://example.com\",\n    name=\"My Organization\",\n    sso_domain=\"example.com\",\n    sso_org_id=\"123456\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.organization.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    client_id: \"client_id\",\n    client_secret: \"client_secret\",\n    issuer: \"https://example.com\",\n    name: \"My Organization\",\n    sso_domain: \"example.com\",\n    sso_org_id: \"123456\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Organization.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateOrganizationRequestSchema{\n\t\tClientId: polytomicgo.String(\n\t\t\t\"client_id\",\n\t\t),\n\t\tClientSecret: polytomicgo.String(\n\t\t\t\"client_secret\",\n\t\t),\n\t\tIssuer: polytomicgo.String(\n\t\t\t\"https://example.com\",\n\t\t),\n\t\tName: \"My Organization\",\n\t\tSsoDomain: polytomicgo.String(\n\t\t\t\"example.com\",\n\t\t),\n\t\tSsoOrgId: polytomicgo.String(\n\t\t\t\"123456\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.List": {
        "id": "endpoint_users.List",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListUsersEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "email": "mail@example.com",
                    "id": "id",
                    "organization_id": "organization_id",
                    "role": "admin"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.list(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.list(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 404,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.list(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Create": {
        "id": "endpoint_users.Create",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "role",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "mail@example.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"mail@example.com\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n    role=\"admin\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.create(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\",\n    role: \"admin\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Create(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.CreateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t\tRole: polytomicgo.String(\n\t\t\t\"admin\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n    role=\"admin\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.create(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\",\n    role: \"admin\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Create(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.CreateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t\tRole: polytomicgo.String(\n\t\t\t\"admin\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 422,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n    role=\"admin\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.create(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\",\n    role: \"admin\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Create(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.CreateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t\tRole: polytomicgo.String(\n\t\t\t\"admin\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users",
            "responseStatusCode": 500,
            "pathParameters": {
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/organizations/:org_id/users \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n    role=\"admin\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.create(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\",\n    role: \"admin\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Create(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.CreateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t\tRole: polytomicgo.String(\n\t\t\t\"admin\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Get": {
        "id": "endpoint_users.Get",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Remove": {
        "id": "endpoint_users.Remove",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.Update": {
        "id": "endpoint_users.Update",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "email",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "role",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:UserEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "email": "mail@example.com"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "email": "mail@example.com",
                  "id": "id",
                  "organization_id": "organization_id",
                  "role": "admin"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"mail@example.com\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n    role=\"admin\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\",\n    role: \"admin\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t\tRole: polytomicgo.String(\n\t\t\t\"admin\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n    role=\"admin\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\",\n    role: \"admin\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t\tRole: polytomicgo.String(\n\t\t\t\"admin\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n    role=\"admin\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\",\n    role: \"admin\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t\tRole: polytomicgo.String(\n\t\t\t\"admin\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id",
              "org_id": ":org_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "email": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/organizations/:org_id/users/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"email\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    email=\"mail@example.com\",\n    role=\"admin\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    email: \"mail@example.com\",\n    role: \"admin\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateUserRequestSchema{\n\t\tEmail: \"mail@example.com\",\n\t\tRole: polytomicgo.String(\n\t\t\t\"admin\",\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_users.CreateApiKey": {
        "id": "endpoint_users.CreateApiKey",
        "namespace": [
          "subpackage_users"
        ],
        "description": "> 🚧 Requires partner key\n>\n> User endpoints are only accessible using [partner keys](https://apidocs.polytomic.com/getting-started/obtaining-api-keys#partner-keys)",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/organizations/"
          },
          {
            "type": "pathParameter",
            "value": "org_id"
          },
          {
            "type": "literal",
            "value": "/users/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/keys"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "org_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "queryParameters": [
          {
            "key": "force",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "optional",
                "shape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:APIKeyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d/keys",
            "responseStatusCode": 200,
            "pathParameters": {
              "org_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "value": "value"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/248df4b7-aa70-47b8-a036-33ac447e668d/users/248df4b7-aa70-47b8-a036-33ac447e668d/keys?force=true\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_api_key(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.createApiKey(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.CreateApiKey(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UsersCreateApiKeyRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id/keys",
            "responseStatusCode": 401,
            "pathParameters": {
              "org_id": ":org_id",
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/:org_id/users/:id/keys?force=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_api_key(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.createApiKey(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.CreateApiKey(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UsersCreateApiKeyRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id/keys",
            "responseStatusCode": 404,
            "pathParameters": {
              "org_id": ":org_id",
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/:org_id/users/:id/keys?force=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_api_key(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.createApiKey(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.CreateApiKey(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UsersCreateApiKeyRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/organizations/:org_id/users/:id/keys",
            "responseStatusCode": 500,
            "pathParameters": {
              "org_id": ":org_id",
              "id": ":id"
            },
            "queryParameters": {
              "force": true
            },
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST \"https://app.polytomic.com/api/organizations/:org_id/users/:id/keys?force=true\" \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.users.create_api_key(\n    org_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    force=True,\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.users.createApiKey(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    force: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Users.CreateApiKey(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UsersCreateApiKeyRequest{\n\t\tForce: polytomicgo.Bool(\n\t\t\ttrue,\n\t\t),\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.List": {
        "id": "endpoint_permissions/policies.List",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListPoliciesResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "name": "Policy",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "policy_actions": [
                      {
                        "action": "read",
                        "role_ids": [
                          "248df4b7-aa70-47b8-a036-33ac447e668d"
                        ]
                      }
                    ],
                    "system": false
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Create": {
        "id": "endpoint_permissions/policies.Create",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policy_actions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:PolicyAction"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PolicyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Policy",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policy_actions": [
                    {
                      "action": "read",
                      "role_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  ],
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/policies \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.create(\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.create({\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Create(\n\tcontext.TODO(),\n\t&permissions.CreatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Get": {
        "id": "endpoint_permissions/policies.Get",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PolicyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Policy",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policy_actions": [
                    {
                      "action": "read",
                      "role_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  ],
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Remove": {
        "id": "endpoint_permissions/policies.Remove",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Policies.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/policies.Update": {
        "id": "endpoint_permissions/policies.Update",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/policies"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/policies/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "policy_actions",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:PolicyAction"
                          }
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:PolicyResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Policy",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "policy_actions": [
                    {
                      "action": "read",
                      "role_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  ],
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/policies/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/policies/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import PolicyAction\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.policies.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n    policy_actions=[\n        PolicyAction(\n            action=\"read\",\n            role_ids=[\"248df4b7-aa70-47b8-a036-33ac447e668d\"],\n        )\n    ],\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.policies.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\",\n    policy_actions: [{\n            action: \"read\",\n            role_ids: [\"248df4b7-aa70-47b8-a036-33ac447e668d\"]\n        }]\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Policies.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdatePolicyRequest{\n\t\tName: \"Custom\",\n\t\tPolicyActions: []*polytomicgo.PolicyAction{\n\t\t\t&polytomicgo.PolicyAction{\n\t\t\t\tAction: \"read\",\n\t\t\t\tRoleIds: []string{\n\t\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.List": {
        "id": "endpoint_permissions/roles.List",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleListResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "name": "Custom",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "system": false
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Create": {
        "id": "endpoint_permissions/roles.Create",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Custom",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/permissions/roles \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.create(\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.create({\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Create(\n\tcontext.TODO(),\n\t&permissions.CreateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Get": {
        "id": "endpoint_permissions/roles.Get",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Custom",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Remove": {
        "id": "endpoint_permissions/roles.Remove",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Permissions.Roles.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_permissions/roles.Update": {
        "id": "endpoint_permissions/roles.Update",
        "namespace": [
          "subpackage_permissions",
          "subpackage_permissions/roles"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/permissions/roles/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:RoleResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "name": "Custom"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "name": "Custom",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "system": false
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"Custom\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/permissions/roles/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "name": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/permissions/roles/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"name\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.permissions.roles.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    name=\"Custom\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.permissions.roles.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    name: \"Custom\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpermissions \"github.com/polytomic/polytomic-go/permissions\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Permissions.Roles.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&permissions.UpdateRoleRequest{\n\t\tName: \"Custom\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.List": {
        "id": "endpoint_modelSync.List",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "active": true,
                    "fields": [
                      {
                        "source": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "target": "name"
                      }
                    ],
                    "filter_logic": "filter_logic",
                    "filters": [
                      {
                        "function": "Equality",
                        "field": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "field_id": "field1",
                        "label": "A"
                      }
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "identity": {
                      "function": "Equality",
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    },
                    "mode": "create",
                    "name": "Users Sync",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "override_fields": [
                      {
                        "source": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "target": "name"
                      }
                    ],
                    "overrides": [
                      {
                        "field": {
                          "field": "id",
                          "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                        },
                        "field_id": "field1"
                      }
                    ],
                    "policies": [
                      "248df4b7-aa70-47b8-a036-33ac447e668d"
                    ],
                    "schedule": {
                      "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "sync_all_records": false,
                    "target": {
                      "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                      "object": "Users",
                      "configuration": {
                        "key": "value"
                      },
                      "search_values": {
                        "name": "value"
                      }
                    }
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 404,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Create": {
        "id": "endpoint_modelSync.Create",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "enricher",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Enrichment"
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filter_logic",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filters",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Filter"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identity",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Identity"
                      }
                    }
                  }
                }
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "override_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Values to set as sync target fields."
              },
              {
                "key": "overrides",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Override"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Conditional value replacement for field mappings."
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Schedule"
                  }
                }
              },
              {
                "key": "sync_all_records",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "target",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Target"
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "create",
                "name": "Users Sync",
                "schedule": {},
                "target": {
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "object": "Users"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "filter_logic": "filter_logic",
                  "filters": [
                    {
                      "function": "Equality",
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1",
                      "label": "A"
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identity": {
                    "function": "Equality",
                    "source": {
                      "field": "id",
                      "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "target": "name",
                    "new_field": true,
                    "remote_field_type_id": "string"
                  },
                  "mode": "create",
                  "name": "Users Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "override_fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "overrides": [
                    {
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1"
                    }
                  ],
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "frequency": "manual",
                    "hour": "12",
                    "job_id": 1,
                    "minute": "30",
                    "month": "1",
                    "run_after": {
                      "bulk_sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ],
                      "sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  },
                  "sync_all_records": false,
                  "target": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "object": "Users",
                    "configuration": {
                      "key": "value"
                    },
                    "filter_logic": "filter_logic",
                    "new_name": "new_name",
                    "search_values": {
                      "name": "value"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"create\",\n  \"name\": \"Users Sync\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    \"object\": \"Users\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.create({\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 400,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.create({\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.create({\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 403,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.create({\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.create({\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.create(\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.create({\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetScheduleOptions": {
        "id": "endpoint_modelSync.GetScheduleOptions",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/schedules"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ScheduleOptionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/schedules",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "schedule_options": [
                    {
                      "description": "Runs when manually triggered",
                      "label": "Manual"
                    }
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/schedules \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_schedule_options()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.getScheduleOptions();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetScheduleOptions(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/schedules",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/schedules \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_schedule_options()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.getScheduleOptions();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetScheduleOptions(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/schedules",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/schedules \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_schedule_options()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.getScheduleOptions();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetScheduleOptions(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Get": {
        "id": "endpoint_modelSync.Get",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "filter_logic": "filter_logic",
                  "filters": [
                    {
                      "function": "Equality",
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1",
                      "label": "A"
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identity": {
                    "function": "Equality",
                    "source": {
                      "field": "id",
                      "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "target": "name",
                    "new_field": true,
                    "remote_field_type_id": "string"
                  },
                  "mode": "create",
                  "name": "Users Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "override_fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "overrides": [
                    {
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1"
                    }
                  ],
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "frequency": "manual",
                    "hour": "12",
                    "job_id": 1,
                    "minute": "30",
                    "month": "1",
                    "run_after": {
                      "bulk_sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ],
                      "sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  },
                  "sync_all_records": false,
                  "target": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "object": "Users",
                    "configuration": {
                      "key": "value"
                    },
                    "filter_logic": "filter_logic",
                    "new_name": "new_name",
                    "search_values": {
                      "name": "value"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Remove": {
        "id": "endpoint_modelSync.Remove",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.remove(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.remove(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Update": {
        "id": "endpoint_modelSync.Update",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "active",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "enricher",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Enrichment"
                      }
                    }
                  }
                }
              },
              {
                "key": "fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filter_logic",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "filters",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Filter"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "identity",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "id",
                        "id": "type_:Identity"
                      }
                    }
                  }
                }
              },
              {
                "key": "mode",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "name",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "override_fields",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:ModelSyncField"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Values to set as sync target fields."
              },
              {
                "key": "overrides",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "id",
                            "id": "type_:Override"
                          }
                        }
                      }
                    }
                  }
                },
                "description": "Conditional value replacement for field mappings."
              },
              {
                "key": "policies",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "schedule",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Schedule"
                  }
                }
              },
              {
                "key": "sync_all_records",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "target",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "id",
                    "id": "type_:Target"
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "create",
                "name": "Users Sync",
                "schedule": {},
                "target": {
                  "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "object": "Users"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "filter_logic": "filter_logic",
                  "filters": [
                    {
                      "function": "Equality",
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1",
                      "label": "A"
                    }
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "identity": {
                    "function": "Equality",
                    "source": {
                      "field": "id",
                      "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                    },
                    "target": "name",
                    "new_field": true,
                    "remote_field_type_id": "string"
                  },
                  "mode": "create",
                  "name": "Users Sync",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "override_fields": [
                    {
                      "source": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "target": "name"
                    }
                  ],
                  "overrides": [
                    {
                      "field": {
                        "field": "id",
                        "model_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                      },
                      "field_id": "field1"
                    }
                  ],
                  "policies": [
                    "248df4b7-aa70-47b8-a036-33ac447e668d"
                  ],
                  "schedule": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "day_of_month": "1",
                    "day_of_week": "monday",
                    "frequency": "manual",
                    "hour": "12",
                    "job_id": 1,
                    "minute": "30",
                    "month": "1",
                    "run_after": {
                      "bulk_sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ],
                      "sync_ids": [
                        "248df4b7-aa70-47b8-a036-33ac447e668d"
                      ]
                    }
                  },
                  "sync_all_records": false,
                  "target": {
                    "connection_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "object": "Users",
                    "configuration": {
                      "key": "value"
                    },
                    "filter_logic": "filter_logic",
                    "new_name": "new_name",
                    "search_values": {
                      "name": "value"
                    }
                  }
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"create\",\n  \"name\": \"Users Sync\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    \"object\": \"Users\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "mode": "string",
                "name": "string",
                "schedule": {},
                "target": {
                  "connection_id": "string",
                  "object": "string"
                }
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/syncs/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"mode\": \"string\",\n  \"name\": \"string\",\n  \"schedule\": {},\n  \"target\": {\n    \"connection_id\": \"string\",\n    \"object\": \"string\"\n  }\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import Identity, ModelSyncField, Schedule, Source, Target\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    fields=[\n        ModelSyncField(\n            source=Source(\n                field=\"id\",\n                model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n            ),\n            target=\"name\",\n        )\n    ],\n    filter_logic=\"A and B or C\",\n    identity=Identity(\n        function=\"Equality\",\n        source=Source(\n            field=\"id\",\n            model_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        ),\n        target=\"name\",\n    ),\n    mode=\"create\",\n    name=\"Users Sync\",\n    schedule=Schedule(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency=\"daily\",\n    ),\n    sync_all_records=False,\n    target=Target(\n        connection_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object=\"Users\",\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    fields: [{\n            source: {\n                field: \"id\",\n                model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n            },\n            target: \"name\"\n        }],\n    filter_logic: \"A and B or C\",\n    identity: {\n        function: \"Equality\",\n        source: {\n            field: \"id\",\n            model_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\"\n        },\n        target: \"name\"\n    },\n    mode: \"create\",\n    name: \"Users Sync\",\n    schedule: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        frequency: \"daily\"\n    },\n    sync_all_records: false,\n    target: {\n        connection_id: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n        object: \"Users\"\n    }\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateModelSyncRequest{\n\t\tFields: []*polytomicgo.ModelSyncField{\n\t\t\t&polytomicgo.ModelSyncField{\n\t\t\t\tSource: &polytomicgo.Source{\n\t\t\t\t\tField:   \"id\",\n\t\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t\t},\n\t\t\t\tTarget: \"name\",\n\t\t\t},\n\t\t},\n\t\tFilterLogic: polytomicgo.String(\n\t\t\t\"A and B or C\",\n\t\t),\n\t\tIdentity: &polytomicgo.Identity{\n\t\t\tFunction: \"Equality\",\n\t\t\tSource: &polytomicgo.Source{\n\t\t\t\tField:   \"id\",\n\t\t\t\tModelId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t},\n\t\t\tTarget: \"name\",\n\t\t},\n\t\tMode: \"create\",\n\t\tName: \"Users Sync\",\n\t\tSchedule: &polytomicgo.Schedule{\n\t\t\tConnectionId: polytomicgo.String(\n\t\t\t\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\t),\n\t\t\tFrequency: polytomicgo.String(\n\t\t\t\t\"daily\",\n\t\t\t),\n\t\t},\n\t\tSyncAllRecords: polytomicgo.Bool(\n\t\t\tfalse,\n\t\t),\n\t\tTarget: &polytomicgo.Target{\n\t\t\tConnectionId: \"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\t\tObject:       \"Users\",\n\t\t},\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Activate": {
        "id": "endpoint_modelSync.Activate",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/activate"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncInput"
            }
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ActivateSyncEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "active": true,
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/activate \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/activate",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "active": true
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/activate \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"active\": true\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic import ActivateSyncInput\nfrom polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.activate(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    request=ActivateSyncInput(\n        active=True,\n    ),\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.activate(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    active: true\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Activate(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.ActivateSyncInput{\n\t\tActive: true,\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.Start": {
        "id": "endpoint_modelSync.Start",
        "namespace": [
          "subpackage_modelSync"
        ],
        "description": "> 🚧 Force full resync\n>\n> Use caution when setting the `resync` parameter to `true`. This will force a full resync of the data from the source system. This can be a time-consuming operation and may impact the performance of the source system. It is recommended to only use this option when necessary.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "identities",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "list",
                        "itemShape": {
                          "type": "alias",
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "resync",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:StartModelSyncResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Forbidden",
            "name": "Forbidden",
            "statusCode": 403,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "status": "created"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 400,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 403,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/executions",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {}
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/syncs/:id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.start(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.start(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Start(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.StartModelSyncRequest{},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync.GetStatus": {
        "id": "endpoint_modelSync.GetStatus",
        "namespace": [
          "subpackage_modelSync"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/status"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:SyncStatusEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "current_execution": {
                    "completed_at": "2024-01-01T00:00:00Z",
                    "counts": {
                      "error": 5,
                      "insert": 80,
                      "total": 100,
                      "update": 15
                    },
                    "created_at": "2024-01-01T00:00:00Z",
                    "errors": [
                      "something went wrong"
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "started_at": "2024-01-01T00:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "last_execution": {
                    "completed_at": "2024-01-01T00:00:00Z",
                    "counts": {
                      "error": 5,
                      "insert": 80,
                      "total": 100,
                      "update": 15
                    },
                    "created_at": "2024-01-01T00:00:00Z",
                    "errors": [
                      "something went wrong"
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "started_at": "2024-01-01T00:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  },
                  "next_execution_time": "2024-01-01T00:00:00Z"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/status \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/status",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/status",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:id/status",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:id/status \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.get_status(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.getStatus(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.GetStatus(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.List": {
        "id": "endpoint_modelSync/executions.List",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ListExecutionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "completed_at": "2024-01-01T00:00:00Z",
                    "counts": {
                      "error": 5,
                      "insert": 80,
                      "total": 100,
                      "update": 15
                    },
                    "created_at": "2024-01-01T00:00:00Z",
                    "errors": [
                      "something went wrong"
                    ],
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "started_at": "2024-01-01T00:00:00Z",
                    "status": "created",
                    "type": "scheduled"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.list(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.list(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.list(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.executions.list(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.List(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.Get": {
        "id": "endpoint_modelSync/executions.Get",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:GetExecutionResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "completed_at": "2024-01-01T00:00:00Z",
                  "counts": {
                    "error": 5,
                    "insert": 80,
                    "total": 100,
                    "update": 15
                  },
                  "created_at": "2024-01-01T00:00:00Z",
                  "errors": [
                    "something went wrong"
                  ],
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "started_at": "2024-01-01T00:00:00Z",
                  "status": "created",
                  "type": "scheduled"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.model_sync.executions.get(\n    sync_id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.modelSync.executions.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\", \"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.GetLogUrls": {
        "id": "endpoint_modelSync/executions.GetLogUrls",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "type"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:ExecutionLogsResponseEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records",
            "responseStatusCode": 200,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "type": "records"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "expires": "2024-01-01T00:00:00Z",
                  "urls": [
                    "urls"
                  ]
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 400,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type",
            "responseStatusCode": 500,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.ModelSync.Executions.GetLogUrls(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_modelSync/executions.GetLogs": {
        "id": "endpoint_modelSync/executions.GetLogs",
        "namespace": [
          "subpackage_modelSync",
          "subpackage_modelSync/executions"
        ],
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/syncs/"
          },
          {
            "type": "pathParameter",
            "value": "sync_id"
          },
          {
            "type": "literal",
            "value": "/executions/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "type"
          },
          {
            "type": "literal",
            "value": "/"
          },
          {
            "type": "pathParameter",
            "value": "filename"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "sync_id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "filename",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Bad Request",
            "name": "Bad Request",
            "statusCode": 400,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records/path/to/file.json",
            "responseStatusCode": 204,
            "pathParameters": {
              "sync_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
              "type": "records",
              "filename": "path/to/file.json"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/248df4b7-aa70-47b8-a036-33ac447e668d/executions/248df4b7-aa70-47b8-a036-33ac447e668d/records/path/to/file.json \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 400,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 401,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 404,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/syncs/:sync_id/executions/:id/:type/:filename",
            "responseStatusCode": 500,
            "pathParameters": {
              "sync_id": ":sync_id",
              "id": ":id",
              "type": ":type",
              "filename": ":filename"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/syncs/:sync_id/executions/:id/:type/:filename \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.ModelSync.Executions.GetLogs(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t\"records\",\n\t\"path/to/file.json\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.List": {
        "id": "endpoint_webhooks.List",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookListEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": [
                  {
                    "created_at": "2024-01-01T00:00:00Z",
                    "endpoint": "https://example.com/webhook",
                    "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                    "secret": "secret"
                  }
                ]
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.list()\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.list();\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.List(\n\tcontext.TODO(),\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Create": {
        "id": "endpoint_webhooks.Create",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "POST",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "endpoint",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks",
            "responseStatusCode": 200,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "https://example.com/webhook",
                "secret": "secret"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "endpoint": "https://example.com/webhook",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "secret": "secret"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"https://example.com/webhook\",\n  \"secret\": \"secret\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.create(\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.create({\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 401,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.create(\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.create({\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 422,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.create(\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.create({\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks",
            "responseStatusCode": 500,
            "pathParameters": {},
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X POST https://app.polytomic.com/api/webhooks \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.create(\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.create({\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Create(\n\tcontext.TODO(),\n\t&polytomicgo.CreateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Get": {
        "id": "endpoint_webhooks.Get",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "GET",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "endpoint": "https://example.com/webhook",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "secret": "secret"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.get(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.get(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Get(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Remove": {
        "id": "endpoint_webhooks.Remove",
        "namespace": [
          "subpackage_webhooks"
        ],
        "method": "DELETE",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Not Found",
            "name": "Not Found",
            "statusCode": 404,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 204,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Webhooks.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Webhooks.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 404,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Webhooks.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X DELETE https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\"",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.delete(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.delete(\"248df4b7-aa70-47b8-a036-33ac447e668d\");\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nerr := client.Webhooks.Remove(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      },
      "endpoint_webhooks.Update": {
        "id": "endpoint_webhooks.Update",
        "namespace": [
          "subpackage_webhooks"
        ],
        "description": "Webooks can be set up using the webhook API endpoints. Currently, only one\nwebhook may be created per organization. The webhook will be called for events\nin that organization.\n\nConsult the [Events documentation](https://apidocs.polytomic.com/getting-started/events) for more information.",
        "method": "PATCH",
        "path": [
          {
            "type": "literal",
            "value": "/api/webhooks/"
          },
          {
            "type": "pathParameter",
            "value": "id"
          }
        ],
        "auth": [
          "default"
        ],
        "defaultEnvironment": "Default",
        "environments": [
          {
            "id": "Default",
            "baseUrl": "https://app.polytomic.com"
          }
        ],
        "pathParameters": [
          {
            "key": "id",
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "request": {
          "contentType": "application/json",
          "body": {
            "type": "object",
            "extends": [],
            "properties": [
              {
                "key": "endpoint",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "key": "organization_id",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "optional",
                    "shape": {
                      "type": "alias",
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "key": "secret",
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    }
                  }
                }
              }
            ]
          }
        },
        "response": {
          "statusCode": 200,
          "body": {
            "type": "alias",
            "value": {
              "type": "id",
              "id": "type_:WebhookEnvelope"
            }
          }
        },
        "errors": [
          {
            "description": "Unauthorized",
            "name": "Unauthorized",
            "statusCode": 401,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:RestErrResponse"
              }
            },
            "examples": []
          },
          {
            "description": "Unprocessable Entity",
            "name": "Unprocessable Entity",
            "statusCode": 422,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          },
          {
            "description": "Internal Server Error",
            "name": "Internal Server Error",
            "statusCode": 500,
            "shape": {
              "type": "alias",
              "value": {
                "type": "id",
                "id": "type_:ApiError"
              }
            },
            "examples": []
          }
        ],
        "examples": [
          {
            "path": "/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d",
            "responseStatusCode": 200,
            "pathParameters": {
              "id": "248df4b7-aa70-47b8-a036-33ac447e668d"
            },
            "queryParameters": {},
            "headers": {},
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "https://example.com/webhook",
                "secret": "secret"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "data": {
                  "created_at": "2024-01-01T00:00:00Z",
                  "endpoint": "https://example.com/webhook",
                  "id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "organization_id": "248df4b7-aa70-47b8-a036-33ac447e668d",
                  "secret": "secret"
                }
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/webhooks/248df4b7-aa70-47b8-a036-33ac447e668d \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"https://example.com/webhook\",\n  \"secret\": \"secret\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 401,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "code": 0,
                "context": {
                  "string": {}
                },
                "error": "string",
                "status": "string"
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 422,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          },
          {
            "path": "/api/webhooks/:id",
            "responseStatusCode": 500,
            "pathParameters": {
              "id": ":id"
            },
            "queryParameters": {},
            "headers": {
              "X-Polytomic-Version": "2023-04-25"
            },
            "requestBody": {
              "type": "json",
              "value": {
                "endpoint": "string",
                "secret": "string"
              }
            },
            "responseBody": {
              "type": "json",
              "value": {
                "message": "string",
                "metadata": {},
                "status": 0
              }
            },
            "snippets": {
              "curl": [
                {
                  "language": "curl",
                  "code": "curl -X PATCH https://app.polytomic.com/api/webhooks/:id \\\n     -H \"X-Polytomic-Version: 2023-04-25\" \\\n     -H \"Authorization: Bearer <token>\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n  \"endpoint\": \"string\",\n  \"secret\": \"string\"\n}'",
                  "generated": true
                }
              ],
              "python": [
                {
                  "language": "python",
                  "code": "from polytomic.client import Polytomic\n\nclient = Polytomic(\n    x_polytomic_version=\"YOUR_X_POLYTOMIC_VERSION\",\n    token=\"YOUR_TOKEN\",\n)\nclient.webhooks.update(\n    id=\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n    endpoint=\"https://example.com/webhook\",\n    secret=\"secret\",\n)\n",
                  "generated": true
                }
              ],
              "typescript": [
                {
                  "name": "TypeScript SDK",
                  "language": "typescript",
                  "code": "import { PolytomicClient } from \"polytomic\";\n\nconst polytomic = new PolytomicClient({ token: \"YOUR_TOKEN\", xPolytomicVersion: \"YOUR_X_POLYTOMIC_VERSION\" });\nawait polytomic.webhooks.update(\"248df4b7-aa70-47b8-a036-33ac447e668d\", {\n    endpoint: \"https://example.com/webhook\",\n    secret: \"secret\"\n});\n",
                  "generated": true
                }
              ],
              "go": [
                {
                  "language": "go",
                  "code": "import (\n\tcontext \"context\"\n\toption \"github.com/polytomic/polytomic-go/option\"\n\tpolytomicgo \"github.com/polytomic/polytomic-go\"\n\tpolytomicgoclient \"github.com/polytomic/polytomic-go/client\"\n)\n\nclient := polytomicgoclient.NewClient(\n\toption.WithToken(\n\t\t\"<YOUR_AUTH_TOKEN>\",\n\t),\n)\nresponse, err := client.Webhooks.Update(\n\tcontext.TODO(),\n\t\"248df4b7-aa70-47b8-a036-33ac447e668d\",\n\t&polytomicgo.UpdateWebhooksSchema{\n\t\tEndpoint: \"https://example.com/webhook\",\n\t\tSecret:   \"secret\",\n\t},\n)\n",
                  "generated": true
                }
              ]
            }
          }
        ]
      }
    },
    "websockets": {},
    "webhooks": {},
    "types": {
      "type_:ApiError": {
        "name": "ApiError",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "metadata",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkDiscover": {
        "name": "BulkDiscover",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "all"
            },
            {
              "value": "onlyIncremental"
            },
            {
              "value": "onlyNonIncremental"
            },
            {
              "value": "none"
            }
          ]
        }
      },
      "type_:BulkExecutionStatus": {
        "name": "BulkExecutionStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "scheduled"
            },
            {
              "value": "running"
            },
            {
              "value": "exporting"
            },
            {
              "value": "canceling"
            },
            {
              "value": "canceled"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            },
            {
              "value": "processing"
            },
            {
              "value": "errors"
            }
          ]
        }
      },
      "type_:BulkItemizedSchedule": {
        "name": "BulkItemizedSchedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "item",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BulkSelectiveMode"
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:BulkSchedule"
                }
              }
            }
          ]
        }
      },
      "type_:BulkMultiScheduleConfiguration": {
        "name": "BulkMultiScheduleConfiguration",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "schedules",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkItemizedSchedule"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchedule": {
        "name": "BulkSchedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "day_of_month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "day_of_week",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:ScheduleFrequency"
                }
              }
            },
            {
              "key": "hour",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "minute",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "multi",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkMultiScheduleConfiguration"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchemaExecutionStatus": {
        "name": "BulkSchemaExecutionStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "scheduled"
            },
            {
              "value": "running"
            },
            {
              "value": "exporting"
            },
            {
              "value": "canceled"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            }
          ]
        }
      },
      "type_:BulkSelectiveMode": {
        "name": "BulkSelectiveMode",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "none"
            },
            {
              "value": "incrementalFields"
            },
            {
              "value": "nonincrementalFields"
            }
          ]
        }
      },
      "type_:FilterFieldReferenceType": {
        "name": "FilterFieldReferenceType",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Model"
            },
            {
              "value": "Target"
            }
          ]
        }
      },
      "type_:FilterFunction": {
        "name": "FilterFunction",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Equality"
            },
            {
              "value": "Inequality"
            },
            {
              "value": "IsNull"
            },
            {
              "value": "IsNotNull"
            },
            {
              "value": "True"
            },
            {
              "value": "False"
            },
            {
              "value": "OnOrAfter"
            },
            {
              "value": "OnOrBefore"
            },
            {
              "value": "GreaterThan"
            },
            {
              "value": "GreaterThanEqual"
            },
            {
              "value": "LessThan"
            },
            {
              "value": "LessThanEqual"
            },
            {
              "value": "StringContains"
            },
            {
              "value": "StringEndsWith"
            },
            {
              "value": "StringDoesNotContain"
            },
            {
              "value": "StringDoesNotEndWith"
            },
            {
              "value": "StringOneOf"
            },
            {
              "value": "StringNotOneOf"
            },
            {
              "value": "Between"
            },
            {
              "value": "ArrayContains"
            },
            {
              "value": "ArrayDoesNotContain"
            },
            {
              "value": "InTheLast"
            },
            {
              "value": "StringLike"
            },
            {
              "value": "StringNotLike"
            },
            {
              "value": "StringMatchesTrimmed"
            }
          ]
        }
      },
      "type_:JsonschemaForm": {
        "name": "JsonschemaForm",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:LabelLabel": {
        "name": "LabelLabel",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:ModelModelFieldRequest": {
        "name": "ModelModelFieldRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "example",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelRelation": {
        "name": "ModelRelation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "from",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "to",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelRelationTo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelRelationTo": {
        "name": "ModelRelationTo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "model_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RestErrResponse": {
        "name": "RestErrResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "Application-specific error code."
            },
            {
              "key": "context",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              },
              "description": "Application context."
            },
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Error message."
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Status text."
            }
          ]
        }
      },
      "type_:ScheduleFrequency": {
        "name": "ScheduleFrequency",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "manual"
            },
            {
              "value": "continuous"
            },
            {
              "value": "hourly"
            },
            {
              "value": "daily"
            },
            {
              "value": "weekly"
            },
            {
              "value": "custom"
            },
            {
              "value": "builder"
            },
            {
              "value": "runafter"
            },
            {
              "value": "multi"
            },
            {
              "value": "dbtcloud"
            }
          ]
        }
      },
      "type_:ScheduleScheduleOption": {
        "name": "ScheduleScheduleOption",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JsonschemaForm"
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ScheduleFrequency"
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SchemaAssociation": {
        "name": "SchemaAssociation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "reference_to",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "referenced_field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SchemaIdentityFunction": {
        "name": "SchemaIdentityFunction",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "Equality"
            },
            {
              "value": "ISubstring"
            },
            {
              "value": "OneOf"
            }
          ]
        }
      },
      "type_:SyncDestinationProperties": {
        "name": "SyncDestinationProperties",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "does_not_report_operation_counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "new_target_label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "optional_target_mappings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "primary_metadata_object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_creation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_type_selection",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_target_filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "target_creator",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "use_field_names_as_labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionStatus": {
        "name": "ExecutionStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "created"
            },
            {
              "value": "scheduled"
            },
            {
              "value": "queued"
            },
            {
              "value": "waiting"
            },
            {
              "value": "running"
            },
            {
              "value": "processing"
            },
            {
              "value": "canceling"
            },
            {
              "value": "canceled"
            },
            {
              "value": "completed"
            },
            {
              "value": "failed"
            },
            {
              "value": "interrupted"
            }
          ]
        }
      },
      "type_:APIKeyResponse": {
        "name": "APIKeyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:APIKeyResponseEnvelope": {
        "name": "APIKeyResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:APIKeyResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivateSyncEnvelope": {
        "name": "ActivateSyncEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ActivateSyncOutput"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivateSyncInput": {
        "name": "ActivateSyncInput",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ActivateSyncOutput": {
        "name": "ActivateSyncOutput",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncDest": {
        "name": "BulkSyncDest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "modes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:SupportedMode"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncDestEnvelope": {
        "name": "BulkSyncDestEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncDest"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncListEnvelope": {
        "name": "BulkSyncListEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSyncResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncResponse": {
        "name": "BulkSyncResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "destination_configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "destination_connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "discover",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSchedule"
                    }
                  }
                }
              }
            },
            {
              "key": "source_configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source_connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncResponseEnvelope": {
        "name": "BulkSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConfigurationValue": {
        "name": "ConfigurationValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionListResponseEnvelope": {
        "name": "ConnectionListResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConnectionResponseSchema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionMeta": {
        "name": "ConnectionMeta",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "has_items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_one_of",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionMetaResponse": {
        "name": "ConnectionMetaResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConfigurationValue"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "items",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:ConnectionMeta"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_one_of",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionParameterValue": {
        "name": "ConnectionParameterValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionParameterValuesResp": {
        "name": "ConnectionParameterValuesResp",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "allows_creation",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConnectionParameterValue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionParameterValuesResponseEnvelope": {
        "name": "ConnectionParameterValuesResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "optional",
                          "shape": {
                            "type": "alias",
                            "value": {
                              "type": "id",
                              "id": "type_:ConnectionParameterValuesResp"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionResponseEnvelope": {
        "name": "ConnectionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionResponseSchema": {
        "name": "ConnectionResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "api_calls_last_24_hours",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "description": "API calls made to service in the last 24h (supported integrations only)."
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status_error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionTypeSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionType": {
        "name": "ConnectionType",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "envConfig",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "use_oauth",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionTypeResponseEnvelope": {
        "name": "ConnectionTypeResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ConnectionType"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectionTypeSchema": {
        "name": "ConnectionTypeSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "operations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CreateConnectionResponseEnvelope": {
        "name": "CreateConnectionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:CreateConnectionResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CreateConnectionResponseSchema": {
        "name": "CreateConnectionResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "auth_code",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Code to enter in order to complete connection authentication."
            },
            {
              "key": "auth_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "URL to visit to complete connection authentication."
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status_error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionTypeSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:CreateModelRequest": {
        "name": "CreateModelRequest",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "additional_fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelModelFieldRequest"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "enricher",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Enrichment"
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identifier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "relations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelRelation"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "tracking_columns",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:V2EnricherConfiguration": {
        "name": "V2EnricherConfiguration",
        "description": "Similar to a model configuration, this configures the enricher. For example, if you wanted to use Apollo to enrich people, you would send `{\"object\": \"people\"}` as the configuration. Each enricher configuration can be found in the connection configuration docs.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "unknown"
              }
            }
          }
        }
      },
      "type_:V2EnricherMapping": {
        "name": "V2EnricherMapping",
        "description": "A map of parent model Source Name to child model Source Name. For example, if your model has a field called `work_email` and the enricher accepts a field called `email`, you'd send a map of `{\"work_email\":\"email\"}`. The set of required input mappings varies based on the configuration of the enrichment. You can use the `enrichment/{connection_id}/inputfields` API to discover available input field combinations for a given configuration.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "type_:Enrichment": {
        "name": "Enrichment",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:V2EnricherConfiguration"
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "enricher_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Must be provided to update an existing enrichment"
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelField"
                        }
                      }
                    }
                  }
                }
              },
              "description": "If not provided, all fields will be enabled."
            },
            {
              "key": "mappings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:V2EnricherMapping"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Event": {
        "name": "Event",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "event",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:EventTypesEnvelope": {
        "name": "EventTypesEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:EventsEnvelope": {
        "name": "EventsEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Event"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionCounts": {
        "name": "ExecutionCounts",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "insert",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "total",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "update",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionLogResponse": {
        "name": "ExecutionLogResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "expires",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "urls",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ExecutionLogsResponseEnvelope": {
        "name": "ExecutionLogsResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionLogResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Filter": {
        "name": "Filter",
        "description": "Either `field` or `field_id` must be provided. If `field` is provided, `field_id` is ignored.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Source"
                    }
                  }
                }
              }
            },
            {
              "key": "field_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Model or Target field name to filter on."
            },
            {
              "key": "field_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FilterFieldReferenceType"
                    }
                  }
                }
              }
            },
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:FilterFunction"
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetConnectionMetaEnvelope": {
        "name": "GetConnectionMetaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectionMetaResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:V2GetEnrichmentInputFieldsResponseEnvelope": {
        "name": "V2GetEnrichmentInputFieldsResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "list",
                          "itemShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetExecutionResponseEnvelope": {
        "name": "GetExecutionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetExecutionResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetExecutionResponseSchema": {
        "name": "GetExecutionResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "completed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "counts",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionCounts"
                    }
                  }
                }
              }
            },
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "errors",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "started_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetIdentityResponseEnvelope": {
        "name": "GetIdentityResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetIdentityResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:GetIdentityResponseSchema": {
        "name": "GetIdentityResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_organization",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_partner",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_system",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_user",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Identity": {
        "name": "Identity",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:SchemaIdentityFunction"
                }
              }
            },
            {
              "key": "new_field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "remote_field_type_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Source"
                }
              }
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:IdentityFunction": {
        "name": "IdentityFunction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:JobResponse": {
        "name": "JobResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "error",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "job_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "result",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:WorkTaskStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:JobResponseEnvelope": {
        "name": "JobResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JobResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListExecutionResponseEnvelope": {
        "name": "ListExecutionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:GetExecutionResponseSchema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListPoliciesResponseEnvelope": {
        "name": "ListPoliciesResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PolicyResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListModelSyncResponseEnvelope": {
        "name": "ListModelSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelSyncResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListUsersEnvelope": {
        "name": "ListUsersEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:User"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Mode": {
        "name": "Mode",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_sync_mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_target_filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelField": {
        "name": "ModelField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "example",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "remote_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "unique",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "user_added",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelFieldResponse": {
        "name": "ModelFieldResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelField"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelListResponseEnvelope": {
        "name": "ModelListResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelResponse": {
        "name": "ModelResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "enricher",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Enrichment"
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identifier",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "labels",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:LabelLabel"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "relations",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Relation"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "tracking_columns",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "version",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelResponseEnvelope": {
        "name": "ModelResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelResponse"
                    }
                  }
                }
              }
            },
            {
              "key": "job",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JobResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSample": {
        "name": "ModelSample",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "records",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:V2SampleRecord"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "warnings",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSampleResponseEnvelope": {
        "name": "ModelSampleResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelSample"
                    }
                  }
                }
              }
            },
            {
              "key": "job",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:JobResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Organization": {
        "name": "Organization",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "issuer",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sso_domain",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sso_org_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:OrganizationEnvelope": {
        "name": "OrganizationEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Organization"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:OrganizationsEnvelope": {
        "name": "OrganizationsEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Organization"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Override": {
        "name": "Override",
        "description": "Either `field` or `field_id` must be provided. If `field_id` is provided, `field` is ignored.",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Source"
                    }
                  }
                }
              }
            },
            {
              "key": "field_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": "Field ID of the model field to override."
            },
            {
              "key": "function",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:FilterFunction"
                    }
                  }
                }
              }
            },
            {
              "key": "override",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PolicyAction": {
        "name": "PolicyAction",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "action",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "role_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PolicyResponse": {
        "name": "PolicyResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policy_actions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PolicyAction"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "system",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PolicyResponseEnvelope": {
        "name": "PolicyResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:PolicyResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Relation": {
        "name": "Relation",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "from",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "to",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RelationTo"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RelationTo": {
        "name": "RelationTo",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "model_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RoleListResponseEnvelope": {
        "name": "RoleListResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:RoleResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RoleResponse": {
        "name": "RoleResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "system",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RoleResponseEnvelope": {
        "name": "RoleResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RoleResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:RunAfter": {
        "name": "RunAfter",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "bulk_sync_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "sync_ids",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:V2SampleRecord": {
        "name": "V2SampleRecord",
        "description": "A map of `fieldSource` -> `fieldName: fieldValue`. Because there may be field name conflicts between the base model and enrichments, the base model fields are placed in a map under the model ID. Fields from enrichments are placed under the enricher ID.",
        "shape": {
          "type": "alias",
          "value": {
            "type": "map",
            "keyShape": {
              "type": "alias",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "valueShape": {
              "type": "alias",
              "value": {
                "type": "map",
                "keyShape": {
                  "type": "alias",
                  "value": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "valueShape": {
                  "type": "alias",
                  "value": {
                    "type": "unknown"
                  }
                }
              }
            }
          }
        }
      },
      "type_:Schedule": {
        "name": "Schedule",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "day_of_month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "day_of_week",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "frequency",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ScheduleFrequency"
                    }
                  }
                }
              }
            },
            {
              "key": "hour",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "job_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "minute",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "month",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "run_after",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:RunAfter"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ScheduleOptionResponse": {
        "name": "ScheduleOptionResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "schedule_options",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ScheduleScheduleOption"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ScheduleOptionResponseEnvelope": {
        "name": "ScheduleOptionResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ScheduleOptionResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Source": {
        "name": "Source",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "field",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "model_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StartModelSyncResponseEnvelope": {
        "name": "StartModelSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:StartModelSyncResponseSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:StartModelSyncResponseSchema": {
        "name": "StartModelSyncResponseSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ExecutionStatus"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SupportedMode": {
        "name": "SupportedMode",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "description": ""
            },
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "requires_identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_field_sync_mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_target_filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncField": {
        "name": "ModelSyncField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "new",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "override_value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "id": "type_:Source"
                }
              }
            },
            {
              "key": "sync_mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncResponse": {
        "name": "ModelSyncResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "active",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelSyncField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filter_logic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filters",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Filter"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Identity"
                    }
                  }
                }
              }
            },
            {
              "key": "mode",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "override_fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:ModelSyncField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "overrides",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Override"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "policies",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schedule",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Schedule"
                    }
                  }
                }
              }
            },
            {
              "key": "sync_all_records",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "target",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Target"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ModelSyncResponseEnvelope": {
        "name": "ModelSyncResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ModelSyncResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SyncStatusEnvelope": {
        "name": "SyncStatusEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SyncStatusResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SyncStatusResponse": {
        "name": "SyncStatusResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "current_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetExecutionResponseSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "last_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:GetExecutionResponseSchema"
                    }
                  }
                }
              }
            },
            {
              "key": "next_execution_time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Target": {
        "name": "Target",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "connection_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "filter_logic",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "new_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "object",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "search_values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "map",
                      "keyShape": {
                        "type": "alias",
                        "value": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "valueShape": {
                        "type": "alias",
                        "value": {
                          "type": "unknown"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TargetField": {
        "name": "TargetField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "association",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "createable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "description",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "filterable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "identity_functions",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:IdentityFunction"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "required",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "source_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "supports_identity",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "updateable",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TargetResponse": {
        "name": "TargetResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:TargetField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "modes",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Mode"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "properties",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SyncDestinationProperties"
                    }
                  }
                }
              }
            },
            {
              "key": "refreshed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:TargetResponseEnvelope": {
        "name": "TargetResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:TargetResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:User": {
        "name": "User",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "email",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "role",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:UserEnvelope": {
        "name": "UserEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:User"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Webhook": {
        "name": "Webhook",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "endpoint",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "organization_id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "secret",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WebhookEnvelope": {
        "name": "WebhookEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Webhook"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WebhookListEnvelope": {
        "name": "WebhookListEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Webhook"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkField": {
        "name": "BulkField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "obfuscated",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchema": {
        "name": "BulkSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "enabled",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "output_name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "partition_key",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSchemaEnvelope": {
        "name": "BulkSchemaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSchema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncExecution": {
        "name": "BulkSyncExecution",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "completed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "created_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_resync",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "is_test",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schemas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSyncSchemaExecution"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "started_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkExecutionStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncExecutionEnvelope": {
        "name": "BulkSyncExecutionEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncExecution"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSchemaExecution": {
        "name": "BulkSyncSchemaExecution",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "completed_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "error_count",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "record_count",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "schema",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "started_at",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSchemaExecutionStatus"
                    }
                  }
                }
              }
            },
            {
              "key": "status_message",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSource": {
        "name": "BulkSyncSource",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "configuration",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "unknown"
                    }
                  }
                }
              }
            },
            {
              "key": "schemas",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:Schema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSourceEnvelope": {
        "name": "BulkSyncSourceEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncSource"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSourceSchemaEnvelope": {
        "name": "BulkSyncSourceSchemaEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:Schema"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSourceStatus": {
        "name": "BulkSyncSourceStatus",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "cache_status",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last_refresh_finished",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "last_refresh_started",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncSourceStatusEnvelope": {
        "name": "BulkSyncSourceStatusEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncSourceStatus"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncStatusEnvelope": {
        "name": "BulkSyncStatusEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncStatusResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:BulkSyncStatusResponse": {
        "name": "BulkSyncStatusResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "current_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncExecution"
                    }
                  }
                }
              }
            },
            {
              "key": "last_execution",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:BulkSyncExecution"
                    }
                  }
                }
              }
            },
            {
              "key": "next_execution_time",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "datetime"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectCardResponse": {
        "name": "ConnectCardResponse",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "redirect_url",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "token",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ConnectCardResponseEnvelope": {
        "name": "ConnectCardResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:ConnectCardResponse"
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListBulkSchema": {
        "name": "ListBulkSchema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSchema"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:ListBulkSyncExecutionsEnvelope": {
        "name": "ListBulkSyncExecutionsEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:BulkSyncExecution"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:PickValue": {
        "name": "PickValue",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "label",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "value",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:Schema": {
        "name": "Schema",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "fields",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:SchemaField"
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SchemaField": {
        "name": "SchemaField",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "association",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "id",
                      "id": "type_:SchemaAssociation"
                    }
                  }
                }
              }
            },
            {
              "key": "id",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "name",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "remote_type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "type",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            {
              "key": "values",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "id",
                          "id": "type_:PickValue"
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:SchemaRecordsResponseEnvelope": {
        "name": "SchemaRecordsResponseEnvelope",
        "shape": {
          "type": "object",
          "extends": [],
          "properties": [
            {
              "key": "data",
              "valueShape": {
                "type": "alias",
                "value": {
                  "type": "optional",
                  "shape": {
                    "type": "alias",
                    "value": {
                      "type": "list",
                      "itemShape": {
                        "type": "alias",
                        "value": {
                          "type": "map",
                          "keyShape": {
                            "type": "alias",
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string"
                              }
                            }
                          },
                          "valueShape": {
                            "type": "alias",
                            "value": {
                              "type": "unknown"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "type_:WorkTaskStatus": {
        "name": "WorkTaskStatus",
        "shape": {
          "type": "enum",
          "values": [
            {
              "value": "running"
            },
            {
              "value": "done"
            },
            {
              "value": "failed"
            }
          ]
        }
      }
    },
    "subpackages": {
      "subpackage_bulkSync": {
        "id": "subpackage_bulkSync",
        "name": "bulkSync"
      },
      "subpackage_bulkSync/executions": {
        "id": "subpackage_bulkSync/executions",
        "name": "executions"
      },
      "subpackage_bulkSync/schemas": {
        "id": "subpackage_bulkSync/schemas",
        "name": "schemas"
      },
      "subpackage_connections": {
        "id": "subpackage_connections",
        "name": "connections"
      },
      "subpackage_schemas": {
        "id": "subpackage_schemas",
        "name": "schemas"
      },
      "subpackage_models": {
        "id": "subpackage_models",
        "name": "models"
      },
      "subpackage_events": {
        "id": "subpackage_events",
        "name": "events"
      },
      "subpackage_jobs": {
        "id": "subpackage_jobs",
        "name": "jobs"
      },
      "subpackage_identity": {
        "id": "subpackage_identity",
        "name": "identity"
      },
      "subpackage_organization": {
        "id": "subpackage_organization",
        "name": "organization"
      },
      "subpackage_users": {
        "id": "subpackage_users",
        "name": "users"
      },
      "subpackage_permissions": {
        "id": "subpackage_permissions",
        "name": "permissions"
      },
      "subpackage_permissions/policies": {
        "id": "subpackage_permissions/policies",
        "name": "policies"
      },
      "subpackage_permissions/roles": {
        "id": "subpackage_permissions/roles",
        "name": "roles"
      },
      "subpackage_modelSync": {
        "id": "subpackage_modelSync",
        "name": "modelSync"
      },
      "subpackage_modelSync/executions": {
        "id": "subpackage_modelSync/executions",
        "name": "executions"
      },
      "subpackage_webhooks": {
        "id": "subpackage_webhooks",
        "name": "webhooks"
      }
    },
    "auths": {
      "default": {
        "type": "bearerAuth",
        "tokenName": "token"
      }
    },
    "globalHeaders": [
      {
        "key": "X-Polytomic-Version",
        "valueShape": {
          "type": "alias",
          "value": {
            "type": "literal",
            "value": {
              "type": "stringLiteral",
              "value": "2023-04-25"
            }
          }
        }
      }
    ]
  }
]